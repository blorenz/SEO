use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1255970224',
        'name' => 'bug/show.xml.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 22 "template/en/default/bug/show.xml.tmpl"
    $output .=  $context->process('bug/time.html.tmpl');
    $output .=  "\n<?xml version=\"1.0\" ";
#line 23 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['Param', [ 'utf8' ]])) {
    $output .=  "encoding=\"UTF-8\" ";
    }
    
    $output .=  "standalone=\"yes\" ?>\n<!DOCTYPE bugzilla SYSTEM \"";
#line 24 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
    $output .=  "bugzilla.dtd\">\n\n<bugzilla version=\"";
#line 26 "template/en/default/bug/show.xml.tmpl"
    $output .=  '3.4.8';
    $output .=  "\"\n          urlbase=\"";
#line 27 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n          ";
    $output .=  "\n          maintainer=\"";
#line 32 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 35 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n          exporter=\"";
#line 34 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['user', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
    }
    
    $output .=  "\n>\n";
#line 135 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bugs');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
#line 134 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['bug', 0, 'error', 0])) {
    $output .=  "\n    <bug error=\"";
#line 40 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'error', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      <bug_id>";
#line 41 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bug_id>\n    </bug>";
    }
    else {
    $output .=  "\n    <bug>";
#line 49 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'fields', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'field'} = $_tt_value;
#line 48 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, $stash->get('field'), 0])) {
    $output .=  "\n          ";
#line 47 "template/en/default/bug/show.xml.tmpl"
    $output .=  $context->process('bug_field');
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n      ";
#line 54 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'token', 0]) && $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n          <token>";
#line 53 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ $stash->get(['bug', 0, 'id', 0]), $stash->get(['bug', 0, 'delta_ts', 0]) ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</token>";
    }
    
    $output .=  "\n\n      ";
#line 62 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'group', 0])) {
#line 61 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'groups', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'g'} = $_tt_value;
#line 59 "template/en/default/bug/show.xml.tmpl"
    if (!($stash->get(['g', 0, 'ison', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
    $output .=  "\n          <group id=\"";
#line 60 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['g', 0, 'bit', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 60 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['g', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</group>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n\n      ";
#line 78 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'flag', 0])) {
#line 77 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'flag_types', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 76 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
    $output .=  "\n            <flag name=\"";
#line 68 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  id=\"";
#line 69 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  status=\"";
#line 70 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  setter=\"";
#line 71 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 74 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n                  requestee=\"";
#line 73 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
    }
    
    $output .=  "\n            />";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n";
#line 92 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'long_desc', 0])) {
#line 91 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'longdescs', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
#line 82 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['c', 0, 'isprivate', 0]) && ! $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
    $output .=  "\n          <long_desc isprivate=\"";
#line 83 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'isprivate', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n            <who name=\"";
#line 84 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'author', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 84 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'author', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</who>\n            <bug_when>";
#line 85 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %T %z' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'time', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bug_when>";
#line 88 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'timetrackinggroup' ]]) ]]) && ($stash->get(['c', 0, 'work_time', 0]) - 0 ne 0)) {
    $output .=  "\n              <work_time>";
#line 87 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['c', 0, 'work_time', 0]) });
        
        &$_tt_filter($output);
    };
    
    $output .=  "</work_time>";
    }
    
    $output .=  "\n            <thetext>";
#line 89 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'body', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</thetext>\n          </long_desc>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n      ";
#line 129 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'attachment', 0])) {
#line 128 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'attachments', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'a'} = $_tt_value;
#line 96 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['a', 0, 'isprivate', 0]) && ! $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
    $output .=  "\n          <attachment\n              isobsolete=\"";
#line 98 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'isobsolete', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n              ispatch=\"";
#line 99 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'ispatch', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n              isprivate=\"";
#line 100 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'isprivate', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n          >\n            <attachid>";
#line 102 "template/en/default/bug/show.xml.tmpl"
    $output .=  $stash->get(['a', 0, 'id', 0]);
    $output .=  "</attachid>\n            <date>";
#line 103 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %R %z' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'attached', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</date>\n            <desc>";
#line 104 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</desc>\n            <filename>";
#line 105 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'filename', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</filename>\n            <type>";
#line 106 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'contenttype', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</type>\n            <size>";
#line 107 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'datasize', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</size>\n            <attacher>";
#line 108 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'attacher', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</attacher>\n            ";
#line 112 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'token', 0]) && $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n              <token>";
#line 111 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ $stash->get(['a', 0, 'id', 0]), $stash->get(['a', 0, 'modification_time', 0]) ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</token>";
    }
    
#line 115 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['displayfields', 0, 'attachmentdata', 0])) {
    $output .=  "\n              <data encoding=\"base64\">";
#line 114 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('base64')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['a', 0, 'data', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</data>";
    }
    
    $output .=  "\n";
#line 126 "template/en/default/bug/show.xml.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['a', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
    $output .=  "\n              <flag name=\"";
#line 118 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                    id=\"";
#line 119 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                    status=\"";
#line 120 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                    setter=\"";
#line 121 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 124 "template/en/default/bug/show.xml.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '?' && $stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n                      requestee=\"";
#line 123 "template/en/default/bug/show.xml.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('email')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'email', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
    }
    
    $output .=  "\n               />";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n          </attachment>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n      ";
#line 131 "template/en/default/bug/show.xml.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'bug_end' ]]);
    $output .=  "\n\n    </bug>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n</bugzilla>\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'bug_field' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 156 "template/en/default/bug/show.xml.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, $stash->get('field'), 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'val'} = $_tt_value;
        $output .=  "\n    ";
#line 144 "template/en/default/bug/show.xml.tmpl"
        $stash->set('name', '');
#line 153 "template/en/default/bug/show.xml.tmpl"
        if ($stash->get('field') eq 'reporter' || $stash->get('field') eq 'assigned_to' || $stash->get('field') eq 'qa_contact') {
#line 147 "template/en/default/bug/show.xml.tmpl"
        $stash->set('name', $stash->get(['val', 0, 'name', 0]));
#line 148 "template/en/default/bug/show.xml.tmpl"
        
        # CAPTURE
        $stash->set('val', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('email')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['val', 0, 'email', 0]);
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        }
        elsif ($stash->get('field') eq 'cc') {
#line 150 "template/en/default/bug/show.xml.tmpl"
        
        # CAPTURE
        $stash->set('val', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('email')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        }
        elsif ($stash->get('field') eq 'creation_ts' || $stash->get('field') eq 'delta_ts') {
#line 152 "template/en/default/bug/show.xml.tmpl"
        
        # CAPTURE
        $stash->set('val', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %T %z' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        }
        
        $output .=  "\n    <";
#line 154 "template/en/default/bug/show.xml.tmpl"
        $output .=  $stash->get('field');
#line 154 "template/en/default/bug/show.xml.tmpl"
        if ($stash->get('name') ne '') {
        $output .=  " name=\"";
#line 154 "template/en/default/bug/show.xml.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('xml')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('name');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
        }
        
        $output .=  ">";
#line 155 "template/en/default/bug/show.xml.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('xml')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</";
#line 155 "template/en/default/bug/show.xml.tmpl"
        $output .=  $stash->get('field');
        $output .=  ">";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
