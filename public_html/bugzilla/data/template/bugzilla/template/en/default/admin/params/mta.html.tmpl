use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1230090228',
        'name' => 'admin/params/mta.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 21 "template/en/default/admin/params/mta.html.tmpl"
    $stash->set('title', 'Email');
    $stash->set('desc', 'How will outgoing mail be delivered?');
    $output .=  "\n";
#line 1 "template/en/default/admin/params/mta.html.tmpl"
    $stash->set('param_descs', { 'mail_delivery_method' => ("Defines how email is sent, or if it is sent at all.<br>\n                           <ul>\n                             <li>\n                               'Sendmail', 'SMTP' and 'Qmail' are all MTAs.\n                               You need to install a third-party sendmail replacement if\n                               you want to use sendmail on Windows.\n                             </li>\n                             <li>\n                               'Test' is useful for debugging: all email is stored\n                               in 'data/mailer.testfile' instead of being sent.\n                             </li>\n                             <li>\n                               'none' will completely disable email. " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " continues\n                               to act as though it is sending mail, but nothing is sent or\n                               stored.\n                             </li>\n                           </ul>"), 'mailfrom' => ("The email address of the " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " mail daemon.  Some email systems ")  . 'require this to be a valid email address.', 'use_mailer_queue' => ("In a large " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " installation, updating")  . (" " . $stash->get(['terms', 0, 'bugs', 0]) . " can be very slow, because " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " sends all")  . (" email at once. If you enable this parameter, " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will")  . ' queue all mail and then send it in the background. This requires'  . ' that you have installed certain Perl modules (as listed by'  . ' <code>checksetup.pl</code> for this feature), and that you are'  . ' running the <code>jobqueue.pl</code> daemon (otherwise your mail'  . (" won't get sent). This affects all mail sent by " . $stash->get(['terms', 0, 'Bugzilla', 0]) . ",")  . (" not just " . $stash->get(['terms', 0, 'bug', 0]) . " updates."), 'sendmailnow' => 'Sites using anything older than version 8.12 of \'sendmail\' '  . 'can achieve a significant performance increase in the '  . 'UI -- at the cost of delaying the sending of mail -- by '  . 'disabling this parameter. Sites using \'sendmail\' 8.12 or '  . 'higher should leave this on, as they will see no benefit from '  . 'turning it off. Sites using an MTA other than \'sendmail\' '  . ("<b>must</b> leave it on, or no " . $stash->get(['terms', 0, 'bug', 0]) . " mail will be sent."), 'smtpserver' => 'The SMTP server address (if using SMTP for mail delivery).', 'smtp_username' => 'The username to pass to the SMTP server for SMTP authentication. '  . 'Leave this field empty if your SMTP server doesn\'t require authentication.', 'smtp_password' => 'The password to pass to the SMTP server for SMTP authentication. '  . 'This field has no effect if the smtp_username parameter is left empty.', 'smtp_debug' => 'If enabled, this will print detailed information to your'  . ' web server\'s error log about the communication between'  . (" " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " and your SMTP server. You can use this to")  . ' troubleshoot email problems.', 'whinedays' => ("The number of days that we'll let a " . $stash->get(['terms', 0, 'bug', 0]) . " sit untouched in a NEW ")  . 'state before our cronjob will whine at the owner.<br> '  . 'Set to 0 to disable whining.', 'globalwatchers' => 'A comma-separated list of users who should receive a '  . 'copy of every notification mail the system sends.'  });
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
