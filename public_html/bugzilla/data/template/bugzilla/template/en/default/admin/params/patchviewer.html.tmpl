use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634290',
        'name' => 'admin/params/patchviewer.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 21 "template/en/default/admin/params/patchviewer.html.tmpl"
    $stash->set('title', 'Patch Viewer');
    $stash->set('desc', 'Set up third-party applications to run with PatchViewer');
    $output .=  "\n";
#line 1 "template/en/default/admin/params/patchviewer.html.tmpl"
    $stash->set('param_descs', { 'cvsroot' => ('' . "The <a href=\"http://www.cvshome.org\">CVS</a> root that most ")  . 'users of your system will be using for \'cvs diff\'. Used in '  . 'Patch Viewer (\'Diff\' option on patches) to figure out where '  . 'patches are rooted even if users did the \'cvs diff\' from '  . 'different places in the directory structure. (NOTE: if your '  . 'CVS repository is remote and requires a password, you must '  . ("either ensure the " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " user has done a 'cvs login' or ")  . 'specify the password '  . ('' . "<a href=\"http://www.cvshome.org/docs/manual/cvs_2.html#SEC26\">as ")  . 'part of the CVS root</a>.) Leave this blank if you have no '  . 'CVS repository.', 'cvsroot_get' => ("The CVS root " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will be using to get patches from. ")  . 'Some installations may want to mirror their CVS repository on '  . ("the " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " server or even have it on that same server, and ")  . 'thus the repository can be the local file system (and much '  . 'faster). Make this the same as cvsroot if you don\'t '  . 'understand what this is (if cvsroot is blank, make this blank too).', 'bonsai_url' => ('' . "The URL to a <a href=\"http://www.mozilla.org/bonsai.html\">Bonsai</a> ")  . 'server containing information about your CVS repository. '  . 'Patch Viewer will use this information to create links to '  . 'bonsai\'s blame for each section of a patch (it will append '  . '\'/cvsblame.cgi?...\' to this url). Leave this blank if you '  . 'don\'t understand what this is.', 'lxr_url' => ('' . "The URL to an <a href=\"http://sourceforge.net/projects/lxr\">LXR</a> server ")  . 'that indexes your CVS repository. Patch Viewer will use this '  . 'information to create links to LXR for each file in a patch. '  . 'Leave this blank if you don\'t understand what this is.', 'lxr_root' => 'Some LXR installations do not index the CVS repository from the root -- '  . ('' . "<a href=\"http://lxr.mozilla.org/mozilla\">Mozilla's</a>, for ")  . 'example, starts indexing under <code>mozilla/</code>. This '  . 'means URLs are relative to that extra path under the root. '  . 'Enter this if you have a similar situation. Leave it blank '  . 'if you don\'t know what this is.'  });
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
