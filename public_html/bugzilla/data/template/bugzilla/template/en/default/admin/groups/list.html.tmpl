use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1245891894',
        'name' => 'admin/groups/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 34 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Edit Groups', 'subheader' => 'This lets you edit the groups available to put users in.', 'doc_section' => 'groups.html' });
    $output .=  "\n";
#line 40 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set('edit_contentlink', 'editgroups.cgi?action=changeform&amp;group=%%id%%');
#line 41 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set('del_contentlink', 'editgroups.cgi?action=del&amp;group=%%id%%');
    $output .=  "\n";
#line 1 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set('columns', [ { 'name' => 'name', 'heading' => 'Name', 'contentlink' => $stash->get('edit_contentlink')  }, { 'name' => 'description', 'heading' => 'Description', 'allow_html_content' => 1  }, { 'name' => 'userregexp', 'heading' => 'User RegExp'  }, { 'name' => 'is_active_bug_group', 'heading' => ("Use For " . $stash->get(['terms', 0, 'Bugs', 0])), 'align' => 'center'  }, { 'name' => 'type', 'heading' => 'Type', 'align' => 'center'  }, { 'name' => 'action', 'heading' => 'Action'  } ]);
    $output .=  "\n";
#line 69 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set(['overrides', 0, 'is_active_bug_group', 0], { 'is_active_bug_group' => { '0' => { 'override_content' => 1, 'content' => '&nbsp;'  }, '1' => { 'override_content' => 1, 'content' => 'X'  }  }  });
    $stash->set(['overrides', 0, 'userregexp', 0], { 'userregexp' => { '' => { 'override_content' => 1, 'content' => '&nbsp;'  }  }  });
    $output .=  "\n";
#line 102 "template/en/default/admin/groups/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 'chartgroup', 'insidergroup', 'timetrackinggroup', 'querysharegroup' ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
#line 93 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set('special_group', $stash->get(['Param', [ $stash->get('group') ]]));
    $output .=  "\n";
#line 101 "template/en/default/admin/groups/list.html.tmpl"
    if ($stash->get('special_group')) {
#line 1 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set(['overrides', 0, 'action', 0, 'name', 0, $stash->get('special_group'), 0], { 'override_content' => 1, 'content' => ("(used as the '" . $stash->get('group') . "')")  });
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 104 "template/en/default/admin/groups/list.html.tmpl"
    $stash->set(['overrides', 0, 'action', 0, 'isbuggroup', 0], { '1' => { 'override_content' => 1, 'content' => 'Delete', 'override_contentlink' => 1, 'contentlink' => $stash->get('del_contentlink')  }  });
    $stash->set(['overrides', 0, 'type', 0, 'isbuggroup', 0], { '0' => { 'override_content' => 1, 'content' => 'system'  }, '1' => { 'override_content' => 1, 'content' => 'user'  }  });
    $output .=  " \n";
#line 125 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $context->process('admin/table.html.tmpl', { 'columns' => $stash->get('columns'), 'data' => $stash->get('groups'), 'overrides' => $stash->get('overrides') });
    $output .=  "\n\n<p><a href=\"editgroups.cgi?action=add\">Add Group</a></p>\n\n<p>\n  <b>Name</b> is what is used with the B<!-- blah -->ugzilla->user->in_group()\nfunction in any customized cgi files you write that use a given group.\nIt can also be used by people submitting ";
#line 136 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " by email to\nlimit ";
#line 137 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " to a certain set of groups.\n</p>\n\n<p>\n  <b>Description</b> is what will be shown in the ";
#line 141 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " reports\nto members of the group where they can choose whether the ";
#line 142 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\nwill be restricted to others in the same group.\n</p>\n\n<p>\n  <b>User RegExp</b> is optional, and if filled in, will automatically\ngrant membership to this group to anyone with an email address\nthat matches this perl regular expression. Do not forget\nthe trailing '\$'.  Example '\@mycompany\\.com\$'\n</p>\n\n<p>\n  The <b>Use For ";
#line 154 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</b> flag determines whether or not\nthe group is eligible to be used for ";
#line 155 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ". If you remove\nthis flag, it will no longer be possible for users to add ";
#line 156 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  "\nto this group, although ";
#line 157 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " already in the group will remain\nin the group. Doing so is a much less drastic way to stop a group\nfrom growing than deleting the group as well as a way to maintain\nlists of users without cluttering the lists of groups used\nfor ";
#line 161 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " restrictions.\n</p>\n\n<p>\n  The <b>Type</b> field identifies system groups.\n</p>\n";
#line 168 "template/en/default/admin/groups/list.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
