use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634291',
        'name' => 'admin/products/edit-common.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 24 "template/en/default/admin/products/edit-common.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 31 "template/en/default/admin/products/edit-common.html.tmpl"
    if ($stash->get(['Param', [ 'useclassification' ]])) {
    $output .=  "\n  <tr>\n    <th align=\"right\"><b>Classification:</b></th>\n    <td><b>";
#line 29 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['classification', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</b></td>\n  </tr>";
    }
    
    $output .=  "\n    \n<tr>\n  <th align=\"right\">Product:</th>\n  <td><input size=\"64\" maxlength=\"64\" name=\"product\" \n             value=\"";
#line 36 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  </td>\n</tr>\n<tr>\n  <th align=\"right\">Description:</th>\n  <td><textarea rows=\"4\" cols=\"64\" wrap=\"virtual\" name=\"description\">";
#line 42 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</textarea>\n  </td>\n</tr>\n";
#line 70 "template/en/default/admin/products/edit-common.html.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
    $output .=  "  <tr>\n    <th align=\"right\">URL describing milestones for this product:</th>\n    <td><input type=\"text\" size=\"64\" maxlength=\"255\" name=\"milestoneurl\"\n               value=\"";
#line 50 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'milestoneurl', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </td>\n  </tr>\n  <tr>\n    <th align=\"right\">Default milestone:</th>\n    <td>";
#line 67 "template/en/default/admin/products/edit-common.html.tmpl"
    if ($stash->get(['product', 0, 'milestones', 0, 'size', 0])) {
    $output .=  "\n        <select name=\"defaultmilestone\">";
#line 62 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'milestones', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'m'} = $_tt_value;
    $output .=  "\n            <option value=\"";
#line 59 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['m', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 60 "template/en/default/admin/products/edit-common.html.tmpl"
    if ($stash->get(['m', 0, 'name', 0]) eq $stash->get(['product', 0, 'defaultmilestone', 0])) {
    $output .=  ('' . " selected=\"selected\"");
    }
    
    $output .=  ">";
#line 61 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['m', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>";
    }
    else {
    $output .=  "\n        <input type=\"text\" size=\"20\" maxlength=\"20\" name=\"defaultmilestone\"\n               value=\"";
#line 66 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'defaultmilestone', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
    }
    
    $output .=  "\n    </td>\n  </tr>";
    }
    
    $output .=  "\n    \n<tr>\n  <th align=\"right\">Closed for ";
#line 73 "template/en/default/admin/products/edit-common.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " entry:</th>\n  <td><input type=\"checkbox\" name=\"disallownew\" value=\"1\"";
#line 76 "template/en/default/admin/products/edit-common.html.tmpl"
    if ($stash->get(['product', 0, 'disallownew', 0]) eq '1') {
    $output .=  "\n             checked=\"checked\"";
    }
    
    $output .=  ">\n  </td>\n</tr>\n";
#line 87 "template/en/default/admin/products/edit-common.html.tmpl"
    if (! $stash->get(['Param', [ 'usevotes' ]])) {
    $output .=  "\n<tr class=\"param_disabled\">\n  <td colspan=\"2\"\n      style=\"font-family: arial; font-style: italic; font-size: 0.7em; text-align: center;\">\n    The 'usevotes' parameter is currently 'off'. These voting\n    settings will take effect when the parameter is next enabled.</td>\n</tr>";
    }
    
    $output .=  "\n<tr ";
#line 88 "template/en/default/admin/products/edit-common.html.tmpl"
    if (! $stash->get(['Param', [ 'usevotes' ]])) {
    $output .=  "class=\"param_disabled\" ";
    }
    
    $output .=  ">\n  <th align=\"right\">Maximum votes per person:</th>\n  <td><input size=\"5\" maxlength=\"5\" name=\"votesperuser\" \n             value=\"";
#line 91 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'votesperuser', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  </td>\n</tr>\n<tr ";
#line 94 "template/en/default/admin/products/edit-common.html.tmpl"
    if (! $stash->get(['Param', [ 'usevotes' ]])) {
    $output .=  "class=\"param_disabled\" ";
    }
    
    $output .=  ">\n  <th align=\"right\">\n    Maximum votes a person can put on a single ";
#line 96 "template/en/default/admin/products/edit-common.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ":\n  </th>\n  <td><input size=\"5\" maxlength=\"5\" name=\"maxvotesperbug\" \n             value=\"";
#line 99 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'maxvotesperbug', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  </td>\n</tr>\n<tr ";
#line 102 "template/en/default/admin/products/edit-common.html.tmpl"
    if (! $stash->get(['Param', [ 'usevotes' ]])) {
    $output .=  "class=\"param_disabled\" ";
    }
    
    $output .=  ">\n  <th align=\"right\">\n    Confirmation threshold:\n  </th>\n  <td>\n    Enter the number of votes ";
#line 107 "template/en/default/admin/products/edit-common.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " in this product needs to\n    automatically get out of the\n    <a href=\"page.cgi?id=fields.html#status\">";
#line 109 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ 'UNCONFIRMED' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n    state.<br>\n    <input size=\"5\" maxlength=\"5\" name=\"votestoconfirm\" \n           value=\"";
#line 112 "template/en/default/admin/products/edit-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'votestoconfirm', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  </td>\n</tr>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
