use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249055981',
        'name' => 'admin/flag-type/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 22 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 24 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/js-products.html.tmpl');
    $output .=  "\n";
#line 26 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Administer Flag Types', 'style' => '
        table#flag_types_bugs tr th,
        table#flag_types_attachments tr th { text-align: left; }
        .inactive { color: #787878; }
        .multiplicable { display: block; }
      ', 'onload' => 'var f = document.flagtype_form; selectProduct(f.product, f.component, null, null, \'__All__\');', 'javascript_urls' => [ 'js/productform.js' ], 'doc_section' => 'flags-overview.html#flag-types' });
    $output .=  "\n\n<p>\n  Flags are markers that identify whether ";
#line 40 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " or attachment has been granted\n  or denied some status.  Flags appear in the UI as a name and a status symbol\n  (\"+\" for granted, \"-\" for denied, and \"?\" for statuses requested by users).\n</p>\n\n<p>\n  For example, you might define a \"review\" status for users to request review\n  for their patches.  When a patch writer requests review, the string \"review?\"\n  will appear in the attachment.  When a patch reviewer reviews the patch,\n  either the string \"review+\" or the string \"review-\" will appear in the patch,\n  depending on whether the patch passed or failed review.\n</p>\n\n<p>\n  You can restrict the list of flag types to those available for a given product\n  and component. If a product is selected with no component, only flag types\n  which are available to at least one component of the product are shown.\n</p>\n\n<form id=\"flagtype_form\" name=\"flagtype_form\" action=\"editflagtypes.cgi\" method=\"get\">\n  <table>\n    <tr>\n      <th><label for=\"product\">Product:</label></th>\n      <td>\n        <select name=\"product\" onchange=\"selectProduct(this, this.form.component, null, null, '__Any__');\">\n          <option value=\"\">__Any__</option>";
#line 70 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'prod'} = $_tt_value;
    $output .=  "\n            <option value=\"";
#line 67 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['prod', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 68 "template/en/default/admin/flag-type/list.html.tmpl"
    if ($stash->get('selected_product') eq $stash->get(['prod', 0, 'name', 0])) {
    $output .=  ' selected';
    }
    
    $output .=  ">";
#line 69 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['prod', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n      </td>\n      <th><label for=\"component\">Component:</label></th>\n      <td>\n        <select name=\"component\">\n          <option value=\"\">__Any__</option>";
#line 81 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('components');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'comp'} = $_tt_value;
    $output .=  "\n            <option value=\"";
#line 78 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('comp');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 79 "template/en/default/admin/flag-type/list.html.tmpl"
    if ($stash->get('selected_component') eq $stash->get('comp')) {
    $output .=  ' selected';
    }
    
    $output .=  ">";
#line 80 "template/en/default/admin/flag-type/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('comp');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n      </td>\n      <td>\n        <input type=\"checkbox\" id=\"show_flag_counts\" name=\"show_flag_counts\" value=\"1\"\n               ";
#line 86 "template/en/default/admin/flag-type/list.html.tmpl"
    if ($stash->get('show_flag_counts')) {
    $output .=  'checked="checked"';
    }
    
    $output .=  ">\n        <label for=\"show_flag_counts\">Show flag counts</label>\n      </td>\n      <td><input type=\"submit\" id=\"submit\" value=\"Filter\"></td>\n    </tr>\n  </table>\n</form>\n\n<h3>Flag Types for ";
#line 94 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</h3>\n";
#line 96 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('display_flag_types', { 'types' => $stash->get('bug_types'), 'types_id' => 'bugs' });
    $output .=  "\n\n<p>\n  <a href=\"editflagtypes.cgi?action=enter&amp;target_type=bug\">Create Flag Type for ";
#line 99 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</a>\n</p>\n\n<h3>Flag Types for Attachments</h3>\n";
#line 104 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('display_flag_types', { 'types' => $stash->get('attachment_types'), 'types_id' => 'attachments' });
    $output .=  "\n\n<p>\n  <a href=\"editflagtypes.cgi?action=enter&amp;target_type=attachment\">Create Flag Type For Attachments</a>\n</p>\n";
#line 110 "template/en/default/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'display_flag_types' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <table id=\"flag_types_";
#line 114 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('types_id');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" cellspacing=\"0\" cellpadding=\"4\" border=\"1\">\n\n    <tr>\n      <th>Edit name ...</th>\n      <th>Description</th>\n      <th>Sortkey</th>\n      <th>Properties</th>\n      <th>Grant group</th>\n      <th>Request group</th>";
#line 127 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get('show_flag_counts')) {
        $output .=  "\n        <th>Flags</th>\n        ";
#line 126 "template/en/default/admin/flag-type/list.html.tmpl"
        $stash->set('state_desc', { 'granted' => 'granted', 'denied' => 'denied', 'pending' => 'pending'  });
        }
        
        $output .=  "\n      <th>Actions</th>\n    </tr>\n";
#line 171 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get('types');
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'type'} = $_tt_value;
        $output .=  "\n\n      <tr class=\"";
#line 133 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_active', 0])) {
        $output .=  "active";
        }
        else {
        $output .=  "inactive";
        }
        
        $output .=  "\">\n        <td><a href=\"editflagtypes.cgi?action=edit&amp;id=";
#line 134 "template/en/default/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">";
#line 134 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('no_break')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a></td>\n        <td>";
#line 135 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</td>\n        <td align=\"right\">";
#line 136 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'sortkey', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</td>\n        <td>";
#line 140 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_requestable', 0])) {
        $output .=  "\n            <span class=\"requestable\">requestable</span>";
        }
        
#line 143 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) {
        $output .=  "\n            <span class=\"requesteeble\">(specifically)</span>";
        }
        
#line 146 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_multiplicable', 0])) {
        $output .=  "\n            <span class=\"multiplicable\">multiplicable</span>";
        }
        
        $output .=  "\n        </td>\n        <td>";
#line 148 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'grant_group', 0])) {
#line 148 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'grant_group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "</td>\n        <td>";
#line 149 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'request_group', 0])) {
#line 149 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'request_group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "</td>";
#line 164 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get('show_flag_counts')) {
        $output .=  "\n          <td>";
#line 162 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = [ 'granted', 'pending', 'denied' ];
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR2:   while (! $_tt_error) {
                    $stash->{'state'} = $_tt_value;
#line 153 "template/en/default/admin/flag-type/list.html.tmpl"
        $stash->set('bug_list', $stash->get(['bug_lists', 0, $stash->get(['type', 0, 'id', 0]), 0, $stash->get('state'), 0]) || [ ]);
#line 161 "template/en/default/admin/flag-type/list.html.tmpl"
        if ($stash->get(['bug_list', 0, 'size', 0])) {
        $output .=  "\n                <a href=\"buglist.cgi?bug_id=";
#line 155 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug_list', 0, 'unique', 0, 'nsort', 0, 'join', [ ',' ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 156 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug_list', 0, 'size', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 156 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['state_desc', 0, $stash->get('state'), 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n                </a>\n                <br>";
        }
        else {
        $output .=  "\n                0 ";
#line 160 "template/en/default/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['state_desc', 0, $stash->get('state'), 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "<br>";
        }
        ;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n          </td>";
        }
        
        $output .=  "\n        <td>\n          <a href=\"editflagtypes.cgi?action=copy&amp;id=";
#line 166 "template/en/default/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">Copy</a>\n          | <a href=\"editflagtypes.cgi?action=confirmdelete&amp;id=";
#line 167 "template/en/default/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">Delete</a>\n        </td>\n      </tr>\n";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n\n  </table>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
