use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1261924391',
        'name' => 'email/whine.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template/en/default/email/whine.txt.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\nFrom: ";
#line 22 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 23 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('email');
#line 23 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'emailsuffix' ]]);
    $output .=  "\nSubject: Your ";
#line 24 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " ";
#line 24 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " list needs attention.\nX-Bugzilla-Type: whine\n\n[This e-mail has been automatically generated.]\n\nYou have one or more ";
#line 29 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " assigned to you in the ";
#line 29 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " ";
#line 30 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " tracking system (";
#line 30 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  ") that require\nattention.\n\nAll of these ";
#line 33 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " are in the ";
#line 33 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'NEW' ]]);
    $output .=  " or ";
#line 34 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'REOPENED' ]]);
    $output .=  " state, and have not been\ntouched in ";
#line 35 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'whinedays' ]]);
    $output .=  " days or more.\nYou need to take a look at them, and decide on an initial action.\n\nGenerally, this means one of three things:\n\n(1) You decide this ";
#line 40 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " is really quick to deal with (like, it's ";
#line 40 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_resolution', [ 'INVALID' ]]);
    $output .=  "),\n    and so you get rid of it immediately.\n(2) You decide the ";
#line 42 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " doesn't belong to you, and you reassign it to\n    someone else. (Hint: if you don't know who to reassign it to, make\n    sure that the Component field seems reasonable, and then use the\n    \"Reset Assignee to default\" option.)\n(3) You decide the ";
#line 46 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " belongs to you, but you can't solve it this moment.\n    Accept the ";
#line 47 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " by setting the status to ";
#line 47 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'ASSIGNED' ]]);
    $output .=  ".\n\nTo get a list of all ";
#line 49 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'NEW' ]]);
    $output .=  "/";
#line 49 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'REOPENED' ]]);
    $output .=  " ";
#line 49 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ", you can use this URL (bookmark\nit if you like!):\n";
#line 52 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "buglist.cgi?bug_status=NEW&bug_status=REOPENED&assigned_to=";
#line 52 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('email');
    $output .=  "\n\nOr, you can use the general query page, at \n";
#line 55 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "query.cgi\n\nAppended below are the individual URLs to get to all of your ";
#line 57 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['get_status', [ 'NEW' ]]);
    $output .=  " ";
#line 57 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  "\nthat haven't been touched for ";
#line 58 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'whinedays' ]]);
    $output .=  " days or more.\n\nYou will get this message once a day until you've dealt with these ";
#line 60 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  "!\n";
#line 65 "template/en/default/email/whine.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bugs');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
    $output .=  "\n ";
#line 63 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'summary', 0]);
    $output .=  "\n    -> ";
#line 64 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "show_bug.cgi?id=";
#line 64 "template/en/default/email/whine.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'id', 0]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
