use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1206953466',
        'name' => 'reports/duplicates.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 35 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 43 "template/en/default/reports/duplicates.html.tmpl"
    if ($stash->get(['query_products', 0, 'size', 0])) {
#line 40 "template/en/default/reports/duplicates.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "\n    Most Frequently Reported ";
#line 39 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " for ";
#line 39 "template/en/default/reports/duplicates.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query_products', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    }
    else {
#line 1 "template/en/default/reports/duplicates.html.tmpl"
    $stash->set('title', ("Most Frequently Reported " . $stash->get(['terms', 0, 'Bugs', 0])));
    }
    
    $output .=  "\n";
#line 45 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'style' => '.resolved { background-color: #d9d9d9; color: #000000; }' });
    $output .=  "\n\n<p>\n  <a href=\"#explanation\">What is this data?</a>\n  <br>\n  <a href=\"#params\">Change parameters</a>\n</p>\n";
#line 56 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $context->process('reports/duplicates-table.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n";
#line 60 "template/en/default/reports/duplicates.html.tmpl"
    $stash->set('bug_ids_string', $stash->get(['vis_bug_ids', 0, 'join', [ ',' ]]));
    $output .=  "\n\n<h3><a name=\"params\">Change Parameters</a></h3>\n\n<form method=\"get\" action=\"duplicates.cgi\">\n  <input type=\"hidden\" name=\"sortby\" value=\"";
#line 65 "template/en/default/reports/duplicates.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortby');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"reverse\" value=\"";
#line 66 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get('reverse');
    $output .=  "\">\n  <input type=\"hidden\" name=\"bug_id\" value=\"";
#line 67 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get('bug_ids_string');
    $output .=  "\">\n  <table>\n    <tr>\n      <td>When sorting or restricting,\n          work with:</td>\n      <td>\n        <input type=\"radio\" name=\"sortvisible\" id=\"entirelist\" value=\"0\"\n          ";
#line 74 "template/en/default/reports/duplicates.html.tmpl"
    if (! $stash->get('sortvisible')) {
    $output .=  'checked';
    }
    
    $output .=  ">\n        <label for=\"entirelist\">\n          entire list\n        </label>\n        <br>\n        <input type=\"radio\" name=\"sortvisible\" id=\"visiblelist\" value=\"1\"\n          ";
#line 80 "template/en/default/reports/duplicates.html.tmpl"
    if ($stash->get('sortvisible')) {
    $output .=  'checked';
    }
    
    $output .=  ">\n        <label for=\"visiblelist\">\n          currently visible list\n        </label>\n      </td>\n      <td rowspan=\"4\" valign=\"top\">Restrict to products:</td>\n      <td rowspan=\"4\" valign=\"top\">\n        <select name=\"product\" size=\"5\" multiple=\"multiple\">";
#line 92 "template/en/default/reports/duplicates.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'p'} = $_tt_value;
    $output .=  "\n            <option name=\"";
#line 89 "template/en/default/reports/duplicates.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 90 "template/en/default/reports/duplicates.html.tmpl"
    if ($stash->get(['lsearch', [ $stash->get('query_products'), $stash->get(['p', 0, 'name', 0]) ]]) ne -1) {
    $output .=  ' selected';
    }
    
    $output .=  "\n            >";
#line 91 "template/en/default/reports/duplicates.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['p', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n        </select>\n      </td>\n     </tr>\n\n    <tr>\n      <td>Max rows:</td>\n      <td>\n        <input size=\"4\" name=\"maxrows\" value=\"";
#line 100 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get('maxrows');
    $output .=  "\">\n      </td>\n    </tr>\n\n    <tr>\n      <td>Change column is change in the last:</td>\n      <td>\n        <input size=\"4\" name=\"changedsince\" value=\"";
#line 107 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get('changedsince');
    $output .=  "\"> days\n      </td>\n    </tr>\n\n    <tr>\n      <td>\n        <label for=\"openonly\">\n          Open ";
#line 114 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " only:\n        </label>\n      </td>\n      <td>\n        <input type=\"checkbox\" name=\"openonly\" id=\"openonly\" value=\"1\"\n          ";
#line 119 "template/en/default/reports/duplicates.html.tmpl"
    if ($stash->get('openonly')) {
    $output .=  'checked';
    }
    
    $output .=  ">\n      </td>\n    </tr>\n\n  </table>\n\n  <input type=\"submit\" id=\"change\" value=\"Change\">\n</form>\n\n<form method=\"post\" action=\"buglist.cgi\">\n  <input type=\"hidden\" name=\"bug_id\" value=\"";
#line 129 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get('bug_ids_string');
    $output .=  "\">\n  <input type=\"hidden\" name=\"order\" value=\"Reuse same sort as last time\">\n  Or just give this to me as a <input type=\"submit\" id=\"list\" \n                                value=\"";
#line 132 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " list\">.\n  (Note: the order may not be the same.)\n</form>\n\n<hr>\n\n<b>\n  <a name=\"explanation\">What are \"Most Frequently Reported ";
#line 139 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "\"?</a>\n</b>\n\n<blockquote>\n  The Most Frequent ";
#line 143 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " page lists the known open ";
#line 143 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " which\n  are reported most frequently. It is\n  automatically generated from the ";
#line 145 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " database every 24 hours, by\n  counting the number of direct and indirect duplicates of ";
#line 146 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n  This information is provided in order to assist in minimizing\n  the amount of duplicate ";
#line 148 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " entered into ";
#line 148 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  ", which\n  saves time for Quality Assurance engineers who have to triage the ";
#line 149 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n</blockquote>\n\n<b>How do I use this list?</b>\n\n<ul>\n  <li>Review the most frequent ";
#line 155 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " list.</li>\n  <li>If your problem is listed:</li>\n\n  <ul>\n    <li>Click on the ";
#line 159 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " number to confirm that you have found the\n      same ";
#line 160 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", and comment if you have additional information\n      or move on with your testing of the product.\n    </li>\n  </ul>\n\n  <li>If your problem not listed:</li>\n\n  <ul>\n    <li><a href=\"query.cgi\">Try and locate a similar ";
#line 168 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "</a>\n        that has already been filed.</li>\n    <li>If you find your ";
#line 170 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " in ";
#line 170 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  ",\n        feel free to comment with any new or additional data you may have.</li>\n    <li>If you cannot find your problem already documented in ";
#line 172 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  ",\n        <a href=\"enter_bug.cgi\">file a new ";
#line 173 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "</a>.</li>\n  </ul>\n</ul>\n";
#line 177 "template/en/default/reports/duplicates.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
