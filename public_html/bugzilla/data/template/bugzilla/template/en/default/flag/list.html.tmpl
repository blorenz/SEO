use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1237306978',
        'name' => 'flag/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n<script type=\"text/javascript\">\n<!-- \n  // Enables or disables a requestee field depending on whether or not\n  // the user is requesting the corresponding flag.\n  function toggleRequesteeField(flagField, no_focus)\n  {\n    // Convert the ID of the flag field into the ID of its corresponding\n    // requestee field and then use the ID to get the field.\n    var id = flagField.name.replace(/flag(_type)?-(\\d+)/, \"requestee\$1-\$2\");\n    var requesteeField = document.getElementById(id);\n    if (!requesteeField) return;\n    \n    // Enable or disable the requestee field based on the value\n    // of the flag field.\n    if (flagField.value == \"?\") {\n        requesteeField.disabled = false;\n        if (!no_focus) requesteeField.focus();\n    } else                         \n        requesteeField.disabled = true;\n  }\n  \n  // Disables requestee fields when the window is loaded since they shouldn't\n  // be enabled until the user requests that flag type.\n  function disableRequesteeFields()\n  {\n    var inputElements = document.getElementsByTagName(\"input\");\n    var selectElements = document.getElementsByTagName(\"select\");\n    //You cannot update Node lists, so you must create an array to combine the NodeLists\n    var allElements = [];\n    for( var i=0; i < inputElements.length; i++ ) {\n        allElements[allElements.length] = inputElements.item(i);\n    }\n    for( var i=0; i < selectElements.length; i++ ) { //Combine inputs with selects\n        allElements[allElements.length] = selectElements.item(i);\n    }\n    var inputElement, id, flagField;\n    for ( var i=0 ; i<allElements.length ; i++ )\n    {\n      inputElement = allElements[i];\n      if (inputElement.name.search(/^requestee(_type)?-(\\d+)\$/) != -1)\n      {\n        // Convert the ID of the requestee field into the ID of its corresponding\n        // flag field and then use the ID to get the field.\n        id = inputElement.name.replace(/requestee(_type)?-(\\d+)/, \"flag\$1-\$2\");\n        flagField = document.getElementById(id);\n        if (flagField && flagField.value != \"?\")\n            inputElement.disabled = true;\n      }\n    }\n  }\n  YAHOO.util.Event.addListener(window, \"load\", disableRequesteeFields);\n// -->\n</script>\n";
#line 292 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n\n";
    $output .=  "\n";
#line 85 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_table_id', 'flags', 1);
    $output .=  "\n\n<table id=\"";
#line 87 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('flag_table_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 99 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get('flag_no_header'))) {
    $output .=  "\n    <tr>\n      <th colspan=\"3\">\n        Flags:\n      </th>";
#line 97 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n        <th>\n          Requestee:\n        </th>";
    }
    
    $output .=  "\n    </tr>";
    }
    
    $output .=  "\n\n  ";
#line 223 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
    $output .=  "\n    \n    ";
#line 172 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
    $output .=  "\n      <tr>\n        <td>";
#line 108 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n        </td>\n        <td>\n          <label title=\"";
#line 111 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                 for=\"flag-";
#line 112 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\">";
#line 113 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label>\n        </td>\n        <td>\n          <select id=\"flag-";
#line 116 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\" name=\"flag-";
#line 116 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\" \n                  title=\"";
#line 117 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  onchange=\"toggleRequesteeField(this);\"\n                  class=\"flag_select\">\n            ";
#line 123 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) {
    $output .=  "\n              <option value=\"X\"></option>";
    }
    
#line 136 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_active', 0])) {
#line 127 "template/en/default/flag/list.html.tmpl"
    if (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['flag', 0, 'status', 0]) eq '?') {
    $output .=  "\n                <option value=\"?\" ";
#line 126 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '?') {
    $output .=  'selected';
    }
    
    $output .=  ">?</option>";
    }
    
#line 130 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'status', 0]) eq '+') {
    $output .=  "\n                <option value=\"+\" ";
#line 129 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '+') {
    $output .=  'selected';
    }
    
    $output .=  ">+</option>";
    }
    
#line 133 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'status', 0]) eq '-') {
    $output .=  "\n                <option value=\"-\" ";
#line 132 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '-') {
    $output .=  'selected';
    }
    
    $output .=  ">-</option>";
    }
    
    }
    else {
    $output .=  "\n              <option value=\"";
#line 135 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
    $output .=  "\" selected=\"selected\">";
#line 135 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
    $output .=  "</option>";
    }
    
    $output .=  "\n          </select>\n        </td>";
#line 170 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n          <td>";
#line 168 "template/en/default/flag/list.html.tmpl"
    if (($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) || $stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n              <span style=\"white-space: nowrap;\">";
#line 166 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 144 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_custom_list', $stash->get(['flag', 0, 'type', 0, 'grant_list', 0]));
#line 150 "template/en/default/flag/list.html.tmpl"
    if (! ($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0]))) {
    $output .=  "\n                    ";
#line 149 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_custom_list', [ $stash->get(['flag', 0, 'requestee', 0]) ]);
    }
    
#line 1 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => ("requestee-" . $stash->get(['flag', 0, 'id', 0])), 'id' => ("requestee-" . $stash->get(['flag', 0, 'id', 0])), 'value' => $stash->get(['flag', 0, 'requestee', 0, 'login', 0]), 'multiple' => 0, 'emptyok' => 1, 'custom_userlist' => $stash->get('flag_custom_list') });
    }
    else {
    $output .=  "\n                  (<input type=\"text\" size=\"30\" maxlength=\"255\"\n                          id=\"requestee-";
#line 161 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\" \n                          name=\"requestee-";
#line 162 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\"";
#line 165 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '?' && $stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n                            value=\"";
#line 164 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
    }
    
    $output .=  ">)";
    }
    
    $output .=  "\n              </span>";
    }
    
    $output .=  "\n          </td>";
    }
    
    $output .=  "\n      </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    \n    ";
#line 222 "template/en/default/flag/list.html.tmpl"
    if ((! $stash->get(['type', 0, 'flags', 0]) || $stash->get(['type', 0, 'flags', 0, 'size', 0]) eq 0) && $stash->get(['type', 0, 'is_active', 0])) {
    $output .=  "\n      <tr>\n        <td>&nbsp;</td>\n        <td>\n          <label title=\"";
#line 179 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                 for=\"flag_type-";
#line 180 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\">";
#line 181 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label>\n        </td>\n        <td>\n          <select id=\"flag_type-";
#line 184 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\" name=\"flag_type-";
#line 184 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\" \n                  title=\"";
#line 185 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 186 "template/en/default/flag/list.html.tmpl"
    if (!(($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]))) {
    $output .=  ('' . " disabled=\"disabled\"");
    }
    
    $output .=  "\n                  onchange=\"toggleRequesteeField(this);\"\n                  class=\"flag_select\">\n            <option value=\"X\"></option>";
#line 192 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) {
    $output .=  "\n              <option value=\"?\">?</option>";
    }
    
#line 196 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]])) {
    $output .=  "\n              <option value=\"+\">+</option>\n              <option value=\"-\">-</option>";
    }
    
    $output .=  "\n          </select>\n        </td>";
#line 220 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n          <td>";
#line 218 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) {
    $output .=  "\n              <span style=\"white-space: nowrap;\">";
#line 216 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 1 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'id' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'multiple' => $stash->get(['type', 0, 'is_multiplicable', 0]) * 3, 'emptyok' => ! $stash->get(['type', 0, 'is_multiplicable', 0]), 'value' => '', 'custom_userlist' => $stash->get(['type', 0, 'grant_list', 0]) });
    }
    else {
    $output .=  "\n                  (<input type=\"text\" size=\"30\" maxlength=\"255\"\n                          id=\"requestee_type-";
#line 214 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\"\n                          name=\"requestee_type-";
#line 215 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\">)";
    }
    
    $output .=  "\n              </span>";
    }
    
    $output .=  "\n          </td>";
    }
    
    $output .=  "\n      </tr>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  ";
#line 277 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 227 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get(['type', 0, 'flags', 0]) && $stash->get(['type', 0, 'flags', 0, 'size', 0]) > 0 && $stash->get(['type', 0, 'is_multiplicable', 0]) && $stash->get(['type', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 231 "template/en/default/flag/list.html.tmpl"
    if (! $stash->get('separator_displayed')) {
    $output .=  "\n        <tr><td colspan=\"3\"><hr></td></tr>";
#line 230 "template/en/default/flag/list.html.tmpl"
    $stash->set('separator_displayed', 1);
    }
    
    $output .=  "\n    <tr>\n      <td colspan=\"2\">\n        addl. <label title=\"";
#line 234 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                     for=\"flag_type-";
#line 235 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\">";
#line 236 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label>\n      </td>\n      <td>\n        <select id=\"flag_type-";
#line 239 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\" name=\"flag_type-";
#line 239 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\" \n                title=\"";
#line 240 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 241 "template/en/default/flag/list.html.tmpl"
    if (!(($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]))) {
    $output .=  ('' . " disabled=\"disabled\"");
    }
    
    $output .=  "\n                onchange=\"toggleRequesteeField(this);\"\n                class=\"flag_select\">\n          <option value=\"X\"></option>";
#line 247 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) {
    $output .=  "\n            <option value=\"?\">?</option>";
    }
    
#line 251 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]])) {
    $output .=  "\n            <option value=\"+\">+</option>\n            <option value=\"-\">-</option>";
    }
    
    $output .=  "\n        </select>\n      </td>";
#line 275 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n        <td>";
#line 273 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) {
    $output .=  "\n            <span style=\"white-space: nowrap;\">";
#line 271 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 1 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'id' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'multiple' => $stash->get(['type', 0, 'is_multiplicable', 0]) * 3, 'emptyok' => ! $stash->get(['type', 0, 'is_multiplicable', 0]), 'value' => '', 'custom_userlist' => $stash->get(['type', 0, 'grant_list', 0]) });
    }
    else {
    $output .=  "\n                (<input type=\"text\" size=\"30\" maxlength=\"255\"\n                        id=\"requestee_type-";
#line 269 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\" \n                        name=\"requestee_type-";
#line 270 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\">)";
    }
    
    $output .=  "\n            </span>";
    }
    
    $output .=  "\n        </td>";
    }
    
    $output .=  "\n    </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n</table>\n";
    }
    else {
    $output .=  "\n  ";
#line 291 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 290 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
#line 285 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n      ";
#line 286 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
#line 286 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
#line 289 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n        (";
#line 288 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ")";
    }
    
    $output .=  "<br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
