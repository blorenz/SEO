use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1231430996',
        'name' => 'account/cancel-token.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 22 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\nFrom: ";
#line 24 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 25 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('emailaddress');
    $output .=  "\nSubject: ";
#line 26 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $context->process('subject');
    $output .=  "\nX-Bugzilla-Type: admin\n\nA request was canceled from ";
#line 29 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('remoteaddress');
    $output .=  ".\n\nIf you did not request this, it could be either an honest\nmistake or someone attempting to break into your ";
#line 32 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account.\n\nTake a look at the information below and forward this email\nto ";
#line 35 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " if you suspect foul play.\n\n            Token: ";
#line 37 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('token');
    $output .=  "\n       Token Type: ";
#line 38 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('tokentype');
    $output .=  "\n             User: ";
#line 39 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('emailaddress');
    $output .=  "\n       Issue Date: ";
#line 40 "template/en/default/account/cancel-token.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %H:%M:%S %Z', $stash->get('timezone') ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('issuedate');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n       Event Data: ";
#line 41 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $stash->get('eventdata');
    $output .=  "\nCanceled Because: ";
#line 42 "template/en/default/account/cancel-token.txt.tmpl"
    $output .=  $context->process('cancelactionmessage');
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'cancelactionmessage' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 105 "template/en/default/account/cancel-token.txt.tmpl"
        if ($stash->get('cancelaction') eq 'account_exists') {
        $output .=  "\n    Account ";
#line 58 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('email');
        $output .=  " already exists.\n";
        }
        elsif ($stash->get('cancelaction') eq 'email_change_canceled') {
        $output .=  "\n    The request to change the email address for\n    the ";
#line 62 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('old_email');
        $output .=  " account to ";
#line 62 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('new_email');
        $output .=  " has\n    been canceled.\n";
        }
        elsif ($stash->get('cancelaction') eq 'email_change_canceled_reinstated') {
        $output .=  "\n    The request to change the email address for your account\n    to ";
#line 67 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('new_email');
        $output .=  " has been canceled. Your old account\n    settings have been reinstated.\n";
        }
        elsif ($stash->get('cancelaction') eq 'emailold_change_canceled') {
        $output .=  "\n    The request to change the email address for your account\n    to ";
#line 72 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('new_email');
        $output .=  " has been canceled.\n";
        }
        elsif ($stash->get('cancelaction') eq 'password_change_canceled') {
        $output .=  "\n    You have requested cancellation.\n";
        }
        elsif ($stash->get('cancelaction') eq 'account_creation_canceled') {
        $output .=  "\n    The creation of the user account ";
#line 78 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('emailaddress');
        $output .=  "\n    has been canceled.\n";
        }
        elsif ($stash->get('cancelaction') eq 'user_logged_in') {
        $output .=  "\n    You have logged in.\n";
        }
        elsif ($stash->get('cancelaction') eq 'wrong_token_for_changing_passwd') {
        $output .=  "\n    You have tried to use the token to change the password.\n";
        }
        elsif ($stash->get('cancelaction') eq 'wrong_token_for_cancelling_email_change') {
        $output .=  "\n    You have tried to use the token to cancel the email address change.\n";
        }
        elsif ($stash->get('cancelaction') eq 'wrong_token_for_confirming_email_change') {
        $output .=  "\n    You have tried to use the token to confirm the email address change.\n";
        }
        elsif ($stash->get('cancelaction') eq 'wrong_token_for_creating_account') {
        $output .=  "\n    You have tried to use the token to create a user account.\n";
        }
        else {
        $output .=  "\n    ";
        $output .=  "\n    You are using ";
#line 99 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
        $output .=  "'s cancel-token function incorrectly. You\n    passed in the string '";
#line 100 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('cancelaction');
        $output .=  "'. The correct use is to pass\n    in a tag, and define that tag in the file cancel-token.txt.tmpl.\n\n    If you are a ";
#line 103 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
        $output .=  " end-user seeing this message, please forward this\n    email to ";
#line 104 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get(['Param', [ 'maintainer' ]]);
        $output .=  ".";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'subject' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 53 "template/en/default/account/cancel-token.txt.tmpl"
        if ($stash->get('tokentype') eq 'new_account') {
        $output .=  "\n    User account creation request canceled";
        }
        elsif ($stash->get('tokentype') eq 'password') {
        $output .=  "\n    Password change request canceled";
        }
        elsif ($stash->get('tokentype') eq 'emailnew' || $stash->get('tokentype') eq 'emailold') {
        $output .=  "\n    Email change request canceled";
        }
        else {
#line 52 "template/en/default/account/cancel-token.txt.tmpl"
        $output .=  $stash->get('tokentype');
        $output .=  " token canceled";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
