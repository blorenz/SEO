use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1266520756',
        'name' => 'bug/edit.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 27 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 29 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 31 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('bug/time.html.tmpl');
    $output .=  "\n";
#line 33 "template/en/default/bug/edit.html.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
#line 34 "template/en/default/bug/edit.html.tmpl"
    $stash->set('select_fields', {   });
#line 39 "template/en/default/bug/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'get_fields', [ { 'type' => '2', 'custom' => 0  } ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'field'} = $_tt_value;
#line 38 "template/en/default/bug/edit.html.tmpl"
    $stash->set(['select_fields', 0, $stash->get(['field', 0, 'name', 0]), 0], $stash->get('field'));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  <script type=\"text/javascript\">\n  <!--\n  \n  /* Outputs a link to call replyToComment(); used to reduce HTML output */\n  function addReplyLink(id, real_id) {\n      /* XXX this should really be updated to use the DOM Core's\n       * createElement, but finding a container isn't trivial.\n       */";
#line 52 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['user', 0, 'settings', 0, 'quote_replies', 0, 'value', 0]) ne 'off') {
    $output .=  "\n        document.write('[<a href=\"#add_comment\" onclick=\"replyToComment(' + \n                       id + ',' + real_id + '); return false;\">reply<' + '/a>]');";
    }
    
    $output .=  "\n  }\n\n  /* Adds the reply text to the `comment' textarea */\n  function replyToComment(id, real_id) {\n      var prefix = \"(In reply to comment #\" + id + \")\\n\";\n      var replytext = \"\";";
#line 76 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['user', 0, 'settings', 0, 'quote_replies', 0, 'value', 0]) eq 'quoted_reply') {
    $output .=  "\n        /* pre id=\"comment_name_N\" */\n        var text_elem = document.getElementById('comment_text_'+id);\n        var text = getText(text_elem);\n\n        /* make sure we split on all newlines -- IE or Moz use \\r and \\n\n         * respectively.\n         */\n        text = text.split(/\\r|\\n/);\n\n        for (var i=0; i < text.length; i++) {\n            replytext += \"> \" + text[i] + \"\\n\"; \n        }\n\n        replytext = prefix + replytext + \"\\n\";";
    }
    elsif ($stash->get(['user', 0, 'settings', 0, 'quote_replies', 0, 'value', 0]) eq 'simple_reply') {
    $output .=  "\n        replytext = prefix;";
    }
    
    $output .=  "\n";
#line 82 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['Param', [ 'insidergroup' ]]) && $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]])) {
    $output .=  "\n      if (document.getElementById('isprivate_' + real_id).checked) {\n          document.getElementById('newcommentprivacy').checked = 'checked';\n      }";
    }
    
    $output .=  "\n\n      /* <textarea id=\"comment\"> */\n      var textarea = document.getElementById('comment');\n      textarea.value += replytext;\n\n      textarea.focus();\n  }\n\n  if (typeof Node == 'undefined') {\n      /* MSIE doesn't define Node, so provide a compatibility object */\n      window.Node = {\n          TEXT_NODE: 3,\n          ENTITY_REFERENCE_NODE: 5\n      };\n  }\n\n  /* Concatenates all text from element's childNodes. This is used\n   * instead of innerHTML because we want the actual text (and\n   * innerText is non-standard).\n   */\n  function getText(element) {\n      var child, text = \"\";\n      for (var i=0; i < element.childNodes.length; i++) {\n          child = element.childNodes[i];\n          var type = child.nodeType;\n          if (type == Node.TEXT_NODE || type == Node.ENTITY_REFERENCE_NODE) {\n              text += child.nodeValue;\n          } else {\n              /* recurse into nodes of other types */\n              text += getText(child);\n          }\n      }\n      return text;\n  }\n";
#line 137 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'timetrackinggroup' ]]) ]])) {
    $output .=  "\n  var fRemainingTime = ";
#line 119 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'remaining_time', 0]);
    $output .=  "; // holds the original value\n  function adjustRemainingTime() {\n      // subtracts time spent from remaining time\n      var new_time;\n\n      // prevent negative values if work_time > fRemainingTime\n      new_time =\n          Math.max(fRemainingTime - document.changeform.work_time.value, 0.0);\n      // get upto 2 decimal places\n      document.changeform.remaining_time.value =\n          Math.round(new_time * 100)/100;\n  }\n\n  function updateRemainingTime() {\n      // if the remaining time is changed manually, update fRemainingTime\n      fRemainingTime = document.changeform.remaining_time.value;\n  }\n";
    }
    
    $output .=  "\n\n  //-->\n  </script>\n\n<form name=\"changeform\" method=\"post\" action=\"process_bug.cgi\">\n\n  <input type=\"hidden\" name=\"delta_ts\" value=\"";
#line 144 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'delta_ts', 0]);
    $output .=  "\">\n  <input type=\"hidden\" name=\"longdesclength\" value=\"";
#line 145 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'longdescs', 0, 'size', 0]);
    $output .=  "\">\n  <input type=\"hidden\" name=\"id\" value=\"";
#line 146 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 147 "template/en/default/bug/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ $stash->get(['bug', 0, 'id', 0]), $stash->get(['bug', 0, 'delta_ts', 0]) ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n";
#line 149 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_title');
    $output .=  "\n  <table class=\"edit_form\">\n    <tr>\n      ";
    $output .=  "\n      <td id=\"bz_show_bug_column_1\" class=\"bz_show_bug_column\">     \n        <table>\n          ";
#line 156 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_status');
    $output .=  "\n          ";
#line 158 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n          ";
#line 160 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_details1');
    $output .=  "\n          ";
#line 162 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n          \n          ";
#line 165 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_details2');
    $output .=  "            \n          \n          ";
#line 168 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_people');
    $output .=  "\n          ";
#line 170 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n          ";
#line 172 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_url_keyword_whiteboard');
    $output .=  "\n          ";
#line 174 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n          \n          ";
#line 177 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_dependson_blocks');
    $output .=  "\n          \n        </table>\n      </td>\n      <td>\n        <div class=\"bz_column_spacer\">&nbsp;</div>\n      </td>\n      ";
    $output .=  "\n      <td id=\"bz_show_bug_column_2\" class=\"bz_show_bug_column\">\n        <table cellpadding=\"3\" cellspacing=\"1\">\n        ";
#line 188 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_dates');
    $output .=  "\n         ";
#line 190 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_cclist');
    $output .=  "\n         ";
#line 192 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n";
#line 194 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_see_also');
    $output .=  " \n         ";
#line 196 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_customfields');
    $output .=  "\n         ";
#line 198 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_spacer');
    $output .=  "\n         ";
#line 200 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'after_custom_fields' ]]);
    $output .=  "\n                ";
#line 202 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_flags');
    $output .=  "\n\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"3\">\n          <hr id=\"bz_top_half_spacer\">\n      </td>\n    </tr>\n  </table>\n\n  ";
#line 215 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_restrict_visibility');
#line 219 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'timetrackinggroup' ]]) ]])) {
    $output .=  "\n    <br>";
#line 218 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('section_timetracking');
    }
    
    $output .=  "\n  \n\n";
    $output .=  "\n";
#line 224 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('attachment/list.html.tmpl', { 'attachments' => $stash->get(['bug', 0, 'attachments', 0]), 'bugid' => $stash->get(['bug', 0, 'bug_id', 0]), 'num_attachment_flag_types' => $stash->get(['bug', 0, 'num_attachment_flag_types', 0]), 'show_attachment_flags' => $stash->get(['bug', 0, 'show_attachment_flags', 0]) });
    $output .=  "\n\n\n";
    $output .=  "\n\n  <br>\n  <table cellpadding=\"1\" cellspacing=\"1\">\n    <tr>\n      <td id=\"comment_status_commit\">\n        <!-- The table keeps the commit button aligned with the box. -->\n        <a name=\"add_comment\"></a>";
#line 281 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n        <table><tr><td>\n          <label for=\"comment\" accesskey=\"c\"><b>Additional <u>C</u>omments</b></label>:";
#line 248 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['Param', [ 'insidergroup' ]]) && $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]])) {
    $output .=  "\n            <input type=\"checkbox\" name=\"commentprivacy\" value=\"1\"\n                   id=\"newcommentprivacy\"\n                   onClick=\"updateCommentTagControl(this, form)\">\n            <label for=\"newcommentprivacy\">Private</label>";
    }
    
    $output .=  "\n          <br>";
#line 250 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'comment', 'id' => 'comment', 'minrows' => 10, 'maxrows' => 25, 'cols' => '80' });
#line 257 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'after_comment_textarea' ]]);
    $output .=  "\n          <br>";
#line 259 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('commit_button', { 'id' => '' });
    $output .=  "\n          <table class=\"status\" cellspacing=\"0\" cellpadding=\"0\">\n            <tr>\n              <td class=\"field_label\">\n                <b><a href=\"page.cgi?id=fields.html#status\">Status</a></b>:\n              </td>\n              <td>\n                <a name=\"bug_status_bottom\"></a>";
#line 267 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('bug/knob.html.tmpl');
    $output .=  "\n              </td>\n            </tr>\n          </table>\n        </td></tr></table>";
    }
    else {
    $output .=  "\n          <fieldset>\n            <legend>Note</legend>\n            <p>\n              You need to\n              <a href=\"";
#line 277 "template/en/default/bug/edit.html.tmpl"
    if ($stash->get(['Param', [ 'ssl' ]]) ne 'never') {
#line 277 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['Param', [ 'sslbase' ]]);
    }
    
    $output .=  "show_bug.cgi?id=";
#line 277 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "&amp;GoAheadAndLogIn=1\">log in</a>\n              before you can comment on or make changes to this ";
#line 278 "template/en/default/bug/edit.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n            </p>\n          </fieldset>";
    }
    
    $output .=  "\n        ";
    $output .=  "\n        <hr>\n        <div id=\"comments\">";
#line 285 "template/en/default/bug/edit.html.tmpl"
    $output .=  $context->process('bug/comments.html.tmpl', { 'comments' => $stash->get(['bug', 0, 'longdescs', 0]), 'mode' => $stash->get(['user', 0, 'id', 0]) ? 'edit' : 'show' });
    $output .=  "\n        </div>\n        \n      </td>\n    </tr>\n  </table>\n</form>\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n\n\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'section_spacer' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>\n    <td colspan=\"2\" class=\"bz_section_spacer\"></td>\n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'input' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 1139 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('no_td') ne 1) {
        $output .=  "\n  <td";
#line 1 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('colspan')) {
        $output .=  (" colspan=\"" . $stash->get('colspan') . "\"");
        }
        
        $output .=  ">";
        }
        
#line 1140 "template/en/default/bug/edit.html.tmpl"
        $stash->set('val', $stash->get('value') ? $stash->get('value') : $stash->get(['bug', 0, $stash->get('inputname'), 0]));
#line 1154 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get('inputname'), 0, 1 ]])) {
        $output .=  "\n       <input id=\"";
#line 1142 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get('inputname');
        $output .=  "\" name=\"";
#line 1142 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get('inputname');
        $output .=  "\" class=\"text_input\"\n              value=\"";
#line 1143 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 1 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('size')) {
        $output .=  (" size=\"" . $stash->get('size') . "\"");
        }
        
#line 1 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('maxlength')) {
        $output .=  (" maxlength=\"" . $stash->get('maxlength') . "\"");
        }
        
#line 1 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('spellcheck')) {
        $output .=  (" spellcheck=\"" . $stash->get('spellcheck') . "\"");
        }
        
        $output .=  ">";
        }
        else {
#line 1153 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('size') && $stash->get(['val', 0, 'length', 0]) > $stash->get('size')) {
        $output .=  "\n        <span title=\"";
#line 1148 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 1149 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('truncate', [ $stash->get('size') ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n        </span>";
        }
        else {
#line 1152 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('val');
            
            &$_tt_filter($output);
        };
        
        }
        
        }
        
#line 1157 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('no_td') ne 1) {
        $output .=  "  \n  </td>";
        }
        
#line 1158 "template/en/default/bug/edit.html.tmpl"
        $stash->set('no_td', 0);
#line 1159 "template/en/default/bug/edit.html.tmpl"
        $stash->set('maxlength', 0);
#line 1160 "template/en/default/bug/edit.html.tmpl"
        $stash->set('colspan', 0);
#line 1161 "template/en/default/bug/edit.html.tmpl"
        $stash->set('size', 0);
#line 1162 "template/en/default/bug/edit.html.tmpl"
        $stash->set('value', $stash->get('undef'));
#line 1163 "template/en/default/bug/edit.html.tmpl"
        $stash->set('spellcheck', $stash->get('undef'));
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_dependson_blocks' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>";
#line 683 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('dependencies', { 'dep' => { 'title' => 'Depends&nbsp;on', 'fieldname' => 'dependson'  } });
        $output .=  "\n  </tr>\n  \n  <tr>";
#line 688 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('dependencies', { 'accesskey' => 'b', 'dep' => { 'title' => '<u>B</u>locks', 'fieldname' => 'blocked'  } });
        $output .=  "\n  \n  <tr>\n    <th>&nbsp;</th>\n  \n    <td colspan=\"2\" align=\"left\" id=\"show_dependency_tree_or_graph\">\n      Show dependency <a href=\"showdependencytree.cgi?id=";
#line 695 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "&amp;hide_resolved=1\">tree</a>\n  ";
#line 699 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'webdotbase' ]])) {
        $output .=  "\n        /&nbsp;<a href=\"showdependencygraph.cgi?id=";
#line 698 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "\">graph</a>";
        }
        
        $output .=  "\n    </td>\n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'dependencies' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n\n  <th class=\"field_label\">\n    <label for=\"";
#line 999 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "\"";
#line 1 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('accesskey')) {
        $output .=  (" accesskey=\"" . $stash->get('accesskey') . "\"");
        }
        
        $output .=  ">";
#line 1000 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'title', 0]);
        $output .=  "</label>:\n  </th>\n  <td>    \n    <span id=\"";
#line 1003 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_input_area\">";
#line 1008 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['dep', 0, 'fieldname', 0]), 0, 1 ]])) {
        $output .=  "\n        <input name=\"";
#line 1005 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "\" id=\"";
#line 1005 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "\"\n               class=\"text_input\"\n               value=\"";
#line 1007 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, $stash->get(['dep', 0, 'fieldname', 0]), 0, 'join', [ ', ' ]]);
        $output .=  "\">";
        }
        
        $output .=  "\n    </span>\n    ";
#line 1013 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, $stash->get(['dep', 0, 'fieldname', 0]), 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'depbug'} = $_tt_value;
#line 1012 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('bug_link', [ $stash->get('depbug'), { 'use_alias' => 1 } ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('depbug');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
#line 1012 "template/en/default/bug/edit.html.tmpl"
        $output .=  ' ';;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
#line 1025 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['dep', 0, 'fieldname', 0]), 0, 1 ]])) {
        $output .=  "\n      <span id=\"";
#line 1015 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_edit_container\" class=\"edit_me bz_default_hidden\" >\n        (<a href=\"#\" id=\"";
#line 1016 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_edit_action\">edit</a>)\n      </span>\n      <script type=\"text/javascript\">\n        hideEditableField('";
#line 1019 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_edit_container', \n                          '";
#line 1020 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_input_area', \n                          '";
#line 1021 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "_edit_action', \n                          '";
#line 1022 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['dep', 0, 'fieldname', 0]);
        $output .=  "', \n                          \"";
#line 1023 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, $stash->get(['dep', 0, 'fieldname', 0]), 0, 'join', [ ', ' ]]);
        $output .=  "\");\n      </script>";
        }
        
        $output .=  "\n  </td>\n  ";
#line 1028 "template/en/default/bug/edit.html.tmpl"
        $stash->set('accesskey', $stash->get('undef'));
        $output .=  "\n  ";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_timetracking' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <table class=\"bz_time_tracking_table\">\n    <tr>\n      <th>\n        <label for=\"estimated_time\">Orig. Est.</label>\n      </th>\n      <th>\n        Current Est.\n      </th>\n      <th>\n        <label for=\"work_time\">Hours Worked</label>\n      </th>\n      <th>\n        <label for=\"remaining_time\">Hours Left</label>\n      </th>\n      <th>\n        %Complete\n      </th>\n      <th>\n        Gain\n      </th>\n      <th>\n        <label for=\"deadline\">Deadline</label>\n      </th>\n    </tr>\n    <tr>\n      <td>\n        <input name=\"estimated_time\" id=\"estimated_time\"\n               value=\"";
#line 1064 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'estimated_time', 0]) });
        $output .=  "\"\n               size=\"6\" maxlength=\"6\">\n      </td>\n      <td>";
#line 1069 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => ($stash->get(['bug', 0, 'actual_time', 0]) + $stash->get(['bug', 0, 'remaining_time', 0])) });
        $output .=  "\n      </td>\n      <td>";
#line 1073 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'actual_time', 0]) });
        $output .=  " +\n        <input name=\"work_time\" id=\"work_time\"\n               value=\"0\" size=\"3\" maxlength=\"6\"\n               onchange=\"adjustRemainingTime();\">\n      </td>\n      <td>\n        <input name=\"remaining_time\" id=\"remaining_time\"\n               value=\"";
#line 1080 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'remaining_time', 0]) });
        $output .=  "\"\n               size=\"6\" maxlength=\"6\" onchange=\"updateRemainingTime();\">\n      </td>\n      <td>";
#line 1085 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('calculatepercentage', { 'act' => $stash->get(['bug', 0, 'actual_time', 0]), 'rem' => $stash->get(['bug', 0, 'remaining_time', 0]) });
        $output .=  "\n      </td>\n      <td>";
#line 1089 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'estimated_time', 0]) - ($stash->get(['bug', 0, 'actual_time', 0]) + $stash->get(['bug', 0, 'remaining_time', 0])) });
        $output .=  "\n      </td>\n       <td>\n         <input name=\"deadline\" id=\"deadline\" value=\"";
#line 1092 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'deadline', 0]);
        $output .=  "\"\n                size=\"10\" maxlength=\"10\"><br />\n         <small>(YYYY-MM-DD)</small>\n      </td>        \n    </tr>\n    <tr>\n      <td colspan=\"7\" class=\"bz_summarize_time\">\n        <a href=\"summarize_time.cgi?id=";
#line 1099 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "&amp;do_depends=1\">\n        Summarize time (including time for ";
#line 1100 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bugs', 0]);
        $output .=  "\n        blocking this ";
#line 1101 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  ")</a>\n      </td>\n    </tr>\n  </table> ";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'commit_button' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 1173 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
        $output .=  "\n    <div class=\"knob-buttons\">\n      <input type=\"submit\" value=\"Commit\" id=\"commit";
#line 1168 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('css_class_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('id');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 1171 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'user', 0, 'canmove', 0])) {
        $output .=  "\n        <input type=\"submit\" name=\"action\" id=\"action";
#line 1170 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('css_class_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('id');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" value=\"";
#line 1170 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['Param', [ 'move-button-text' ]]);
        $output .=  "\">";
        }
        
        $output .=  "\n    </div>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_details1' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n\n    ";
        $output .=  "\n    ";
        $output .=  "\n    ";
        $output .=  "\n    \n    <tr>";
#line 380 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'product', 0, 1 ]])) {
#line 376 "template/en/default/bug/edit.html.tmpl"
        $stash->set('prod_list', $stash->get(['user', 0, 'get_enterable_products', 0]));
#line 379 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['user', 0, 'can_enter_product', [ $stash->get(['bug', 0, 'product', 0]) ]])) {
#line 378 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['prod_list', 0, 'unshift', [ $stash->get(['bug', 0, 'product_obj', 0]) ]]);
        }
        
        }
        
        $output .=  "\n";
#line 382 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['select_fields', 0, 'product', 0]), 'override_legal_values' => $stash->get('prod_list'), 'desc_url' => 'describecomponents.cgi', 'value' => $stash->get(['bug', 0, 'product', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'product', 0, 1 ]]) });
        $output .=  "\n    </tr>\n    ";
        $output .=  "    \n    ";
        $output .=  "\n    ";
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"component\" accesskey=\"m\">\n          <b><a href=\"describecomponents.cgi?product=";
#line 394 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('url_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'product', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">\n            Co<u>m</u>ponent</a>:\n          </b>\n        </label>\n      </td>";
#line 399 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('select', { 'selname' => 'component' });
        $output .=  "\n    </tr>\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"version\"><b>Version</b></label>:\n      </td>\n";
#line 406 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('select', { 'selname' => 'version' });
        $output .=  "\n    </tr>\n    ";
        $output .=  "    \n    ";
        $output .=  "\n    ";
        $output .=  "    \n    <tr>\n      <td class=\"field_label\">\n        <label for=\"rep_platform\" accesskey=\"h\"><b>Platform</b></label>:\n      </td>\n      <td class=\"field_value\">";
#line 416 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['select_fields', 0, 'rep_platform', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'rep_platform', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'rep_platform', 0, 1 ]]) });
        $output .=  "\n       ";
#line 420 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['select_fields', 0, 'op_sys', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'op_sys', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'op_sys', 0, 1 ]]) });
        $output .=  "\n       <script type=\"text/javascript\">\n         assignToDefaultOnChange(['product', 'component']);\n       </script>\n      </td>\n    </tr>\n\n\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_status' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>\n    <td class=\"field_label\">\n      <b><a href=\"page.cgi?id=fields.html#status\">Status</a></b>:\n    </td>\n    <td id=\"bz_field_status\">\n      <span id=\"static_bug_status\">";
#line 445 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, 'bug_status', 0]) ]]);
            
            &$_tt_filter($output);
        };
        
#line 451 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'resolution', 0])) {
        $output .=  "\n          ";
#line 447 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['get_resolution', [ $stash->get(['bug', 0, 'resolution', 0]) ]]);
            
            &$_tt_filter($output);
        };
        
#line 450 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'dup_id', 0])) {
        $output .=  "\n            of ";
#line 1 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                      || $context->throw($context->error);
        
        $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        }
        
        }
        
#line 455 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0]) || $stash->get(['bug', 0, 'user', 0, 'isreporter', 0])) {
        $output .=  "\n          (<a href=\"#add_comment\" \n              onclick=\"window.setTimeout(function() { document.getElementById('bug_status').focus(); }, 10)\">edit</a>)";
        }
        
        $output .=  "\n      </span>\n    </td>\n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_title' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
        $output .=  "\n  <div class=\"bz_alias_short_desc_container edit_form\">";
#line 303 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('commit_button', { 'id' => '_top' });
        $output .=  "\n     <a href=\"show_bug.cgi?id=";
#line 304 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "\">";
        
        $output .=  "<b>";
#line 305 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'Bug', 0]);
        $output .=  "&nbsp;";
#line 305 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</b>";
        
        $output .=  "</a> -<span id=\"summary_alias_container\" class=\"bz_default_hidden\"> ";
#line 311 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'usebugaliases' ]])) {
#line 310 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'alias', 0]) ne '') {
        $output .=  "\n          (<span id=\"alias_nonedit_display\">";
#line 309 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'alias', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</span>) ";
        }
        
        }
        
        $output .=  "\n      <span id=\"short_desc_nonedit_display\">";
#line 312 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</span>";
#line 316 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'short_desc', 0, 1 ]]) || $stash->get(['bug', 0, 'check_can_change_field', [ 'alias', 0, 1 ]])) {
        $output .=  "\n        <small class=\"editme\">(<a href=\"#\" id=\"editme_action\">edit</a>)</small>";
        }
        
        $output .=  "\n     </span>\n  \n       \n    <div id=\"summary_alias_input\">\n      <table id=\"summary\"> ";
#line 345 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'usebugaliases' ]])) {
        $output .=  "\n          <tr>";
#line 336 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'alias', 0, 1 ]])) {
        $output .=  "      \n            <td>\n              <label \n                for=\"alias\" \n                title=\"a name for the ";
#line 329 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  " that can be used in place of its ID number, ";
        $output .=  " e.g. when adding it to a list of dependencies\"\n                >Alias</label>:</td><td>";
        }
        elsif ($stash->get(['bug', 0, 'alias', 0])) {
        $output .=  "\n            <td colspan=\"2\">(";
        }
        else {
        $output .=  "\n            <td colspan=\"2\">";
        }
        
#line 337 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('input', { 'inputname' => 'alias', 'size' => '20', 'maxlength' => '20', 'no_td' => 1 });
#line 341 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['bug', 0, 'check_can_change_field', [ 'alias', 0, 1 ]]) && $stash->get(['bug', 0, 'alias', 0])) {
        $output .=  ')';
        }
        
        $output .=  "\n          </td>\n        </tr>";
        }
        
        $output .=  " \n        ";
        $output .=  "\n        <tr>\n          <td>\n            <label accesskey=\"s\" for=\"short_desc\"><u>S</u>ummary</label>:\n          </td>\n          <td>";
#line 352 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('input', { 'inputname' => 'short_desc', 'size' => '80', 'colspan' => 2, 'maxlength' => 255, 'spellcheck' => 'true', 'no_td' => 1 });
        $output .=  "\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n  <script type=\"text/javascript\">\n    hideAliasAndSummary('";
#line 360 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "', '";
#line 360 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'alias', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "');\n  </script>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 1114 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('no_td')) {
        $output .=  "\n  <td>";
        }
        
#line 1125 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get('selname'), 0, 1 ]]) && $stash->get(['bug', 0, 'choices', 0, $stash->get('selname'), 0, 'size', 0]) > 1) {
        $output .=  "\n      <select id=\"";
#line 1116 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get('selname');
        $output .=  "\" name=\"";
#line 1116 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get('selname');
        $output .=  "\">";
#line 1121 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, 'choices', 0, $stash->get('selname'), 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'x'} = $_tt_value;
        $output .=  "\n          <option value=\"";
#line 1118 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('x');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 1119 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('x') eq $stash->get(['bug', 0, $stash->get('selname'), 0])) {
        $output .=  ' selected';
        }
        
        $output .=  ">";
#line 1119 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('x');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n          </option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n      </select>";
        }
        else {
#line 1124 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, $stash->get('selname'), 0]);
            
            &$_tt_filter($output);
        };
        
        }
        
#line 1128 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('no_td')) {
        $output .=  "\n  </td>";
        }
        
#line 1129 "template/en/default/bug/edit.html.tmpl"
        $stash->set('no_td', 0);
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_see_also' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 928 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'use_see_also' ]]) || $stash->get(['bug', 0, 'see_also', 0, 'size', 0])) {
        $output .=  "\n    <tr>";
#line 922 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'see_also', 0]), 'value' => $stash->get(['bug', 0, 'see_also', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'see_also', 0, 1 ]]) });
        $output .=  "\n    </tr>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_dates' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>\n    <td class=\"field_label\">\n      <b>Reported</b>:\n    </td>\n    <td>";
#line 821 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('time')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'creation_ts', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  " by ";
#line 821 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'reporter', 0]) });
        $output .=  "\n    </td>\n  </tr>\n  \n  <tr>\n    <td class=\"field_label\">\n      <b> Modified</b>:\n    </td>\n    <td>";
#line 830 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ ':\d\d ', ' ' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ ':\d\d$', '' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('time')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'delta_ts', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  " \n      (<a href=\"show_activity.cgi?id=";
#line 831 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "\">";
        $output .=  "History</a>)\n    </td>\n  \n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_restrict_visibility' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 710 "template/en/default/bug/edit.html.tmpl"
        if (!($stash->get(['bug', 0, 'groups', 0, 'size', 0]))) {
        $context->throw('return', '', \$output);
        }
        
        $output .=  "\n";
#line 712 "template/en/default/bug/edit.html.tmpl"
        $stash->set('inallgroups', 1);
#line 713 "template/en/default/bug/edit.html.tmpl"
        $stash->set('inagroup', 0);
#line 714 "template/en/default/bug/edit.html.tmpl"
        $stash->set('emitted_description', 0);
        $output .=  "\n";
#line 747 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, 'groups', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'group'} = $_tt_value;
#line 717 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['group', 0, 'ingroup', 0])) {
        $stash->set('inallgroups', 0);
        }
        
#line 718 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['group', 0, 'ison', 0])) {
        $stash->set('inagroup', 1);
        }
        
        $output .=  "\n";
#line 720 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['group', 0, 'mandatory', 0])) {
        ($_tt_value, $_tt_error) = $_tt_list->get_next();
        next FOR1;
        
        }
        
        $output .=  "\n";
#line 737 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('emitted_description')) {
#line 723 "template/en/default/bug/edit.html.tmpl"
        $stash->set('emitted_description', 1);
        $output .=  "\n      <table class=\"bz_group_visibility_section\">\n        <tr>\n          <td class=\"field_label\">\n            <label id=\"bz_restrict_group_visibility_label\"><b>Restrict Group Visibility</b>:</label>\n          </td>\n          <td>\n            <div id=\"bz_restrict_group_visibility_help\">\n              <b>Only users in all of the selected groups can view this ";
#line 731 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  ":</b>\n              <br>\n              <small>\n                (Unchecking all boxes makes this a more public ";
#line 734 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  ".)\n              </small>\n            </div>";
        }
        
        $output .=  "\n";
#line 741 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['group', 0, 'ingroup', 0])) {
        $output .=  "\n      <input type=\"hidden\" name=\"defined_bit-";
#line 740 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['group', 0, 'bit', 0]);
        $output .=  "\" value=\"1\">";
        }
        
        $output .=  "\n    <input type=\"checkbox\" value=\"1\" name=\"bit-";
#line 742 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['group', 0, 'bit', 0]);
        $output .=  "\" id=\"bit-";
#line 742 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['group', 0, 'bit', 0]);
        $output .=  "\"";
#line 743 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['group', 0, 'ison', 0])) {
        $output .=  ' checked="checked"';
        }
        
#line 744 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['group', 0, 'ingroup', 0])) {
        $output .=  ' disabled="disabled"';
        }
        
        $output .=  ">\n    <label for=\"bit-";
#line 745 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['group', 0, 'bit', 0]);
        $output .=  "\">";
#line 745 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html_light')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</label>\n    <br>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n";
#line 757 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('emitted_description')) {
#line 753 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('inallgroups')) {
        $output .=  "\n      <b>Only members of a group can change the visibility of ";
#line 751 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'abug', 0]);
        $output .=  " for that group.</b>\n      <br>";
        }
        
        $output .=  "\n      </td>\n    </tr>";
#line 756 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('inagroup')) {
        $output .=  '</table>';
        }
        
        }
        
        $output .=  "\n";
#line 808 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('inagroup')) {
#line 763 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get('emitted_description')) {
#line 761 "template/en/default/bug/edit.html.tmpl"
        $stash->set('emitted_description', 1);
        $output .=  "\n      <table class=\"bz_group_visibility_section\">";
        }
        
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label id=\"bz_enable_role_visibility_label\"><b>Enable Role Visibility</b>:</label>\n      </td>\n      <td>\n        <div id=\"bz_enable_role_visibility_help\">\n          <b>Users in the roles selected below can always view this ";
#line 770 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  ":</b>\n          <br>\n          <small>\n            (The assignee";
#line 776 "template/en/default/bug/edit.html.tmpl"
        if (($stash->get(['Param', [ 'useqacontact' ]]))) {
        $output .=  "\n               and QA contact";
        }
        
        $output .=  "\n            can always see ";
#line 777 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'abug', 0]);
        $output .=  ", and this section does not take effect unless\n            the ";
#line 778 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['terms', 0, 'bug', 0]);
        $output .=  " is restricted to at least one group.)\n          </small>\n        </div>\n        <div>\n          <div>";
#line 783 "template/en/default/bug/edit.html.tmpl"
        $stash->set('user_can_edit_accessible', $stash->get(['bug', 0, 'check_can_change_field', [ 'reporter_accessible', 0, 1 ]]));
#line 786 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('user_can_edit_accessible')) {
        $output .=  "\n              <input type=\"hidden\" name=\"defined_reporter_accessible\" value=\"1\">";
        }
        
        $output .=  "\n            <input type=\"checkbox\" value=\"1\"\n                   name=\"reporter_accessible\" id=\"reporter_accessible\"";
#line 789 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'reporter_accessible', 0])) {
        $output .=  ' checked';
        }
        
#line 790 "template/en/default/bug/edit.html.tmpl"
        if (!($stash->get('user_can_edit_accessible'))) {
        $output .=  ('' . " disabled=\"disabled\"");
        }
        
        $output .=  ">\n            <label for=\"reporter_accessible\">Reporter</label>\n          </div>\n          <div>";
#line 794 "template/en/default/bug/edit.html.tmpl"
        $stash->set('user_can_edit_accessible', $stash->get(['bug', 0, 'check_can_change_field', [ 'cclist_accessible', 0, 1 ]]));
#line 797 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('user_can_edit_accessible')) {
        $output .=  "\n              <input type=\"hidden\" name=\"defined_cclist_accessible\" value=\"1\">";
        }
        
        $output .=  "\n            <input type=\"checkbox\" value=\"1\"\n                   name=\"cclist_accessible\" id=\"cclist_accessible\"";
#line 800 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'cclist_accessible', 0])) {
        $output .=  ' checked';
        }
        
#line 801 "template/en/default/bug/edit.html.tmpl"
        if (!($stash->get('user_can_edit_accessible'))) {
        $output .=  ('' . " disabled=\"disabled\"");
        }
        
        $output .=  ">\n            <label for=\"cclist_accessible\">CC List</label>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </table>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_people' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n\n    <tr>\n      <td class=\"field_label\">\n        <b><a href=\"page.cgi?id=fields.html#assigned_to\">Assigned To</a></b>:\n      </td>\n      <td>";
#line 558 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'assigned_to', 0, 1 ]])) {
        $output .=  "\n          <div id=\"bz_assignee_edit_container\" class=\"bz_default_hidden\">\n            <span>";
#line 533 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'assigned_to', 0]) });
        $output .=  "\n              (<a href=\"#\" id=\"bz_assignee_edit_action\">edit</a>)\n            </span>\n          </div>\n          <div id=\"bz_assignee_input\">";
#line 538 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'assigned_to', 'name' => 'assigned_to', 'value' => $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]), 'size' => 30 });
        $output .=  "\n            <br>\n            <input type=\"checkbox\" id=\"set_default_assignee\" name=\"set_default_assignee\" value=\"1\">\n            <label id=\"set_default_assignee_label\" for=\"set_default_assignee\">Reset Assignee to default</label>\n          </div>\n          <script type=\"text/javascript\">\n           hideEditableField('bz_assignee_edit_container', \n                             'bz_assignee_input', \n                             'bz_assignee_edit_action', \n                             'assigned_to', \n                             '";
#line 553 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "' );\n           initDefaultCheckbox('assignee');                  \n          </script>";
        }
        else {
#line 557 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'assigned_to', 0]) });
        }
        
        $output .=  "\n      </td>\n    </tr>\n";
#line 605 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'useqacontact' ]])) {
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"qa_contact\" accesskey=\"q\"><b><u>Q</u>A Contact</b></label>:\n      </td>\n      <td>";
#line 602 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'qa_contact', 0, 1 ]])) {
#line 577 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'qa_contact', 0]) ne '') {
        $output .=  "\n           <div id=\"bz_qa_contact_edit_container\" class=\"bz_default_hidden\">\n            <span>\n              <span id=\"bz_qa_contact_edit_display\">";
#line 573 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'qa_contact', 0]) });
        $output .=  "</span>\n              (<a href=\"#\" id=\"bz_qa_contact_edit_action\">edit</a>)\n            </span>\n          </div>";
        }
        
        $output .=  "\n          <div id=\"bz_qa_contact_input\">";
#line 579 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'qa_contact', 'name' => 'qa_contact', 'value' => $stash->get(['bug', 0, 'qa_contact', 0, 'login', 0]), 'size' => 30, 'emptyok' => 1 });
        $output .=  "\n            <br>\n            <input type=\"checkbox\" id=\"set_default_qa_contact\" name=\"set_default_qa_contact\" value=\"1\">\n            <label for=\"set_default_qa_contact\" id=\"set_default_qa_contact_label\">Reset QA Contact to default</label>\n          </div>\n          <script type=\"text/javascript\">";
#line 597 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'qa_contact', 0]) ne '') {
        $output .=  "\n              hideEditableField('bz_qa_contact_edit_container', \n                                 'bz_qa_contact_input', \n                                 'bz_qa_contact_edit_action', \n                                 'qa_contact', \n                                 '";
#line 596 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'qa_contact', 0, 'login', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "');";
        }
        
        $output .=  "\n            initDefaultCheckbox('qa_contact');\n          </script>";
        }
        else {
#line 601 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'qa_contact', 0]) });
        }
        
        $output .=  "\n      </td>\n    </tr>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_cclist' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"newcc\" accesskey=\"a\"><b>CC List</b>:</label>\n      </td>\n      <td>";
#line 861 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
#line 860 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['bug', 0, 'cc', 0]) || ! $stash->get(['bug', 0, 'cc', 0, 'contains', [ $stash->get(['user', 0, 'login', 0]) ]])) {
#line 848 "template/en/default/bug/edit.html.tmpl"
        $stash->set('has_role', $stash->get(['bug', 0, 'user', 0, 'isreporter', 0]) || $stash->get(['bug', 0, 'assigned_to', 0, 'id', 0]) eq $stash->get(['user', 0, 'id', 0]) || ($stash->get(['Param', [ 'useqacontact' ]]) && $stash->get(['bug', 0, 'qa_contact', 0]) && $stash->get(['bug', 0, 'qa_contact', 0, 'id', 0]) eq $stash->get(['user', 0, 'id', 0])));
        $output .=  "\n            <input type=\"checkbox\" id=\"addselfcc\" name=\"addselfcc\"";
#line 854 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'settings', 0, 'state_addselfcc', 0, 'value', 0]) eq 'always' || (! $stash->get('has_role') && $stash->get(['user', 0, 'settings', 0, 'state_addselfcc', 0, 'value', 0]) eq 'cc_unless_role')) {
        $output .=  ('' . " checked=\"checked\"");
        }
        
        $output .=  ">\n            <label for=\"addselfcc\">Add me to CC list</label>\n            <br> ";
        }
        
        }
        
#line 862 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'cc', 0, 'size', 0]) || 0;
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 867 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'cc', 0, 'size', 0]) eq 1) {
        $output .=  "\n          user";
        }
        else {
        $output .=  "\n          users";
        }
        
#line 872 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
#line 871 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'cc', 0, 'contains', [ $stash->get(['user', 0, 'email', 0]) ]])) {
        $output .=  "\n            including you";
        }
        
        }
        
        $output .=  "\n        <span id=\"cc_edit_area_showhide_container\" class=\"bz_default_hidden\">\n          (<a href=\"#\" id=\"cc_edit_area_showhide\">";
#line 874 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
        $output .=  "edit";
        }
        else {
        $output .=  "show";
        }
        
        $output .=  "</a>)\n        </span>\n        <div id=\"cc_edit_area\">\n          <br>";
#line 889 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
        $output .=  "\n            <div>\n              <div><label for=\"cc\"><b>Add</b></label></div>";
#line 881 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'newcc', 'name' => 'newcc', 'value' => '', 'size' => 30, 'multiple' => 5 });
        $output .=  "\n            </div>";
        }
        
#line 903 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'cc', 0])) {
        $output .=  "\n            <select id=\"cc\" name=\"cc\" multiple=\"multiple\" size=\"5\">";
#line 895 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, 'cc', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'c'} = $_tt_value;
        $output .=  "\n                <option value=\"";
#line 893 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('email')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('c');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 894 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('email')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('c');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n            </select>";
#line 902 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['user', 0, 'id', 0])) {
        $output .=  "\n              <br>\n              <input type=\"checkbox\" id=\"removecc\" name=\"removecc\">";
        $output .=  "<label for=\"removecc\">Remove selected CCs</label>\n              <br>";
        }
        
        }
        
        $output .=  "\n        </div>\n        <script type=\"text/javascript\">\n          hideEditableField( 'cc_edit_area_showhide_container', \n                             'cc_edit_area', \n                             'cc_edit_area_showhide', \n                             '', \n                             '');  \n        </script>\n      </td>\n    </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_flags' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
#line 937 "template/en/default/bug/edit.html.tmpl"
        $stash->set('show_bug_flags', 0);
#line 943 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, 'flag_types', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'type'} = $_tt_value;
#line 942 "template/en/default/bug/edit.html.tmpl"
        if (($stash->get(['type', 0, 'flags', 0]) && $stash->get(['type', 0, 'flags', 0, 'size', 0]) > 0) || ($stash->get(['user', 0, 'id', 0]) && $stash->get(['type', 0, 'is_active', 0]))) {
#line 940 "template/en/default/bug/edit.html.tmpl"
        $stash->set('show_bug_flags', 1);
#line 941 "template/en/default/bug/edit.html.tmpl"
        last FOR1;
        }
        ;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
#line 960 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('show_bug_flags')) {
        $output .=  "\n    <tr>\n      <td class=\"field_label flags_label\">\n        <label><b>Flags:</b></label>\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">";
#line 957 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'flag_types', 0, 'size', 0]) > 0) {
#line 954 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('flag/list.html.tmpl', { 'flag_no_header' => 1, 'flag_types' => $stash->get(['bug', 0, 'flag_types', 0]), 'any_flags_requesteeble' => $stash->get(['bug', 0, 'any_flags_requesteeble', 0]) });
        }
        
        $output .=  "\n      </td>\n    </tr>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_customfields' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n";
        $output .=  "\n";
#line 976 "template/en/default/bug/edit.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['Bugzilla', 0, 'active_custom_fields', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'field'} = $_tt_value;
        $output .=  "\n    <tr>";
#line 972 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('bug/field.html.tmpl', { 'value' => $stash->get(['bug', 0, $stash->get(['field', 0, 'name', 0]), 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['field', 0, 'name', 0]), 0, 1 ]]), 'value_span' => 2 });
        $output .=  "\n    </tr>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_details2' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n\n ";
        $output .=  "\n ";
        $output .=  "\n ";
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"priority\" accesskey=\"i\">\n          <b><a href=\"page.cgi?id=fields.html#importance\"><u>I</u>mportance</a></b></label>:\n      </td>\n      <td>";
#line 476 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['select_fields', 0, 'priority', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'priority', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'priority', 0, 1 ]]) });
        $output .=  "\n       ";
#line 480 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['select_fields', 0, 'bug_severity', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'bug_severity', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'bug_severity', 0, 1 ]]) });
#line 499 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'use_votes', 0])) {
        $output .=  "\n          <span id=\"votes_container\">";
#line 495 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'votes', 0])) {
        $output .=  " \n            with \n            <a href=\"votes.cgi?action=show_bug&amp;bug_id=";
#line 488 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "\">";
#line 489 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'votes', 0]);
        $output .=  " ";
#line 494 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'votes', 0]) eq 1) {
        $output .=  "\n                vote";
        }
        else {
        $output .=  "\n                votes";
        }
        
        $output .=  "</a> ";
        }
        
        $output .=  "    \n          (<a href=\"votes.cgi?action=show_user&amp;bug_id=";
#line 497 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "#vote_";
#line 497 "template/en/default/bug/edit.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "\">vote</a>)\n          </span>  ";
        }
        
        $output .=  "\n      </td>\n    </tr>\n";
#line 515 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['bug', 0, 'target_milestone', 0])) {
        $output .=  "\n      <tr>\n        <td class=\"field_label\">\n          <label for=\"target_milestone\"><b>";
#line 509 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'milestoneurl', 0])) {
        $output .=  "\n              <a href=\"";
#line 508 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'milestoneurl', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
        }
        
        $output .=  "\n            Target&nbsp;Milestone";
#line 510 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'milestoneurl', 0])) {
        $output .=  '</a>';
        }
        
        $output .=  "</b></label>:\n        </td>";
#line 513 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('select', { 'selname' => 'target_milestone' });
        $output .=  "\n      </tr>";
        }
        
        $output .=  "\n  ";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'section_url_keyword_whiteboard' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n";
        $output .=  "\n  <tr>\n    <td class=\"field_label\">\n      <label for=\"bug_file_loc\" accesskey=\"u\"><b>";
#line 621 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'bug_file_loc', 0]) && ! $stash->get(['bug', 0, 'bug_file_loc', 0, 'match', [ '^(javascript|data)' ]])) {
        $output .=  "\n          <a href=\"";
#line 618 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"><u>U</u>RL</a>";
        }
        else {
        $output .=  "\n          <u>U</u>RL";
        }
        
        $output .=  "</b></label>:\n    </td>\n    <td>";
#line 636 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]])) {
        $output .=  "\n        <span id=\"bz_url_edit_container\" class=\"bz_default_hidden\"> ";
#line 634 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'bug_file_loc', 0]) && ! $stash->get(['bug', 0, 'bug_file_loc', 0, 'match', [ '^(javascript|data)' ]])) {
        $output .=  "\n           <a href=\"";
#line 629 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" target=\"_blank\"\n              title=\"";
#line 630 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 631 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('truncate', [ 40 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
        }
        else {
#line 633 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "\n        (<a href=\"#\" id=\"bz_url_edit_action\">edit</a>)</span>";
        }
        
        $output .=  "\n      <span id=\"bz_url_input_area\">";
#line 638 "template/en/default/bug/edit.html.tmpl"
        
        # CAPTURE
        $stash->set('url_output', do {
            my $output = '';
        $output .=  $context->process('input', { 'no_td' => 1, 'inputname' => 'bug_file_loc', 'size' => '40', 'colspan' => 2 });
            $output;
        });
        
#line 643 "template/en/default/bug/edit.html.tmpl"
        if (! $stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]])) {
        $output .=  "\n          <a href=\"";
#line 640 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 640 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('url_output');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
        }
        else {
#line 642 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('url_output');
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "\n      </span>";
#line 653 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]])) {
        $output .=  "\n        <script type=\"text/javascript\">\n          hideEditableField('bz_url_edit_container', \n                            'bz_url_input_area', \n                            'bz_url_edit_action', \n                            'bug_file_loc', \n                            \"";
#line 651 "template/en/default/bug/edit.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\");\n        </script>";
        }
        
        $output .=  "\n    </td>\n  </tr>\n  ";
#line 664 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get(['Param', [ 'usestatuswhiteboard' ]])) {
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"status_whiteboard\" accesskey=\"w\"><b><u>W</u>hiteboard</b></label>:\n      </td>";
#line 662 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('input', { 'inputname' => 'status_whiteboard', 'size' => '40', 'colspan' => 2 });
        $output .=  "\n    </tr>";
        }
        
        $output .=  "\n  ";
#line 675 "template/en/default/bug/edit.html.tmpl"
        if ($stash->get('use_keywords')) {
        $output .=  "\n    <tr>\n      <td class=\"field_label\">\n        <label for=\"keywords\" accesskey=\"k\">\n          <b><a href=\"describekeywords.cgi\"><u>K</u>eywords</a></b></label>:\n      </td>";
#line 672 "template/en/default/bug/edit.html.tmpl"
        $output .=  $context->process('input', { 'inputname' => 'keywords', 'size' => 40, 'colspan' => 2, 'value' => $stash->get(['bug', 0, 'keywords', 0, 'join', [ ', ' ]]) });
        $output .=  "\n    </tr>";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
