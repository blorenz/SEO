use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1226057690',
        'name' => 'admin/fieldvalues/create.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n  ";
#line 23 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "\n  Add Value for the '";
#line 22 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' (";
#line 22 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ") field";
        $output;
    });
    
#line 24 "template/en/default/admin/fieldvalues/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title') });
    $output .=  "\n\n<p>\n  This page allows you to add a new value for the \n  '";
#line 30 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' field.\n</p>\n\n<form method=\"post\" action=\"editvalues.cgi\">\n  <table border=\"0\" cellpadding=\"4\" cellspacing=\"0\">\n    <tr>\n      <th align=\"right\"><label for=\"value\">Value:</label></th>\n      <td>\n        <input id=\"value\" name=\"value\" size=\"30\"\n               maxlength=\"";
#line 39 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  '64';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      </td>\n    </tr>\n    <tr>\n      <th align=\"right\"><label for=\"sortkey\">Sortkey:</label></th>\n      <td><input id=\"sortkey\" name=\"sortkey\" size=\"6\" maxlength=\"6\"></td>\n    </tr>";
#line 64 "template/en/default/admin/fieldvalues/create.html.tmpl"
    if ($stash->get(['field', 0, 'name', 0]) eq 'bug_status') {
    $output .=  "\n      <tr>\n        <th align=\"right\"><label for=\"is_open\">Status Type:</label></th>\n        <td>\n          <input type=\"radio\" id=\"open_status\" name=\"is_open\" value=\"1\" \n                 checked=\"checked\">\n          <label for=\"open_status\">Open</label><br>\n          <input type=\"radio\" id=\"closed_status\" name=\"is_open\" value=\"0\">\n          <label for=\"closed_status\">Closed (requires a Resolution)</label>\n        </td>\n      </tr>\n      <tr>\n        <th>&nbsp;</th>\n        <td>\n          Note: The open/close attribute can only be set now, when you create\n          the status. It cannot be edited later.\n        </td>\n      </tr>";
    }
    
#line 85 "template/en/default/admin/fieldvalues/create.html.tmpl"
    if ($stash->get(['field', 0, 'value_field', 0])) {
    $output .=  "\n      <tr>\n        <th align=\"right\">\n          <label for=\"visibility_value_id\">Only appears when \n           ";
#line 69 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'value_field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " is set to:\n          </label>\n        </th>\n        <td>\n          <select name=\"visibility_value_id\" id=\"visibility_value_id\">\n            <option></option>";
#line 80 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['field', 0, 'value_field', 0, 'legal_values', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'field_value'} = $_tt_value;
#line 76 "template/en/default/admin/fieldvalues/create.html.tmpl"
    if ($stash->get(['field_value', 0, 'name', 0]) eq '') {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n              <option value=\"";
#line 77 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_value', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 78 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "              </option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n          </select>\n          <small>(Leave unset to have this value always appear.)</small>\n        </td>\n      </tr>";
    }
    
    $output .=  "\n  </table>\n  <input type=\"submit\" id=\"create\" value=\"Add\">\n  <input type=\"hidden\" name=\"action\" value=\"new\">\n  <input type=\"hidden\" name='field' value=\"";
#line 89 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 90 "template/en/default/admin/fieldvalues/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n</form>\n";
#line 93 "template/en/default/admin/fieldvalues/create.html.tmpl"
    $output .=  $context->process('admin/fieldvalues/footer.html.tmpl', { 'no_add_link' => 1 });
    $output .=  "\n";
#line 97 "template/en/default/admin/fieldvalues/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
