use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1245891897',
        'name' => 'admin/users/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 24 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Select user', 'style_urls' => [ 'skins/standard/editusers.css' ], 'doc_section' => 'useradmin.html' });
    $output .=  "\n";
#line 30 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $context->process('admin/users/listselectvars.html.tmpl', { 'listselectionvalues' => $stash->get('listselectionvalues') });
    $output .=  "\n";
#line 34 "template/en/default/admin/users/list.html.tmpl"
    
    # CAPTURE
    $stash->set('listselectionurlparams', do {
        my $output = '';
    $output .=  $context->include('listselectionurlparams');
        $output;
    });
    
    $output .=  "\n";
#line 36 "template/en/default/admin/users/list.html.tmpl"
    $stash->set('columns', [ { 'name' => 'login_name', 'heading' => 'Edit user...', 'contentlink' => 'editusers.cgi?action=edit&amp;userid=%%userid%%'  . $stash->get('listselectionurlparams')  }, { 'name' => 'realname', 'heading' => 'Real name'  }, { 'heading' => 'Account History', 'content' => 'View', 'contentlink' => 'editusers.cgi?action=activity'  . '&amp;userid=%%userid%%'  . $stash->get('listselectionurlparams')  } ]);
    $output .=  "\n";
#line 63 "template/en/default/admin/users/list.html.tmpl"
    if ($stash->get(['Param', [ 'allowuserdeletion' ]]) && $stash->get('editusers')) {
#line 55 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $stash->get(['columns', 0, 'push', [ { 'heading' => 'Action', 'content' => 'Delete', 'contentlink' => 'editusers.cgi?action=del'  . '&amp;userid=%%userid%%'  . $stash->get('listselectionurlparams')  } ]]);
    }
    
    $output .=  "\n\n";
#line 66 "template/en/default/admin/users/list.html.tmpl"
    $stash->set(['overrides', 0, 'login_name', 0], {   });
#line 67 "template/en/default/admin/users/list.html.tmpl"
    $stash->set(['overrides', 0, 'realname', 0], {   });
    $output .=  "\n";
#line 95 "template/en/default/admin/users/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('users');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'thisuser'} = $_tt_value;
#line 86 "template/en/default/admin/users/list.html.tmpl"
    if (! $stash->get(['thisuser', 0, 'realname', 0])) {
    $output .=  "\n    ";
#line 72 "template/en/default/admin/users/list.html.tmpl"
    $stash->set('classes', ($stash->get(['thisuser', 0, 'disabledtext', 0]) ? 'bz_inactive missing' : 'missing'));
#line 1 "template/en/default/admin/users/list.html.tmpl"
    $stash->set(['overrides', 0, 'realname', 0, 'login_name', 0, $stash->get(['thisuser', 0, 'login_name', 0]), 0], { 'content' => 'missing', 'override_content' => 1, 'class' => ('' . $stash->get('classes')), 'override_class' => 1  });
    }
    elsif ($stash->get(['thisuser', 0, 'disabledtext', 0])) {
#line 81 "template/en/default/admin/users/list.html.tmpl"
    $stash->set(['overrides', 0, 'realname', 0, 'login_name', 0, $stash->get(['thisuser', 0, 'login_name', 0]), 0], { 'class' => 'bz_inactive', 'override_class' => 1  });
    }
    
    $output .=  "\n";
#line 94 "template/en/default/admin/users/list.html.tmpl"
    if ($stash->get(['thisuser', 0, 'disabledtext', 0])) {
#line 89 "template/en/default/admin/users/list.html.tmpl"
    $stash->set(['overrides', 0, 'login_name', 0, 'login_name', 0, $stash->get(['thisuser', 0, 'login_name', 0]), 0], { 'class' => 'bz_inactive', 'override_class' => 1  });
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n<p>";
#line 97 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $stash->get(['users', 0, 'size', 0]);
    $output .=  " user";
#line 97 "template/en/default/admin/users/list.html.tmpl"
    if (!($stash->get(['users', 0, 'size', 0]) eq 1)) {
    $output .=  's';
    }
    
    $output .=  " found.</p>\n";
#line 99 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $context->process('admin/table.html.tmpl', { 'columns' => $stash->get('columns'), 'data' => $stash->get('users'), 'overrides' => $stash->get('overrides') });
    $output .=  "\n\n<p>\n  If you do not wish to modify a user account at this time, you can\n  <a href=\"editusers.cgi\">find other users</a>";
#line 112 "template/en/default/admin/users/list.html.tmpl"
    if ($stash->get('editusers')) {
    $output .=  "\n    or\n    <a href=\"editusers.cgi?action=add";
#line 110 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $context->include('listselectionurlparams');
    $output .=  "\">add\n    a new user</a>";
    }
    
    $output .=  ".\n</p>\n";
#line 115 "template/en/default/admin/users/list.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
