use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1265322700',
        'name' => 'list/table.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
#line 34 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
#line 35 "template/en/default/list/table.html.tmpl"
    $stash->set(['field_descs', 0, 'short_short_desc', 0], $stash->get(['field_descs', 0, 'short_desc', 0]));
#line 36 "template/en/default/list/table.html.tmpl"
    $stash->set(['field_descs', 0, 'assigned_to_realname', 0], $stash->get(['field_descs', 0, 'assigned_to', 0]));
#line 37 "template/en/default/list/table.html.tmpl"
    $stash->set(['field_descs', 0, 'reporter_realname', 0], $stash->get(['field_descs', 0, 'reporter', 0]));
#line 38 "template/en/default/list/table.html.tmpl"
    $stash->set(['field_descs', 0, 'qa_contact_realname', 0], $stash->get(['field_descs', 0, 'qa_contact', 0]));
    $output .=  "\n";
#line 40 "template/en/default/list/table.html.tmpl"
    $stash->set('abbrev', { 'bug_severity' => { 'maxlength' => 3, 'title' => 'Sev'  }, 'priority' => { 'maxlength' => 3, 'title' => 'Pri'  }, 'rep_platform' => { 'maxlength' => 3, 'title' => 'Plt'  }, 'bug_status' => { 'maxlength' => 4  }, 'assigned_to' => { 'maxlength' => 30, 'ellipsis' => '...'  }, 'assigned_to_realname' => { 'maxlength' => 20, 'ellipsis' => '...'  }, 'reporter' => { 'maxlength' => 30, 'ellipsis' => '...'  }, 'reporter_realname' => { 'maxlength' => 20, 'ellipsis' => '...'  }, 'qa_contact' => { 'maxlength' => 30, 'ellipsis' => '...', 'title' => 'QAContact'  }, 'qa_contact_realname' => { 'maxlength' => 20, 'ellipsis' => '...', 'title' => 'QAContact'  }, 'resolution' => { 'maxlength' => 4  }, 'short_desc' => { 'wrap' => 1  }, 'short_short_desc' => { 'maxlength' => 60, 'ellipsis' => '...', 'wrap' => 1  }, 'status_whiteboard' => { 'title' => 'Whiteboard', 'wrap' => 1  }, 'keywords' => { 'wrap' => 1  }, 'component' => { 'maxlength' => 8, 'title' => 'Comp'  }, 'product' => { 'maxlength' => 8  }, 'version' => { 'maxlength' => 5, 'title' => 'Vers'  }, 'op_sys' => { 'maxlength' => 4  }, 'target_milestone' => { 'title' => 'TargetM'  }, 'percentage_complete' => { 'format_value' => '%d %%'  }  });
    $output .=  "\n";
#line 66 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('bug/time.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
#line 129 "template/en/default/list/table.html.tmpl"
    
    # CAPTURE
    $stash->set('tableheader', do {
        my $output = '';
    $output .=  "\n  <table class=\"bz_buglist\" cellspacing=\"0\" cellpadding=\"4\" width=\"100%\">\n    <colgroup>";
#line 77 "template/en/default/list/table.html.tmpl"
    if ($stash->get('dotweak')) {
    $output .=  "\n        <col class=\"bz_checkbox_column\">";
    }
    
    $output .=  "\n      <col class=\"bz_id_column\">";
#line 81 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('displaycolumns');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'id'} = $_tt_value;
    $output .=  "\n      <col class=\"bz_";
#line 80 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "_column\">";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </colgroup>\n\n    <tr class=\"bz_buglist_header bz_first_buglist_header\" align=\"left\">";
#line 87 "template/en/default/list/table.html.tmpl"
    if ($stash->get('dotweak')) {
    $output .=  "\n      <th>&nbsp;</th>";
    }
    
    $output .=  "\n      <th colspan=\"";
#line 88 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get('splitheader') ? 2 : 1;
    $output .=  "\" class=\"first-child\">";
#line 89 "template/en/default/list/table.html.tmpl"
    $stash->set('desc', '');
#line 92 "template/en/default/list/table.html.tmpl"
    if ($stash->set('om', $stash->get(['order', 0, 'match', [ '^bug_id( DESC)?' ]]))) {
#line 91 "template/en/default/list/table.html.tmpl"
    
    # CAPTURE
    $stash->set('desc', do {
        my $output = '';
    if (! $stash->get(['om', 0, 0, 0])) {
    $output .=  ' DESC';
    }
    
        $output;
    });
    
    }
    
    $output .=  "\n        <a href=\"buglist.cgi?";
#line 94 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlquerypart');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;order=bug_id";
#line 94 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('desc');
        
        &$_tt_filter($output);
    };
    
    
    $output .=  "&amp;query_based_on=";
#line 96 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('defaultsavename') || $stash->get('searchname');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">ID</a>\n      </th>\n";
#line 126 "template/en/default/list/table.html.tmpl"
    if ($stash->get('splitheader')) {
    $output .=  "\n";
#line 105 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('displaycolumns');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'id'} = $_tt_value;
#line 102 "template/en/default/list/table.html.tmpl"
    if (!($stash->get(['loop', 0, 'count', 0]) % 2 eq 0)) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 103 "template/en/default/list/table.html.tmpl"
    $stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 104 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('columnheader');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n        </tr><tr class=\"bz_buglist_header\" align=\"left\">";
#line 110 "template/en/default/list/table.html.tmpl"
    if ($stash->get('dotweak')) {
    $output .=  "\n          <th>&nbsp;</th>";
    }
    
    $output .=  "\n        <th>&nbsp;</th>\n";
#line 117 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('displaycolumns');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'id'} = $_tt_value;
#line 114 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['loop', 0, 'count', 0]) % 2 eq 0) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 115 "template/en/default/list/table.html.tmpl"
    $stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 116 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('columnheader');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
    }
    else {
    $output .=  "\n";
#line 124 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('displaycolumns');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'id'} = $_tt_value;
#line 122 "template/en/default/list/table.html.tmpl"
    $stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 123 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('columnheader');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
    }
    
    $output .=  "\n\n    </tr>";
        $output;
    });
    
    $output .=  "\n";
    
    $output .=  "\n\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
#line 231 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bugs');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
#line 152 "template/en/default/list/table.html.tmpl"
    $stash->set('count', $stash->get(['loop', 0, 'count', 0]));
#line 153 "template/en/default/list/table.html.tmpl"
    if ($stash->get('count') % 10 eq 1) {
    $output .=  $stash->get('FLUSH');
    }
    
    $output .=  "\n\n  ";
#line 158 "template/en/default/list/table.html.tmpl"
    if ($stash->get('count') % 100 eq 1) {
#line 157 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get('tableheader');
    }
    
    $output .=  "\n\n  <tr class=\"bz_bugitem\n             bz_";
#line 161 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_severity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "             bz_";
#line 162 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'priority', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "             bz_";
#line 163 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "             ";
#line 1 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['bug', 0, 'resolution', 0])) {
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  ("bz_" . $stash->get(['bug', 0, 'resolution', 0]));
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "             ";
#line 165 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['bug', 0, 'secure_mode', 0])) {
    $output .=  'bz_secure';
    }
    
    $output .=  "             ";
#line 1 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['bug', 0, 'secure_mode', 0])) {
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  ("bz_secure_mode_" . $stash->get(['bug', 0, 'secure_mode', 0]));
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "             ";
#line 167 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get('count') % 2 eq 1 ? 'bz_row_odd' : 'bz_row_even';
    $output .=  "             \">\n";
#line 174 "template/en/default/list/table.html.tmpl"
    if ($stash->get('dotweak')) {
    $output .=  "\n    <td>\n      <input type=\"checkbox\" name=\"id_";
#line 172 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\">\n    </td>";
    }
    
    $output .=  "\n    <td class=\"first-child\">\n      <a name=\"b";
#line 176 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\"\n         href=\"show_bug.cgi?id=";
#line 177 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\">";
#line 177 "template/en/default/list/table.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "</a>\n      <span style=\"display: none\">";
#line 178 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['bug', 0, 'secure_mode', 0])) {
    $output .=  '[SEC]';
    }
    
    $output .=  "</span>\n    </td>\n";
#line 217 "template/en/default/list/table.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('displaycolumns');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'column'} = $_tt_value;
    $output .=  "\n    <td ";
#line 182 "template/en/default/list/table.html.tmpl"
    if (! $stash->get(['abbrev', 0, $stash->get('column'), 0, 'wrap', 0])) {
    $output .=  'style="white-space: nowrap"';
    }
    
    $output .=  ">";
#line 192 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0])) {
    $output .=  "\n        <span title=\"";
#line 191 "template/en/default/list/table.html.tmpl"
    if ($stash->get('column') eq 'bug_status') {
#line 186 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, $stash->get('column'), 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('column') eq 'resolution') {
#line 188 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_resolution', [ $stash->get(['bug', 0, $stash->get('column'), 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 190 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, $stash->get('column'), 0]);
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\">";
    }
    
#line 212 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['abbrev', 0, $stash->get('column'), 0, 'format_value', 0])) {
    $output .=  " ";
#line 194 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('format', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'format_value', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, $stash->get('column'), 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('column') eq 'actual_time' || $stash->get('column') eq 'remaining_time' || $stash->get('column') eq 'estimated_time') {
#line 198 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, $stash->get('column'), 0]) });
    $output .=  " ";
    }
    elsif ($stash->get('column') eq 'bug_status') {
#line 200 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, $stash->get('column'), 0]) ], 'truncate', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0]), $stash->get(['abbrev', 0, $stash->get('column'), 0, 'ellipsis', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    }
    elsif ($stash->get('column') eq 'resolution') {
#line 202 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_resolution', [ $stash->get(['bug', 0, $stash->get('column'), 0]) ], 'truncate', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0]), $stash->get(['abbrev', 0, $stash->get('column'), 0, 'ellipsis', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n\n      ";
    }
    elsif ($stash->get(['column', 0, 'match', [ '_realname$' ]]) && $stash->get(['bug', 0, $stash->get('column'), 0]) eq '') {
#line 206 "template/en/default/list/table.html.tmpl"
    $stash->set('login_column', $stash->get(['column', 0, 'remove', [ '_realname$' ]]));
#line 207 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, $stash->get('login_column'), 0, 'truncate', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0]), $stash->get(['abbrev', 0, $stash->get('column'), 0, 'ellipsis', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n";
    }
    else {
#line 211 "template/en/default/list/table.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, $stash->get('column'), 0, 'truncate', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0]), $stash->get(['abbrev', 0, $stash->get('column'), 0, 'ellipsis', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    }
    
#line 215 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['abbrev', 0, $stash->get('column'), 0, 'maxlength', 0])) {
    $output .=  "\n        </span>";
    }
    
    $output .=  "\n    </td>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  </tr>\n\n  ";
#line 229 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['loop', 0, 'last', 0]) || $stash->get(['loop', 0, 'count', 0]) % 100 eq 0) {
#line 227 "template/en/default/list/table.html.tmpl"
    if ($stash->get(['loop', 0, 'last', 0]) && $stash->get(['time_info', 0, 'time_present', 0]) eq 1) {
#line 226 "template/en/default/list/table.html.tmpl"
    $output .=  $context->process('time_summary_line');
    }
    
    $output .=  "\n    </table>";
    }
    
    $output .=  "\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'time_summary_line' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr class=\"bz_time_summary_line\">";
#line 236 "template/en/default/list/table.html.tmpl"
        $stash->set('columns_to_span', 1);
        $output .=  "  ";
#line 239 "template/en/default/list/table.html.tmpl"
        if ($stash->get('dotweak')) {
#line 238 "template/en/default/list/table.html.tmpl"
        $stash->set('columns_to_span', $stash->get('columns_to_span') + 1);
        }
        
#line 262 "template/en/default/list/table.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get('displaycolumns');
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'column'} = $_tt_value;
#line 261 "template/en/default/list/table.html.tmpl"
        if ($stash->get('column') eq 'actual_time' || $stash->get('column') eq 'remaining_time' || $stash->get('column') eq 'estimated_time' || $stash->get('column') eq 'percentage_complete') {
#line 249 "template/en/default/list/table.html.tmpl"
        if ($stash->get('columns_to_span') > 0) {
        $output .=  "\n          <td class=\"bz_total bz_total_label\" colspan=\"";
#line 247 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('columns_to_span');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"><b>Totals</b></td>";
#line 248 "template/en/default/list/table.html.tmpl"
        $stash->set('columns_to_span', 0);
        }
        
#line 256 "template/en/default/list/table.html.tmpl"
        if ($stash->get('column') eq 'percentage_complete') {
        $output .=  "\n          <td class=\"bz_total\">";
#line 251 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('format', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'format_value', 0]) ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['time_info', 0, 'percentage_complete', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</td>";
        }
        else {
        $output .=  "\n          <td class=\"bz_total\">";
#line 255 "template/en/default/list/table.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['time_info', 0, $stash->get('column'), 0]) });
        $output .=  "</td>";
        }
        
        }
        elsif ($stash->get('columns_to_span') eq 0) {
        $output .=  " ";
        $output .=  "\n        <td class=\"bz_total\">&nbsp;</td>";
        }
        else {
        $output .=  " ";
#line 260 "template/en/default/list/table.html.tmpl"
        $stash->set('columns_to_span', $stash->get('columns_to_span') + 1);
        }
        ;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'columnheader' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <th colspan=\"";
#line 132 "template/en/default/list/table.html.tmpl"
        $output .=  $stash->get('splitheader') ? 2 : 1;
        $output .=  "\">";
#line 133 "template/en/default/list/table.html.tmpl"
        $stash->set('desc', '');
#line 136 "template/en/default/list/table.html.tmpl"
        if ($stash->set('om', $stash->get(['order', 0, 'match', [ ($stash->get('id') . "( DESC)?") ]]))) {
#line 135 "template/en/default/list/table.html.tmpl"
        
        # CAPTURE
        $stash->set('desc', do {
            my $output = '';
        if (! $stash->get(['om', 0, 0, 0])) {
        $output .=  ' DESC';
        }
        
            $output;
        });
        
        }
        
        $output .=  "\n    <a href=\"buglist.cgi?";
#line 137 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('urlquerypart');
            
            &$_tt_filter($output);
        };
        
        $output .=  "&amp;order=";
#line 138 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('url_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('id');
            
            &$_tt_filter($output);
        };
        
#line 138 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('url_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('desc');
            
            &$_tt_filter($output);
        };
        
#line 1 "template/en/default/list/table.html.tmpl"
        if ($stash->get('order')) {
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('url_quote')
                      || $context->throw($context->error);
        
        $output .=  ','  . $stash->get(['order', 0, 'remove', [ ("\\b" . $stash->get('id') . "( DESC)?(,\\s*|\$)") ]]);
            
            &$_tt_filter($output);
        };
        
        }
        
        
        $output .=  "&amp;query_based_on=";
#line 141 "template/en/default/list/table.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('url_quote')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('defaultsavename') || $stash->get('searchname');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 142 "template/en/default/list/table.html.tmpl"
        $output .=  $stash->get(['abbrev', 0, $stash->get('id'), 0, 'title', 0]) || $stash->get(['field_descs', 0, $stash->get('id'), 0]) || $stash->get(['column', 0, 'title', 0]);
        $output .=  "</a>\n  </th>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
