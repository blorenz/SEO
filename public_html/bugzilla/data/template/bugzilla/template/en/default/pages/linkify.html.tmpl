use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634305',
        'name' => 'pages/linkify.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 22 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
#line 23 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $context->include('global/header.html.tmpl', { 'title' => 'Linkify Text' });
    $output .=  "\n\n<p>\n  If you enter some text, this form will return it marked up like a\n  standard ";
#line 27 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " comment. That is, valid ";
#line 27 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " numbers,\n  URLs, email addresses and so on will be replaced with appropriate HTML links.\n</p>\n\n<form action=\"page.cgi\" method=\"post\">";
#line 32 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'text', 'minrows' => 20, 'cols' => '80' });
    $output .=  "\n  <br>\n  <input type=\"hidden\" name=\"id\" value=\"linked.html\">\n  <input type=\"submit\" id=\"linkify\" value=\"Linkify\">\n</form>\n";
#line 42 "template/en/default/pages/linkify.html.tmpl"
    $output .=  $context->include('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
