use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634305',
        'name' => 'list/server-push.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 26 "template/en/default/list/server-push.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\n<html>\n  <head>\n    <title>";
#line 30 "template/en/default/list/server-push.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " is pondering your search</title>\n  </head>\n  <body>\n    <h1 style=\"margin-top: 20%; text-align: center;\">Please stand by ...</h1>\n";
#line 44 "template/en/default/list/server-push.html.tmpl"
    if ($stash->get('debug')) {
    $output .=  "\n      <p>";
#line 39 "template/en/default/list/server-push.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('debugdata');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'debugline'} = $_tt_value;
    $output .=  "\n          <code>";
#line 38 "template/en/default/list/server-push.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('debugline');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code><br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </p>\n      <p>\n        <code>";
#line 42 "template/en/default/list/server-push.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('query');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code>\n      </p>";
    }
    
    $output .=  "\n\n  </body>\n</html>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
