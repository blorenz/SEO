use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1193089321',
        'name' => 'admin/users/search.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n \n";
#line 26 "template/en/default/admin/users/search.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Search users', 'style_urls' => [ 'skins/standard/editusers.css' ], 'onload' => 'document.forms[\'f\'].matchstr.focus()', 'doc_section' => 'useradmin.html#user-account-search' });
    $output .=  "\n";
#line 33 "template/en/default/admin/users/search.html.tmpl"
    $output .=  $context->process('admin/users/listselectvars.html.tmpl', { 'listselectionvalues' => $stash->get('listselectionvalues') });
    $output .=  "\n\n<form name=\"f\" method=\"get\" action=\"editusers.cgi\">\n<input type=\"hidden\" name=\"action\" value=\"list\" />\n<p><label for=\"matchvalue\">List users with</label>\n<select id=\"matchvalue\" name=\"matchvalue\">\n  <option value=\"login_name\">login name</option>\n  <option value=\"realname\">real name</option>\n  <option value=\"userid\">user id</option>\n</select>\n<label for=\"matchstr\">matching</label>\n<input size=\"32\" name=\"matchstr\" id=\"matchstr\" />\n<select name=\"matchtype\">\n  <option value=\"substr\" selected=\"selected\">case-insensitive substring</option>\n  <option value=\"regexp\">case-insensitive regexp</option>\n  <option value=\"notregexp\">not (case-insensitive regexp)</option>\n  <option value=\"exact\">exact (find this user)</option>\n</select>\n<input type=\"submit\" id=\"search\" value=\"Search\" /></p>\n";
#line 64 "template/en/default/admin/users/search.html.tmpl"
    if ($stash->get(['restrictablegroups', 0, 'size', 0])) {
    $output .=  "\n  <p><input type=\"checkbox\" name=\"grouprestrict\" value=\"1\" id=\"grouprestrict\" />\n  <label for=\"grouprestrict\">Restrict to users belonging to group</label>\n  <select name=\"groupid\"\n          onchange=\"document.forms['f'].grouprestrict.checked=true\">";
#line 62 "template/en/default/admin/users/search.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('restrictablegroups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n      <option value=\"";
#line 61 "template/en/default/admin/users/search.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 61 "template/en/default/admin/users/search.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </select></p>";
    }
    
    $output .=  "\n</form>\n";
#line 76 "template/en/default/admin/users/search.html.tmpl"
    if ($stash->get('editusers')) {
    $output .=  "\n  <p>\n    You can also <a href=\"editusers.cgi?action=add\">add a new user</a>";
#line 74 "template/en/default/admin/users/search.html.tmpl"
    if ($stash->get('listselectionvalues')) {
    $output .=  ",\n      or\n      <a href=\"editusers.cgi?action=list";
#line 72 "template/en/default/admin/users/search.html.tmpl"
    $output .=  $context->include('listselectionurlparams');
    $output .=  "\">show\n      the user list again</a>";
    }
    
    $output .=  ".\n  </p>";
    }
    
    $output .=  "\n";
#line 78 "template/en/default/admin/users/search.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
