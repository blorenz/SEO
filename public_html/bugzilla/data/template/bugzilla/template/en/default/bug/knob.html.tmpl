use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1235601547',
        'name' => 'bug/knob.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 24 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n<div id=\"status\">";
#line 26 "template/en/default/bug/knob.html.tmpl"
    $stash->set('initial_action_shown', 0);
#line 27 "template/en/default/bug/knob.html.tmpl"
    $stash->set('show_resolution', 0);
#line 28 "template/en/default/bug/knob.html.tmpl"
    $stash->set('bug_status_select_displayed', 0);
    $output .=  "\n";
#line 30 "template/en/default/bug/knob.html.tmpl"
    $stash->set('closed_status_array', [ ]);
    $output .=  "\n  ";
#line 54 "template/en/default/bug/knob.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'status', 0, 'can_change_to', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug_status'} = $_tt_value;
#line 33 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'isunconfirmed', 0]) && $stash->get(['bug_status', 0, 'is_open', 0]) && ! $stash->get(['bug', 0, 'user', 0, 'canconfirm', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 34 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'isopened', 0]) && ! $stash->get(['bug', 0, 'isunconfirmed', 0]) && $stash->get(['bug_status', 0, 'is_open', 0]) && ! $stash->get(['bug', 0, 'user', 0, 'canedit', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 35 "template/en/default/bug/knob.html.tmpl"
    if ((! $stash->get(['bug_status', 0, 'is_open', 0]) || ! $stash->get(['bug', 0, 'isopened', 0])) && ! $stash->get(['bug', 0, 'user', 0, 'canedit', 0]) && ! $stash->get(['bug', 0, 'user', 0, 'isreporter', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n    ";
#line 38 "template/en/default/bug/knob.html.tmpl"
    if (! $stash->get(['bug', 0, 'isopened', 0]) && ($stash->get(['bug', 0, 'everconfirmed', 0]) && $stash->get(['bug_status', 0, 'name', 0]) eq 'UNCONFIRMED' || ! $stash->get(['bug', 0, 'everconfirmed', 0]) && $stash->get(['bug_status', 0, 'name', 0]) eq 'REOPENED')) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 43 "template/en/default/bug/knob.html.tmpl"
    if (! $stash->get('bug_status_select_displayed')) {
    $output .=  "\n      <select name=\"bug_status\" id=\"bug_status\">";
#line 42 "template/en/default/bug/knob.html.tmpl"
    $stash->set('bug_status_select_displayed', 1);
    }
    
#line 44 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->process('initial_action');
#line 45 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug_status', 0, 'name', 0]) eq $stash->get(['bug', 0, 'bug_status', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n    <option value=\"";
#line 46 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug_status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 47 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug_status', 0, 'name', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    </option>";
#line 53 "template/en/default/bug/knob.html.tmpl"
    if (! $stash->get(['bug_status', 0, 'is_open', 0])) {
#line 50 "template/en/default/bug/knob.html.tmpl"
    $stash->set('show_resolution', 1);
#line 51 "template/en/default/bug/knob.html.tmpl"
    
    # CAPTURE
    $stash->set('filtered_status', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug_status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 52 "template/en/default/bug/knob.html.tmpl"
    $output .=  $stash->get(['closed_status_array', 0, 'push', [ $stash->get('filtered_status') ]]);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  ";
#line 70 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0]) || $stash->get(['bug', 0, 'user', 0, 'isreporter', 0])) {
#line 61 "template/en/default/bug/knob.html.tmpl"
    if (! $stash->get('bug_status_select_displayed')) {
    $output .=  "\n      <select name=\"bug_status\" id=\"bug_status\">";
#line 60 "template/en/default/bug/knob.html.tmpl"
    $stash->set('bug_status_select_displayed', 1);
    $output .=  " ";
    }
    
#line 69 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'isopened', 0])) {
#line 65 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'resolution', 0])) {
#line 64 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->process('initial_action');
    }
    
    }
    elsif ($stash->get(['bug', 0, 'resolution', 0]) ne 'MOVED' || $stash->get(['bug', 0, 'user', 0, 'canmove', 0])) {
#line 67 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->process('initial_action');
#line 68 "template/en/default/bug/knob.html.tmpl"
    $stash->set('show_resolution', 1);
    }
    
    }
    
    $output .=  "  ";
#line 82 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get('bug_status_select_displayed')) {
    $output .=  "\n    </select>";
    }
    else {
#line 74 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, 'bug_status', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
#line 81 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'resolution', 0])) {
    $output .=  "\n        ";
#line 76 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_resolution', [ $stash->get(['bug', 0, 'resolution', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
#line 80 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  "\n          <span id=\"duplicate_display\">of ";
#line 1 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>";
    }
    
    }
    
    }
    
#line 101 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0]) || $stash->get(['bug', 0, 'user', 0, 'isreporter', 0])) {
    $output .=  "  ";
#line 87 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get('show_resolution')) {
    $output .=  "\n      <noscript><br>resolved&nbsp;as&nbsp;</noscript>\n      <span id=\"resolution_settings\">";
#line 86 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->process('select_resolution');
    $output .=  "</span>";
    }
    
    $output .=  "\n    <noscript><br> duplicate</noscript>\n    \n    <span id=\"duplicate_settings\">of \n      <span id=\"dup_id_container\" class=\"bz_default_hidden\">";
#line 1 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n        (<a href=\"#\" id=\"dup_id_edit_action\">edit</a>)\n      </span\n      ><input id=\"dup_id\" name=\"dup_id\" size=\"6\"\n              value=\"";
#line 96 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dup_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </span>\n    <div id=\"dup_id_discoverable\" class=\"bz_default_hidden\">\n      <a href=\"#\" id=\"dup_id_discoverable_action\">Mark as Duplicate</a>\n    </div>";
    }
    
    $output .=  "\n</div>\n<script type=\"text/javascript\">\n  var close_status_array = new Array(\"";
#line 104 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('replace', [ ',$', '' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['closed_status_array', 0, 'join', [ '", "' ]]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\");\n  YAHOO.util.Dom.removeClass('dup_id_discoverable', 'bz_default_hidden');\n  hideEditableField( \"dup_id_container\", \"dup_id\", 'dup_id_edit_action',\n                     'dup_id', '";
#line 108 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dup_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' )\n  showHideStatusItems( \"\",  ['";
#line 109 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                             '";
#line 110 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "']);\n  YAHOO.util.Event.addListener( 'bug_status', \"change\", showHideStatusItems,\n                                ['";
#line 112 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                                 '";
#line 113 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "']);\n  YAHOO.util.Event.addListener( 'resolution', \"change\", showDuplicateItem);\n  YAHOO.util.Event.addListener( 'dup_id_discoverable_action',\n                                'click',\n                                setResolutionToDuplicate,\n                                '";
#line 118 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'duplicate_or_move_bug_status' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "');\n  YAHOO.util.Event.addListener( window, 'load',  showHideStatusItems,\n                              ['";
#line 121 "template/en/default/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                               '";
#line 122 "template/en/default/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'] );\n";
#line 124 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->include('bug/field-events.js.tmpl', { 'field' => $stash->get(['select_fields', 0, 'bug_status', 0]) });
#line 125 "template/en/default/bug/knob.html.tmpl"
    $output .=  $context->include('bug/field-events.js.tmpl', { 'field' => $stash->get(['select_fields', 0, 'resolution', 0]) });
    $output .=  "\n</script>\n\n";
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'select_resolution' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <select name=\"resolution\" id=\"resolution\">";
#line 151 "template/en/default/bug/knob.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['bug', 0, 'choices', 0, 'resolution', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'r'} = $_tt_value;
#line 147 "template/en/default/bug/knob.html.tmpl"
        if ($stash->get('r') eq 'MOVED' && $stash->get(['bug', 0, 'resolution', 0]) ne 'MOVED') {
        ($_tt_value, $_tt_error) = $_tt_list->get_next();
        next FOR1;
        
        }
        
        $output .=  "\n      <option value=\"";
#line 148 "template/en/default/bug/knob.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('r');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 149 "template/en/default/bug/knob.html.tmpl"
        if ($stash->get('r') eq $stash->get(['bug', 0, 'resolution', 0])) {
        $output .=  'selected';
        }
        
        $output .=  ">";
#line 150 "template/en/default/bug/knob.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['get_resolution', [ $stash->get('r') ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n  </select>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'initial_action' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 141 "template/en/default/bug/knob.html.tmpl"
        if (! $stash->get('initial_action_shown')) {
        $output .=  "\n    <option selected value=\"";
#line 132 "template/en/default/bug/knob.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 133 "template/en/default/bug/knob.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, 'bug_status', 0]) ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n    </option>";
#line 139 "template/en/default/bug/knob.html.tmpl"
        if (! $stash->get(['bug', 0, 'isopened', 0])) {
        $output .=  " ";
#line 136 "template/en/default/bug/knob.html.tmpl"
        $stash->set('show_resolution', 1);
#line 137 "template/en/default/bug/knob.html.tmpl"
        
        # CAPTURE
        $stash->set('filtered_status', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
#line 138 "template/en/default/bug/knob.html.tmpl"
        $output .=  $stash->get(['closed_status_array', 0, 'push', [ $stash->get('filtered_status') ]]);
        }
        
#line 140 "template/en/default/bug/knob.html.tmpl"
        $stash->set('initial_action_shown', 1);
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
