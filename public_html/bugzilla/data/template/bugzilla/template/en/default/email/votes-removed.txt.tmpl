use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1207158149',
        'name' => 'email/votes-removed.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\nFrom: ";
#line 23 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 24 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get('to');
    $output .=  "\nSubject: ";
#line 25 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
#line 25 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  " Some or all of your votes have been removed.\nX-Bugzilla-Type: voteremoved\n\nSome or all of your votes have been removed from ";
#line 28 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 28 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  ".\n\nYou had ";
#line 30 "template/en/default/email/votes-removed.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votesold');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 30 "template/en/default/email/votes-removed.txt.tmpl"
    if ($stash->get('votesold') eq 1) {
    $output .=  "vote";
    }
    else {
    $output .=  "votes";
    }
    
    $output .=  " on this ";
#line 31 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", but ";
#line 31 "template/en/default/email/votes-removed.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votesremoved');
        
        &$_tt_filter($output);
    };
    
    $output .=  " have been removed.\n";
#line 37 "template/en/default/email/votes-removed.txt.tmpl"
    if ($stash->get('votesnew')) {
    $output .=  "\nYou still have ";
#line 34 "template/en/default/email/votes-removed.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votesnew');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 34 "template/en/default/email/votes-removed.txt.tmpl"
    if ($stash->get('votesnew') eq 1) {
    $output .=  "vote";
    }
    else {
    $output .=  "votes";
    }
    
    $output .=  " on this ";
#line 34 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    else {
    $output .=  "\nYou have no more votes remaining on this ";
#line 36 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    
    $output .=  "\n\nReason:";
#line 50 "template/en/default/email/votes-removed.txt.tmpl"
    if ($stash->get('reason') eq 'votes_bug_moved') {
    $output .=  "\n  This ";
#line 41 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been moved to a different product.\n";
    }
    elsif ($stash->get('reason') eq 'votes_too_many_per_bug') {
    $output .=  "\n  The rules for voting on this product has changed;\n  you had too many votes for a single ";
#line 45 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('reason') eq 'votes_too_many_per_user') {
    $output .=  "\n  The rules for voting on this product has changed; you had\n  too many total votes, so all votes have been removed.";
    }
    
    $output .=  "\n\n\n";
#line 54 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "show_bug.cgi?id=";
#line 54 "template/en/default/email/votes-removed.txt.tmpl"
    $output .=  $stash->get('bugid');
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
