use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634306',
        'name' => 'reports/keywords.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 31 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 1 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => ($stash->get(['terms', 0, 'Bugzilla', 0]) . " Keyword Descriptions") });
    $output .=  "\n";
#line 75 "template/en/default/reports/keywords.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('keywords');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'keyword'} = $_tt_value;
#line 50 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get(['loop', 0, 'index', 0]) % 50 eq 0) {
#line 41 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get(['loop', 0, 'index', 0]) ne 0) {
    $output .=  "\n       </table>";
    }
    
    $output .=  "\n\n    <table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n      <tr bgcolor=\"#6666FF\">\n        <th align=\"left\">Name</th>\n        <th align=\"left\">Description</th>\n        <th align=\"left\">Open ";
#line 47 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</th>\n        <th align=\"left\">Total ";
#line 48 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</th>\n      </tr>";
    }
    
    $output .=  "\n\n  <tr>\n    <th>\n      <a name=\"";
#line 54 "template/en/default/reports/keywords.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['keyword', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 55 "template/en/default/reports/keywords.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['keyword', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n    </th>\n    <td>";
#line 57 "template/en/default/reports/keywords.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['keyword', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</td>\n    <td align=\"center\">";
#line 64 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get(['keyword', 0, 'bug_count', 0]) > 0) {
    $output .=  "\n        <a href=\"buglist.cgi?keywords=";
#line 60 "template/en/default/reports/keywords.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['keyword', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;resolution=---\">\n          Search</a>";
    }
    else {
    $output .=  "\n        none";
    }
    
    $output .=  "\n    </td>\n    <td align=\"right\">";
#line 72 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get(['keyword', 0, 'bug_count', 0]) > 0) {
    $output .=  "\n        <a href=\"buglist.cgi?keywords=";
#line 68 "template/en/default/reports/keywords.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['keyword', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 69 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $stash->get(['keyword', 0, 'bug_count', 0]);
    $output .=  "</a>";
    }
    else {
    $output .=  "\n        none";
    }
    
    $output .=  "\n    </td>\n  </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 79 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get(['keywords', 0, 'size', 0]) > 0) {
    $output .=  "\n  </table>";
    }
    
    $output .=  "\n";
#line 85 "template/en/default/reports/keywords.html.tmpl"
    if ($stash->get('caneditkeywords')) {
    $output .=  "\n  <p>\n    <a href=\"editkeywords.cgi\">Edit keywords</a>.\n  </p>";
    }
    
    $output .=  "\n";
#line 87 "template/en/default/reports/keywords.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
