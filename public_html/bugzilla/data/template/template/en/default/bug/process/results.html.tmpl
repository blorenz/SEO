use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634301',
        'name' => 'bug/process/results.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 31 "template/en/default/bug/process/results.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 35 "template/en/default/bug/process/results.html.tmpl"
    if (!($stash->get('header_done'))) {
#line 34 "template/en/default/bug/process/results.html.tmpl"
    $output .=  $context->process('bug/process/header.html.tmpl');
    }
    
    $output .=  "\n";
#line 37 "template/en/default/bug/process/results.html.tmpl"
    $stash->set('type', 'bug', 1);
    $output .=  "\n";
#line 39 "template/en/default/bug/process/results.html.tmpl"
    
    # CAPTURE
    $stash->set('Link', do {
        my $output = '';
#line 1 "template/en/default/bug/process/results.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('id') ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get('id'));
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 40 "template/en/default/bug/process/results.html.tmpl"
    
    # CAPTURE
    $stash->set('link', do {
        my $output = '';
#line 1 "template/en/default/bug/process/results.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('id') ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get('id'));
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
#line 1 "template/en/default/bug/process/results.html.tmpl"
    $stash->set('title', { 'bug' => ("Changes submitted for " . $stash->get('link')), 'dupe' => ("Duplicate notation added to " . $stash->get('link')), 'dep' => ("Checking for dependency changes on " . $stash->get('link')), 'votes' => ($stash->get('Link') . " confirmed by number of votes"), 'created' => ($stash->get('Link') . " has been added to the database"), 'move' => ($stash->get('Link') . " has been moved to another database")  });
    $output .=  "\n\n<dl>\n  <dt>";
#line 54 "template/en/default/bug/process/results.html.tmpl"
    $output .=  $stash->get(['title', 0, $stash->get('type'), 0]);
    $output .=  "</dt>\n  <dd>";
#line 56 "template/en/default/bug/process/results.html.tmpl"
    $output .=  $context->process('bug/process/bugmail.html.tmpl', { 'mailing_bugid' => $stash->get('id') });
    $output .=  "\n    ";
#line 58 "template/en/default/bug/process/results.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'links' ]]);
    $output .=  "\n  </dd>\n</dl>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
