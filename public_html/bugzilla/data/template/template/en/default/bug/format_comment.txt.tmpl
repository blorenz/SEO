use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1268527602',
        'name' => 'bug/format_comment.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n\n";
    $output .=  "\n";
#line 39 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 59 "template/en/default/bug/format_comment.txt.tmpl"
    if ($stash->get(['comment', 0, 'type', 0]) eq '1') {
    $output .=  "X";
#line 42 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'body', 0]);
    $output .=  "\n\n*** This ";
#line 44 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been marked as a duplicate of ";
#line 44 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 44 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'extra_data', 0]);
    $output .=  " ***";
    }
    elsif ($stash->get(['comment', 0, 'type', 0]) eq '2') {
    $output .=  "\n*** ";
#line 46 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
#line 46 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'extra_data', 0]);
    $output .=  " has been marked as a duplicate of this ";
#line 46 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ". ***";
    }
    elsif ($stash->get(['comment', 0, 'type', 0]) eq '3') {
    $output .=  "\n*** This ";
#line 48 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been confirmed by popular vote. ***";
    }
    elsif ($stash->get(['comment', 0, 'type', 0]) eq '4') {
    $output .=  "\nX";
#line 50 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'body', 0]);
    $output .=  "\n\n";
#line 52 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " moved to ";
#line 52 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'move-to-url' ]]);
    $output .=  ".\nIf the move succeeded, ";
#line 53 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'extra_data', 0]);
    $output .=  " will receive a mail containing\nthe number of the new ";
#line 54 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " in the other database.\nIf all went well, please paste in a link to the new ";
#line 55 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\nOtherwise, reopen this ";
#line 56 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    else {
    $output .=  "X";
#line 58 "template/en/default/bug/format_comment.txt.tmpl"
    $output .=  $stash->get(['comment', 0, 'body', 0]);
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
