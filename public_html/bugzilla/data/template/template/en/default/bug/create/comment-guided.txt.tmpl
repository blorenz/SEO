use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1230851519',
        'name' => 'bug/create/comment-guided.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "  ";
#line 28 "template/en/default/bug/create/comment-guided.txt.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
#line 29 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $stash->set('cgi', $stash->get(['Bugzilla', 0, 'cgi', 0]));
    $output .=  "\nUser-Agent:       ";
#line 30 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'user_agent', 0]);
    $output .=  "\nBuild Identifier: ";
#line 31 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'buildid' ]]);
    $output .=  "\n\n";
#line 33 "template/en/default/bug/create/comment-guided.txt.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'comment' ]])) {
    $output .=  $stash->get(['cgi', 0, 'param', [ 'comment' ]]);
    }
    
    $output .=  "\n\n";
#line 37 "template/en/default/bug/create/comment-guided.txt.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'reproducible' ]]) ne 'Choose one...') {
    $output .=  "Reproducible: ";
#line 36 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'reproducible' ]]);
    }
    
    $output .=  "\n";
#line 42 "template/en/default/bug/create/comment-guided.txt.tmpl"
    if (! ($stash->get(['cgi', 0, 'param', [ 'reproduce_steps' ], 'match', [ '^1\.\s*2\.\s*3\.\s*$' ]]) || $stash->get(['cgi', 0, 'param', [ 'reproduce_steps' ], 'match', [ '^\s*$' ]]))) {
    $output .=  "\nSteps to Reproduce:\n";
#line 41 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'reproduce_steps' ]]);
    }
    
    $output .=  "\n";
#line 47 "template/en/default/bug/create/comment-guided.txt.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'actual_results' ]])) {
    $output .=  "Actual Results:  \n";
#line 46 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'actual_results' ]]);
    }
    
    $output .=  "\n";
#line 52 "template/en/default/bug/create/comment-guided.txt.tmpl"
    if ($stash->get(['cgi', 0, 'param', [ 'expected_results' ]])) {
    $output .=  "\nExpected Results:  \n";
#line 51 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'expected_results' ]]);
    }
    
    $output .=  "\n\n";
#line 54 "template/en/default/bug/create/comment-guided.txt.tmpl"
    $output .=  $stash->get(['cgi', 0, 'param', [ 'additional_info' ]]);
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
