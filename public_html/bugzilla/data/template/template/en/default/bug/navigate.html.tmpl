use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1201461676',
        'name' => 'bug/navigate.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
#line 35 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('bottom_navigator') eq 1) {
    $output .=  "\n  <ul class=\"related_actions\">\n    <li><a href=\"show_bug.cgi?format=multiple&amp;id=";
#line 25 "template/en/default/bug/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Format For Printing</a></li>\n    <li>&nbsp;-&nbsp;<a href=\"show_bug.cgi?ctype=xml&amp;id=";
#line 27 "template/en/default/bug/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">XML</a></li>\n    <li>&nbsp;-&nbsp;<a href=\"enter_bug.cgi?cloned_bug_id=";
#line 29 "template/en/default/bug/navigate.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Clone This ";
#line 30 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "</a></li>\n    ";
#line 32 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'links' ]]);
    $output .=  "\n    <li>&nbsp;-&nbsp;<a href=\"#\">Top of page </a></li>\n    </ul>";
    }
    
    $output .=  "        \n\n\n<div class=\"navigation\">";
#line 83 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('bug_list') && $stash->get(['bug_list', 0, 'size', 0]) > 0) {
#line 40 "template/en/default/bug/navigate.html.tmpl"
    $stash->set('this_bug_idx', $stash->get(['lsearch', [ $stash->get('bug_list'), $stash->get(['bug', 0, 'bug_id', 0]) ]]));
    $output .=  "\n  <b>";
#line 41 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " List:</b>";
#line 44 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('this_bug_idx') ne -1) {
    $output .=  "\n    (";
#line 43 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get('this_bug_idx') + 1;
    $output .=  " of ";
#line 43 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['bug_list', 0, 'size', 0]);
    $output .=  ")";
    }
    
    $output .=  "\n";
#line 49 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('this_bug_idx') ne -1) {
    $output .=  "\n  <a href=\"show_bug.cgi?id=";
#line 47 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['bug_list', 0, 'first', 0]);
    $output .=  "\">First</a>\n  <a href=\"show_bug.cgi?id=";
#line 48 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['bug_list', 0, 'last', 0]);
    $output .=  "\">Last</a>";
    }
    
    $output .=  "\n";
#line 71 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get(['bug', 0, 'bug_id', 0])) {
#line 68 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('this_bug_idx') ne -1) {
#line 58 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('this_bug_idx') > 0) {
#line 54 "template/en/default/bug/navigate.html.tmpl"
    $stash->set('prev_bug', $stash->get('this_bug_idx') - 1);
    $output .=  "\n        <a href=\"show_bug.cgi?id=";
#line 55 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['bug_list', 0, $stash->get('prev_bug'), 0]);
    $output .=  "\">Prev</a>";
    }
    else {
    $output .=  "\n        <i><font color=\"#777777\">Prev</font></i>";
    }
    
    $output .=  "\n";
#line 65 "template/en/default/bug/navigate.html.tmpl"
    if ($stash->get('this_bug_idx') + 1 < $stash->get(['bug_list', 0, 'size', 0])) {
#line 61 "template/en/default/bug/navigate.html.tmpl"
    $stash->set('next_bug', $stash->get('this_bug_idx') + 1);
    $output .=  "\n        <a href=\"show_bug.cgi?id=";
#line 62 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['bug_list', 0, $stash->get('next_bug'), 0]);
    $output .=  "\">Next</a>";
    }
    else {
    $output .=  "\n        <i><font color=\"#777777\">Next</font></i>";
    }
    
    }
    else {
    $output .=  "\n      (This ";
#line 67 "template/en/default/bug/navigate.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " is not in your last search results)";
    }
    
    }
    else {
    $output .=  "\n    &nbsp;&nbsp;";
    }
    
    $output .=  "\n\n  &nbsp;&nbsp;<a href=\"buglist.cgi?regetlastlist=1\">Show last search results</a>";
    }
    else {
    $output .=  "\n  ";
    $output .=  "\n  ";
    $output .=  "\n  <i><font color=\"#777777\">First</font></i>\n  <i><font color=\"#777777\">Last</font></i>\n  <i><font color=\"#777777\">Prev</font></i>\n  <i><font color=\"#777777\">Next</font></i>\n  &nbsp;&nbsp;\n  <i><font color=\"#777777\">No search results available</font></i>";
    }
    
    $output .=  "\n</div>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
