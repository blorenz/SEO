use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634290',
        'name' => 'admin/params/usermatch.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 21 "template/en/default/admin/params/usermatch.html.tmpl"
    $stash->set('title', 'User Matching');
    $stash->set('desc', 'Set up your user matching policies');
    $output .=  "\n";
#line 1 "template/en/default/admin/params/usermatch.html.tmpl"
    $stash->set('param_descs', { 'usemenuforusers' => ("If this option is set, " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will offer you a list ")  . 'to select from (instead of a text entry field) where a user '  . 'needs to be selected. This option should not be enabled on '  . 'sites where there are a large number of users.', 'usermatchmode' => 'Allow match strings to be entered for user names when entering '  . ("and editing " . $stash->get(['terms', 0, 'bugs', 0]) . ".<p> ")  . '\'off\' disables matching,<br> '  . '\'wildcard\' allows only wildcards,<br> '  . 'and \'search\' allows both wildcards and substring (freetext) matches.', 'maxusermatches' => 'Search for no more than this many matches.<br> '  . 'If set to \'1\', no users will be displayed on ambiguous matches. '  . 'This is useful for user privacy purposes.<br> '  . 'A value of zero means no limit.', 'confirmuniqueusermatch' => 'Whether a confirmation screen should be displayed when only '  . 'one user matches a search entry.'  });
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
