use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634290',
        'name' => 'admin/params/bugmove.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "template/en/default/admin/params/bugmove.html.tmpl"
    $stash->set('title', ($stash->get(['terms', 0, 'Bug', 0]) . " Moving"));
    $stash->set('desc', ("Set up parameters to move " . $stash->get(['terms', 0, 'bugs', 0]) . " to/from another installation"));
    $output .=  "\n";
#line 1 "template/en/default/admin/params/bugmove.html.tmpl"
    $stash->set('param_descs', { 'move-enabled' => ("If this is on, " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will allow certain people ")  . ("to move " . $stash->get(['terms', 0, 'bugs', 0]) . " to the defined database."), 'move-button-text' => ("The text written on the Move button. Explain where the " . $stash->get(['terms', 0, 'bug', 0]) . " is ")  . 'being moved to.', 'move-to-url' => ("The URL of the database we allow some of our " . $stash->get(['terms', 0, 'bugs', 0]) . " to be moved to."), 'move-to-address' => ("To move " . $stash->get(['terms', 0, 'bugs', 0]) . ", an email is sent to the target database. This is ")  . ("the email address that database uses to listen for incoming " . $stash->get(['terms', 0, 'bugs', 0]) . "."), 'moved-from-address' => ("To move " . $stash->get(['terms', 0, 'bugs', 0]) . ", an email is sent to the target database. This is ")  . 'the email address from which this mail, and error messages are sent.', 'movers' => ("A list of people with permission to move " . $stash->get(['terms', 0, 'bugs', 0]) . " and reopen moved ")  . ($stash->get(['terms', 0, 'bugs', 0]) . " (in case the move operation fails)."), 'moved-default-product' => ($stash->get(['terms', 0, 'Bugs', 0]) . " moved from other databases to here are assigned ")  . 'to this product.', 'moved-default-component' => ($stash->get(['terms', 0, 'Bugs', 0]) . " moved from other databases to here are assigned ")  . 'to this component.'  });
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
