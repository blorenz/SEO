use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1224347615',
        'name' => 'admin/groups/create.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 28 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Add group', 'subheader' => 'This page allows you to define a new user group.', 'doc_section' => 'groups.html#create-groups' });
    $output .=  "\n\n<form method=\"post\" action=\"editgroups.cgi\">\n  <table border=\"1\" cellpadding=\"4\" cellspacing=\"0\"><tr>\n    <th>New Name</th>\n    <th>New Description</th>\n    <th>New User RegExp</th>\n    <th>Use For ";
#line 39 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</th>\n  </tr><tr>\n    <td><input size=\"20\" name=\"name\"></td>\n    <td><input size=\"40\" name=\"desc\"></td>\n    <td><input size=\"30\" name=\"regexp\"></td>\n    <td><input type=\"checkbox\" name=\"isactive\" value=\"1\" checked></td>\n  </tr>\n  <tr>\n    <th>Icon URL:</th>\n    <td colspan=\"3\"><input type=\"text\" size=\"70\" maxlength=\"255\" id=\"icon_url\" name=\"icon_url\"></td>\n  </tr>";
#line 50 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'field' ]]);
    $output .=  "\n  </table>\n\n  <hr>\n\n  <input type=\"checkbox\" id=\"insertnew\" name=\"insertnew\" value=\"1\"";
#line 56 "template/en/default/admin/groups/create.html.tmpl"
    if ($stash->get(['Param', [ 'makeproductgroups' ]])) {
    $output .=  " checked";
    }
    
    $output .=  ">\n  <label for=\"insertnew\">Insert new group into all existing products.</label>\n  <p>\n  <input type=\"submit\" id=\"create\" value=\"Add\">\n  <input type=\"hidden\" name=\"action\" value=\"new\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 61 "template/en/default/admin/groups/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n</form>\n\n<p><b>Name</b> is what is used with the B<!-- blah -->ugzilla->user->in_group()\nfunction in any customized cgi files you write that use a given group.\nIt can also be used by people submitting ";
#line 66 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " by email to\nlimit ";
#line 67 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " to a certain set of groups.</p>\n\n<p><b>Description</b> is what will be shown in the ";
#line 69 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " reports\nto members of the group where they can choose whether\nthe ";
#line 71 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " will be restricted to others in the same group.</p>\n\n<p>The <b>Use For ";
#line 73 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</b> flag determines whether or not the\ngroup is eligible to be used for ";
#line 74 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ". If you clear this, it will\nno longer be possible for users to add ";
#line 75 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to this group,\nalthough ";
#line 76 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " already in the group will remain in the group.\nDoing so is a much less drastic way to stop a group from growing\nthan deleting the group would be. <b>Note: If you are creating\na group, you probably want it to be usable for ";
#line 79 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ", in which\ncase you should leave this checked.</b></p>\n\n<p><b>User RegExp</b> is optional, and if filled in, will \nautomatically grant membership to this group to anyone with an \nemail address that matches this regular expression.</p>\n\n<p>\n  <b>Icon URL</b> is optional, and is the URL pointing to the icon\n  used to identify the group. It may be either a relative URL to the base URL\n  of this installation or an absolute URL. This icon will be displayed\n  in comments in ";
#line 90 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " besides the name of the author of comments.\n</p>\n\n<p>By default, the new group will be associated with existing \nproducts. Unchecking the \"Insert new group into all existing \nproducts\" option will prevent this and make the group become \nvisible only when its controls have been added to a product.</p>\n\n<p>Back to the <a href=\"./\">main ";
#line 98 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " page</a>\n\nor to the <a href=\"editgroups.cgi\">group list</a>.\n";
#line 102 "template/en/default/admin/groups/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  " \n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
