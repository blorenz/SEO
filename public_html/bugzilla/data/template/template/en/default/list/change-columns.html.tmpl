use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1235601560',
        'name' => 'list/change-columns.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 22 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 24 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Change Columns', 'javascript_urls' => 'js/change-columns.js', 'onload' => 'initChangeColumns()' });
    $output .=  "\n\n<p>\n  Select the columns you wish to appear in your ";
#line 31 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " lists. Note that\n  this feature requires cookies to work.\n</p>\n";
#line 35 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
#line 36 "template/en/default/list/change-columns.html.tmpl"
    $stash->set(['field_descs', 0, 'short_short_desc', 0], 'Summary (first 60 characters)');
#line 37 "template/en/default/list/change-columns.html.tmpl"
    $stash->set(['field_descs', 0, 'short_desc', 0], 'Full Summary');
#line 38 "template/en/default/list/change-columns.html.tmpl"
    $stash->set(['field_descs', 0, 'assigned_to_realname', 0], 'Assignee Realname');
#line 39 "template/en/default/list/change-columns.html.tmpl"
    $stash->set(['field_descs', 0, 'reporter_realname', 0], 'Reporter Realname');
#line 40 "template/en/default/list/change-columns.html.tmpl"
    $stash->set(['field_descs', 0, 'qa_contact_realname', 0], 'QA Contact Realname');
    $output .=  "\n\n<form name=\"changecolumns\" action=\"colchange.cgi\" onsubmit=\"change_submit();\">\n  <input type=\"hidden\" name=\"rememberedquery\" value=\"";
#line 43 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('buffer');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    <table>\n      <tr>\n        <th><div id=\"avail_header\" class=\"bz_default_hidden\">Available Columns</div></th>\n        <th></th>\n        <th>Selected Columns</th>\n        <th></th>\n      </tr>\n      <tr>\n        <td>\n          <select name=\"available_columns\" id=\"available_columns\" \n                  size=\"15\" multiple=\"multiple\" onchange=\"updateView();\"\n                  class=\"bz_default_hidden\"> \n          </select>\n        </td>\n        <td>\n          <input class=\"image_button bz_default_hidden\" type=\"button\" \n                 id=\"select_button\" name=\"select\" onclick=\"move_select()\">\n          <br><br>\n          <input class=\"image_button bz_default_hidden\" type=\"button\" \n                 id=\"deselect_button\" name=\"deselect\" onclick=\"move_deselect()\">\n        </td>\n        <td>\n          <select name=\"selected_columns\" id=\"selected_columns\" \n                  size=\"15\" multiple=\"multiple\" onchange=\"updateView();\">";
#line 72 "template/en/default/list/change-columns.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('collist');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'column'} = $_tt_value;
    $output .=  "\n                <option value=\"";
#line 69 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('column');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" selected=\"selected\">";
#line 70 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['field_descs', 0, $stash->get('column'), 0]) || $stash->get('column'));
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n              </option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 79 "template/en/default/list/change-columns.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('masterlist');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'column'} = $_tt_value;
#line 78 "template/en/default/list/change-columns.html.tmpl"
    if ($stash->get(['lsearch', [ $stash->get('collist'), $stash->get('column') ]]) eq -1) {
    $output .=  "\n                <option value=\"";
#line 75 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('column');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 76 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['field_descs', 0, $stash->get('column'), 0]) || $stash->get('column'));
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n                </option>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n          </select>\n        </td>\n        <td>\n          <input class=\"image_button bz_default_hidden\" type=\"button\" \n                 id=\"up_button\" name=\"up\" onclick=\"move_up()\">\n          <br><br>\n          <input class=\"image_button bz_default_hidden\" type=\"button\"\n                 id=\"down_button\" name=\"down\" onclick=\"move_down()\">\n        </td>\n      </tr>\n    </table>\n\n  <p>\n    <input id=\"nosplitheader\" type=\"radio\" name=\"splitheader\" value=\"0\"\n      ";
#line 94 "template/en/default/list/change-columns.html.tmpl"
    if (! $stash->get('splitheader')) {
    $output .=  'checked=\'checked\'';
    }
    
    $output .=  ">\n    <label for=\"nosplitheader\">\n      Normal headers (prettier)\n    </label>\n    <br>\n\n    <input id=\"splitheader\" type=\"radio\" name=\"splitheader\" value=\"1\"\n      ";
#line 101 "template/en/default/list/change-columns.html.tmpl"
    if ($stash->get('splitheader')) {
    $output .=  'checked=\'checked\'';
    }
    
    $output .=  ">\n    <label for=\"splitheader\">\n      Stagger headers (often makes list more compact)\n    </label>\n  </p>\n";
#line 116 "template/en/default/list/change-columns.html.tmpl"
    if ($stash->get('saved_search')) {
    $output .=  "\n    <p>\n      <input type=\"hidden\" name=\"saved_search\"\n             value=\"";
#line 110 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['saved_search', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" >\n      <input type=\"checkbox\" id=\"save_columns_for_search\" checked=\"checked\" \n             name=\"save_columns_for_search\" value=\"1\">\n      <label for=\"save_columns_for_search\">Save this column list only \n        for search '";
#line 114 "template/en/default/list/change-columns.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['saved_search', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'</label>\n    </p>";
    }
    
    $output .=  "\n\n  <p>\n    <input type=\"submit\" id=\"change\" value=\"Change Columns\">\n  </p>\n\n  <input type=\"submit\" id=\"resetit\" name=\"resetit\" \n         value=\"Reset to ";
#line 123 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " default\">\n</form>\n";
#line 126 "template/en/default/list/change-columns.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
