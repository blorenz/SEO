use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1250693323',
        'name' => 'reports/series-common.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 29 "template/en/default/reports/series-common.html.tmpl"
    $stash->set('subcategory', $stash->get(['category', 0, $stash->get(['default', 0, 'category', 0]), 0]));
#line 30 "template/en/default/reports/series-common.html.tmpl"
    $stash->set('name', $stash->get(['subcategory', 0, $stash->get(['default', 0, 'subcategory', 0]), 0]));
    $output .=  "\n\n<script type=\"text/javascript\">\n";
    $output .=  "\nvar series = {";
#line 48 "template/en/default/reports/series-common.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['category', 0, 'keys', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  "\n  \"";
#line 36 "template/en/default/reports/series-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('c');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" : {";
#line 46 "template/en/default/reports/series-common.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['category', 0, $stash->get('c'), 0, 'keys', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'s'} = $_tt_value;
    $output .=  "\n      \"";
#line 38 "template/en/default/reports/series-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('s');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" : {";
#line 44 "template/en/default/reports/series-common.html.tmpl"
    if ($stash->get('donames')) {
#line 43 "template/en/default/reports/series-common.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['category', 0, $stash->get('c'), 0, $stash->get('s'), 0, 'keys', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'n'} = $_tt_value;
    $output .=  "\n            \"";
#line 41 "template/en/default/reports/series-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('n');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\": ";
#line 42 "template/en/default/reports/series-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['category', 0, $stash->get('c'), 0, $stash->get('s'), 0, $stash->get('n'), 0]);
        
        &$_tt_filter($output);
    };
    
#line 42 "template/en/default/reports/series-common.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ', ';
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n      }";
#line 45 "template/en/default/reports/series-common.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ', ';
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  }";
#line 47 "template/en/default/reports/series-common.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ', ';
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " \n};\n\n";
    $output .=  "\nfunction catSelected() {\n  var cat = document.chartform.category.value;\n  var subcats = series[cat];\n  \n  var subcatwidget = document.chartform.subcategory;\n  \n  subcatwidget.options.length = 0;\n  var i = 0;\n  \n  for (x in subcats) {\n    subcatwidget.options[i] = new Option(x, x);\n    i++;\n  }\n  ";
#line 68 "template/en/default/reports/series-common.html.tmpl"
    if ($stash->get('newtext')) {
    $output .=  "\n    subcatwidget.options[i] = new Option(\"";
#line 67 "template/en/default/reports/series-common.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('newtext');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\", \"\");";
    }
    
    $output .=  "  \n\n  subcatwidget.disabled = false;\n  subcatwidget.options[0].selected = true;\n  \n  if (document.chartform.action[1]) {\n    ";
    $output .=  "\n    document.chartform.action[1].checked = true;\n  }\n  \n  checkNewState();  \n}\n\n";
    $output .=  "\nfunction checkNewState() {\n  var fm = document.chartform;\n  if (fm.newcategory) {\n    fm.newcategory.disabled = \n                       (fm.category.value != \"\" || \n                        fm.action[1] && fm.action[1].checked == false);\n    fm.newsubcategory.disabled = \n                    (fm.subcategory.value != \"\" || \n                     fm.action[1] && fm.action[1].checked == false);\n  }\n}\n</script>\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'series_select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <td align=\"left\">\n    <select name=\"";
#line 101 "template/en/default/reports/series-common.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'name', 0]);
        $output .=  "\" id=\"";
#line 101 "template/en/default/reports/series-common.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'name', 0]);
        $output .=  "\"\n            size=\"";
#line 102 "template/en/default/reports/series-common.html.tmpl"
        $output .=  $stash->get(['sel', 0, 'size', 0]);
        $output .=  "\" style=\"width: 15em\"\n            ";
#line 103 "template/en/default/reports/series-common.html.tmpl"
        if ($stash->get(['sel', 0, 'multiple', 0])) {
        $output .=  'multiple="multiple"';
        }
        
        $output .=  "\n            ";
#line 104 "template/en/default/reports/series-common.html.tmpl"
        if (!($stash->get([$stash->get(['sel', 0, 'name', 0]), 0, 'keys', 0, 'size', 0]) || $stash->get('newtext'))) {
        $output .=  ('' . "disabled=\"disabled\"");
        }
        
        $output .=  "\n            ";
#line 1 "template/en/default/reports/series-common.html.tmpl"
        if ($stash->get(['sel', 0, 'onchange', 0])) {
        $output .=  ("onchange=\"" . $stash->get(['sel', 0, 'onchange', 0]) . "\"");
        }
        
        $output .=  ">";
#line 111 "template/en/default/reports/series-common.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get([$stash->get(['sel', 0, 'name', 0]), 0, 'keys', 0, 'sort', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'x'} = $_tt_value;
#line 107 "template/en/default/reports/series-common.html.tmpl"
        $stash->set('value', $stash->get(['sel', 0, 'value_in_hash', 0]) ? $stash->get([$stash->get(['sel', 0, 'name', 0]), 0, $stash->get('x'), 0]) : $stash->get('x'));
        $output .=  "\n        <option value=\"";
#line 108 "template/en/default/reports/series-common.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('value');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 109 "template/en/default/reports/series-common.html.tmpl"
        if ($stash->get(['default', 0, $stash->get(['sel', 0, 'name', 0]), 0]) eq $stash->get('value')) {
        $output .=  ' selected';
        }
        
        $output .=  ">";
#line 110 "template/en/default/reports/series-common.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('x');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
#line 116 "template/en/default/reports/series-common.html.tmpl"
        if ($stash->get('newtext')) {
        $output .=  "\n        <option value=\"\">";
#line 113 "template/en/default/reports/series-common.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('newtext');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";
        }
        elsif (! $stash->get([$stash->get(['sel', 0, 'name', 0]), 0, 'keys', 0, 'size', 0])) {
        $output .=  "\n        <option value=\"\" disabled=\"disabled\"></option>";
        }
        
        $output .=  "\n    </select>\n  </td>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
