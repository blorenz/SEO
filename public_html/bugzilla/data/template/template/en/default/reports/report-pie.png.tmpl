use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1187634306',
        'name' => 'reports/report-pie.png.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template/en/default/reports/report-pie.png.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 23 "template/en/default/reports/report-pie.png.tmpl"
    $stash->set('col_field_disp', $stash->get(['field_descs', 0, $stash->get('col_field'), 0]) || $stash->get('col_field'));
    $output .=  "\n";
#line 29 "template/en/default/reports/report-pie.png.tmpl"
    if ($stash->get('col_field') eq 'bug_status') {
#line 28 "template/en/default/reports/report-pie.png.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 0..$stash->get(['data', 0, 0, 0, 0, 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'i'} = $_tt_value;
#line 27 "template/en/default/reports/report-pie.png.tmpl"
    $stash->set(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0], $stash->get(['get_status', [ $stash->get(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0]) ]]));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n";
#line 35 "template/en/default/reports/report-pie.png.tmpl"
    if ($stash->get('col_field') eq 'resolution') {
#line 34 "template/en/default/reports/report-pie.png.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 0..$stash->get(['data', 0, 0, 0, 0, 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'i'} = $_tt_value;
#line 33 "template/en/default/reports/report-pie.png.tmpl"
    $stash->set(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0], $stash->get(['get_resolution', [ $stash->get(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0]) ]]));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n";
#line 37 "template/en/default/reports/report-pie.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('null')
                  || $context->throw($context->error);
    
#line 37 "template/en/default/reports/report-pie.png.tmpl"
    # USE
    $stash->set('graph',
                $context->plugin('GD.Graph.pie', [ $stash->get('width'), $stash->get('height') ]));
#line 37 "template/en/default/reports/report-pie.png.tmpl"
    $output .=  $stash->get(['graph', 0, 'set', [ { 'title' => $stash->get('col_field_disp'), 'pie_height' => 20, 'suppress_angle' => 2, 'start_angle' => 180 } ]]);
#line 37 "template/en/default/reports/report-pie.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('stdout', [ 1 ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['graph', 0, 'plot', [ $stash->get(['data', 0, 0, 0]) ], 'png', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
