use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1243559330',
        'name' => 'attachment/create.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 24 "template/en/default/attachment/create.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n\n";
#line 27 "template/en/default/attachment/create.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Create New Attachment for ";
#line 27 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " #";
#line 27 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output;
    });
    
#line 29 "template/en/default/attachment/create.html.tmpl"
    
    # CAPTURE
    $stash->set('header', do {
        my $output = '';
    $output .=  "Create New Attachment for\n  ";
#line 1 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'bug_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get(['bug', 0, 'bug_id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 30 "template/en/default/attachment/create.html.tmpl"
    
    # CAPTURE
    $stash->set('subheader', do {
        my $output = '';
#line 30 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
#line 32 "template/en/default/attachment/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'header' => $stash->get('header'), 'subheader' => $stash->get('subheader'), 'style_urls' => [ 'skins/standard/create_attachment.css' ], 'javascript_urls' => [ 'js/attachment.js', 'js/util.js' ], 'doc_section' => 'attachments.html' });
    $output .=  "\n\n<form name=\"entryform\" method=\"post\" action=\"attachment.cgi\" enctype=\"multipart/form-data\">\n  <input type=\"hidden\" name=\"bugid\" value=\"";
#line 42 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\">\n  <input type=\"hidden\" name=\"action\" value=\"insert\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 44 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n\n  <table class=\"attachment_entry\">";
#line 47 "template/en/default/attachment/create.html.tmpl"
    $output .=  $context->process('attachment/createformcontents.html.tmpl');
    $output .=  "\n\n    ";
    $output .=  "\n    <tr>\n      <th>Obsoletes:</th>\n      <td>\n        <em>(optional) Check each existing attachment made obsolete by your new attachment.</em><br>";
#line 65 "template/en/default/attachment/create.html.tmpl"
    if ($stash->get(['attachments', 0, 'size', 0])) {
#line 62 "template/en/default/attachment/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('attachments');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'attachment'} = $_tt_value;
#line 61 "template/en/default/attachment/create.html.tmpl"
    if ((($stash->get(['attachment', 0, 'isprivate', 0]) eq 0) || ($stash->get(['Param', [ 'insidergroup' ]]) && $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]])))) {
    $output .=  "\n              <input type=\"checkbox\" id=\"";
#line 58 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['attachment', 0, 'id', 0]);
    $output .=  "\"\n                   name=\"obsolete\" value=\"";
#line 59 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['attachment', 0, 'id', 0]);
    $output .=  "\">\n              <a href=\"attachment.cgi?id=";
#line 60 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['attachment', 0, 'id', 0]);
    $output .=  "&amp;action=edit\">";
#line 60 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['attachment', 0, 'id', 0]);
    $output .=  ": ";
#line 60 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['attachment', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a><br>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    else {
    $output .=  "\n            [no attachments can be made obsolete]";
    }
    
    $output .=  "\n      </td>\n    </tr>\n";
#line 94 "template/en/default/attachment/create.html.tmpl"
    if (($stash->get(['user', 0, 'id', 0]) ne $stash->get(['bug', 0, 'assigned_to', 0, 'id', 0])) && $stash->get(['user', 0, 'in_group', [ 'editbugs', $stash->get(['bug', 0, 'product_id', 0]) ]])) {
    $output .=  "\n      <tr>\n        <th>Reassignment:</th>\n        <td>\n          <em>If you want to assign this ";
#line 73 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " to yourself,\n              check the box below.</em><br>\n          <input type=\"checkbox\" id=\"takebug\" name=\"takebug\" value=\"1\">\n          <label for=\"takebug\">take ";
#line 76 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "</label>";
#line 77 "template/en/default/attachment/create.html.tmpl"
    $stash->set('bug_statuses', [ ]);
#line 81 "template/en/default/attachment/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'status', 0, 'can_change_to', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug_status'} = $_tt_value;
#line 79 "template/en/default/attachment/create.html.tmpl"
    if ($stash->get(['bug_status', 0, 'name', 0]) eq 'UNCONFIRMED' && ! $stash->get(['bug', 0, 'product_obj', 0, 'votes_to_confirm', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 80 "template/en/default/attachment/create.html.tmpl"
    if ($stash->get(['bug_status', 0, 'is_open', 0])) {
    $output .=  $stash->get(['bug_statuses', 0, 'push', [ $stash->get('bug_status') ]]);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 91 "template/en/default/attachment/create.html.tmpl"
    if ($stash->get(['bug_statuses', 0, 'size', 0])) {
    $output .=  "\n            <label for=\"takebug\">and set the ";
#line 83 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " status to</label>\n            <select id=\"bug_status\" name=\"bug_status\">\n              <option value=\"";
#line 85 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 85 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug', 0, 'status', 0, 'name', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " (current)</option>";
#line 89 "template/en/default/attachment/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bug_statuses');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug_status'} = $_tt_value;
#line 87 "template/en/default/attachment/create.html.tmpl"
    if ($stash->get(['bug_status', 0, 'id', 0]) eq $stash->get(['bug', 0, 'status', 0, 'id', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n                <option value=\"";
#line 88 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug_status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 88 "template/en/default/attachment/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['get_status', [ $stash->get(['bug_status', 0, 'name', 0]) ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n            </select>";
    }
    
    $output .=  "\n        </td>\n      </tr>";
    }
    
    $output .=  "\n    <tr>\n      <th><label for=\"comment\">Comment:</label></th>\n      <td>\n        <em>(optional) Add a comment about this attachment to the ";
#line 98 "template/en/default/attachment/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".</em><br>";
#line 99 "template/en/default/attachment/create.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'comment', 'id' => 'comment', 'minrows' => 6, 'maxrows' => 15, 'cols' => '80', 'wrap' => 'soft' });
    $output .=  "\n      </td>\n    </tr>";
#line 119 "template/en/default/attachment/create.html.tmpl"
    if (($stash->get(['Param', [ 'insidergroup' ]]) && $stash->get(['user', 0, 'in_group', [ $stash->get(['Param', [ 'insidergroup' ]]) ]]))) {
    $output .=  "\n      <tr>\n        <th>Privacy:</th>\n        <td>\n          <em>If the attachment is private, check the box below.</em><br>\n          <input type=\"checkbox\" name=\"isprivate\" id=\"isprivate\"\n          value=\"1\" onClick=\"updateCommentPrivacy(this)\">\n        <label for=\"isprivate\">Private</label>\n        </td>\n      </tr>";
    }
    
    $output .=  "\n    <tr>\n      <th>&nbsp;</th>\n      <td><input type=\"submit\" id=\"create\" value=\"Submit\"></td>\n    </tr>\n  </table>\n\n</form>\n";
#line 128 "template/en/default/attachment/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
