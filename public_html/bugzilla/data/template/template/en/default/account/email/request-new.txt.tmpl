use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1231431000',
        'name' => 'account/email/request-new.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 22 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\nFrom: ";
#line 24 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 25 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get('email');
    $output .=  "\nSubject: ";
#line 26 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  ": confirm account creation\nX-Bugzilla-Type: admin\n\n";
#line 29 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " has received a request to create a user account\nusing your email address (";
#line 30 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get('email');
    $output .=  ").\n\nTo continue creating an account using this email address, visit the \nfollowing link by ";
#line 33 "template/en/default/account/email/request-new.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ '%B %e, %Y at %H:%M %Z' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('expiration_ts');
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n\n";
#line 35 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "token.cgi?t=";
#line 35 "template/en/default/account/email/request-new.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&a=request_new_account\n\nIf you did not receive this email before ";
#line 37 "template/en/default/account/email/request-new.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time', [ '%B %e, %Y at %H:%M %Z' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('expiration_ts');
        
        &$_tt_filter($output);
    };
    
    $output .=  " or\nyou wish to create an account using a different email address you can begin\nagain by going to:\n\n";
#line 41 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "createaccount.cgi\n";
#line 48 "template/en/default/account/email/request-new.txt.tmpl"
    if ($stash->get(['Param', [ 'createemailregexp' ]]) eq '.*' && $stash->get(['Param', [ 'emailsuffix' ]]) eq '') {
    $output .=  "\nPRIVACY NOTICE: ";
#line 44 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " is an open ";
#line 44 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " tracking system. Activity on most\n";
#line 45 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ", including email addresses, will be visible to the public. We recommend\nusing a secondary account or free web email service (such as Gmail, Yahoo,\nHotmail, or similar) to avoid receiving spam at your primary email address.";
    }
    
    $output .=  "\n\nIf you do not wish to create an account, or if this request was made in\nerror you can do nothing or visit the following link:\n\n";
#line 53 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get('urlbase');
    $output .=  "token.cgi?t=";
#line 53 "template/en/default/account/email/request-new.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&a=cancel_new_account\n\nIf the above links do not work, or you have any other issues regarding\nyour account, please contact administration at ";
#line 56 "template/en/default/account/email/request-new.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ".\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
