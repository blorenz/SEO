use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1280958640',
        'name' => 'global/user-error.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n\n";
    $output .=  "\n";
#line 41 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
#line 43 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 45 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Error', 1);
    $output .=  "\n";
#line 1688 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('error_message', do {
        my $output = '';
#line 1687 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('error') eq 'account_creation_disabled') {
#line 49 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Account Creation Disabled');
    $output .=  "\n    User account creation has been disabled.\n    <hr>\n    New accounts must be created by an administrator. The\n    maintainer is ";
#line 53 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'account_creation_restricted') {
#line 56 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Account Creation Restricted');
    $output .=  "\n    User account creation has been restricted.\n    <hr>\n    Contact your administrator or the maintainer\n    (";
#line 60 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ") for information about\n    creating an account.\n";
    }
    elsif ($stash->get('error') eq 'account_disabled') {
#line 64 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Account Disabled');
#line 65 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('disabled_reason');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    <hr>\n    If you believe your account should be restored, please\n    send email to ";
#line 68 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " explaining why.\n";
    }
    elsif ($stash->get('error') eq 'account_exists') {
#line 71 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Account Already Exists');
    $output .=  "\n    There is already an account with";
#line 77 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('email')) {
    $output .=  "\n      the login name ";
#line 74 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('email');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    else {
    $output .=  "\n      that login name.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'alias_has_comma_or_space') {
#line 80 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Characters In Alias');
    $output .=  "\n    The alias you entered, <em>";
#line 81 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>,\n    contains one or more commas or spaces.  Aliases cannot contain\n    commas or spaces because those characters are used to separate\n    aliases from each other in lists.  Please choose an alias\n    that does not contain commas and spaces.\n";
    }
    elsif ($stash->get('error') eq 'alias_in_use') {
#line 88 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Alias In Use');
#line 89 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
#line 89 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('bug_id') ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    has already taken the alias <em>";
#line 90 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>.\n    Please choose another one.\n";
    }
    elsif ($stash->get('error') eq 'alias_is_numeric') {
#line 94 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Alias Is Numeric');
    $output .=  "\n    You tried to give this ";
#line 95 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " the alias <em>";
#line 95 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>,\n    but aliases cannot be merely numbers, since they could\n    then be confused with ";
#line 97 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " IDs.  Please choose an\n    alias containing at least one letter.\n";
    }
    elsif ($stash->get('error') eq 'alias_too_long') {
#line 101 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Alias Too Long');
#line 102 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " aliases cannot be longer than 20 characters.\n    Please choose a shorter alias.\n";
    }
    elsif ($stash->get('error') eq 'auth_cant_create_account') {
#line 106 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Can\'t create accounts');
    $output .=  "\n    This site is using an authentication scheme which does not permit\n    account creation. Please contact an administrator to get a new account\n    created.\n";
    }
    elsif ($stash->get('error') eq 'auth_failure') {
#line 112 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Authorization Required');
#line 113 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Group Security'  });
    $output .=  "\n    Sorry,";
#line 117 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('group')) {
    $output .=  "\n      you aren't a member of the '";
#line 116 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' group,";
    }
    
    $output .=  "\n";
#line 126 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('reason')) {
#line 120 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('group')) {
    $output .=  " and ";
    }
    
#line 125 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('reason') eq 'cant_bless') {
    $output .=  "\n        you don't have permissions to add or remove people from a group,";
    }
    elsif ($stash->get('reason') eq 'not_visible') {
    $output .=  "\n        there are visibility restrictions on certain user groups,";
    }
    
    }
    
    $output .=  "\n";
#line 128 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('group') || $stash->get('reason')) {
    $output .=  " and so ";
    }
    
    $output .=  " you are not authorized to";
#line 151 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('action') eq 'access') {
    $output .=  "\n      access";
    }
    elsif ($stash->get('action') eq 'add') {
    $output .=  "\n      add new";
    }
    elsif ($stash->get('action') eq 'begin') {
    $output .=  "\n      begin";
    }
    elsif ($stash->get('action') eq 'modify') {
    $output .=  "\n      modify";
    }
    elsif ($stash->get('action') eq 'delete') {
    $output .=  "\n      delete";
    }
    elsif ($stash->get('action') eq 'edit') {
    $output .=  "\n      add, modify or delete";
    }
    elsif ($stash->get('action') eq 'move') {
    $output .=  "\n      move";
    }
    elsif ($stash->get('action') eq 'run') {
    $output .=  "\n      run";
    }
    elsif ($stash->get('action') eq 'schedule') {
    $output .=  "\n      schedule";
    }
    elsif ($stash->get('action') eq 'use') {
    $output .=  "\n      use";
    }
    elsif ($stash->get('action') eq 'approve') {
    $output .=  "\n      approve";
    }
    
    $output .=  "\n";
#line 206 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('object') eq 'administrative_pages') {
    $output .=  "\n      administrative pages";
    }
    elsif ($stash->get('object') eq 'attachment') {
    $output .=  "\n      this attachment";
    }
    elsif ($stash->get('object') eq 'bugs') {
    $output .=  "\n      ";
#line 158 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    }
    elsif ($stash->get('object') eq 'charts') {
    $output .=  "\n      the \"New Charts\" feature";
    }
    elsif ($stash->get('object') eq 'classifications') {
    $output .=  "\n      classifications";
    }
    elsif ($stash->get('object') eq 'components') {
    $output .=  "\n      components";
    }
    elsif ($stash->get('object') eq 'custom_fields') {
    $output .=  "\n      custom fields";
    }
    elsif ($stash->get('object') eq 'field_values') {
    $output .=  "\n      field values";
    }
    elsif ($stash->get('object') eq 'flagtypes') {
    $output .=  "\n      flag types";
    }
    elsif ($stash->get('object') eq 'group_access') {
    $output .=  "\n      group access";
    }
    elsif ($stash->get('object') eq 'groups') {
    $output .=  "\n      groups";
    }
    elsif ($stash->get('object') eq 'keywords') {
    $output .=  "\n      keywords";
    }
    elsif ($stash->get('object') eq 'milestones') {
    $output .=  "\n      milestones";
    }
    elsif ($stash->get('object') eq 'multiple_bugs') {
    $output .=  "\n      multiple ";
#line 180 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " at once";
    }
    elsif ($stash->get('object') eq 'parameters') {
    $output .=  "\n      parameters";
    }
    elsif ($stash->get('object') eq 'products') {
    $output .=  "\n      products";
    }
    elsif ($stash->get('object') eq 'quips') {
    $output .=  "\n      quips";
    }
    elsif ($stash->get('object') eq 'reports') {
    $output .=  "\n      whine reports";
    }
    elsif ($stash->get('object') eq 'sanity_check') {
    $output .=  "\n      a sanity check";
    }
    elsif ($stash->get('object') eq 'settings') {
    $output .=  "\n      settings";
    }
    elsif ($stash->get('object') eq 'sudo_session') {
    $output .=  "\n      a sudo session";
    }
    elsif ($stash->get('object') eq 'timetracking_summaries') {
    $output .=  "\n      time-tracking summary reports";
    }
    elsif ($stash->get('object') eq 'user') {
    $output .=  "  \n      the user ";
#line 199 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('userid')) {
    $output .=  " with ID '";
#line 198 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('userid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
    }
    else {
    $output .=  "you specified ";
    }
    
    }
    elsif ($stash->get('object') eq 'users') {
    $output .=  "\n      users";
    }
    elsif ($stash->get('object') eq 'versions') {
    $output .=  "\n      versions";
    }
    elsif ($stash->get('object') eq 'workflow') {
    $output .=  "\n      the workflow";
    }
    
    $output .=  ".\n";
#line 208 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'auth_failure' ]]);
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'attachment_deletion_disabled') {
#line 211 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Attachment Deletion Disabled');
    $output .=  "\n    Attachment deletion is disabled on this installation.\n";
    }
    elsif ($stash->get('error') eq 'attachment_removed') {
#line 215 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Attachment Removed');
    $output .=  "\n    The attachment you are attempting to access has been removed.\n";
    }
    elsif ($stash->get('error') eq 'bug_access_denied') {
#line 219 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Access Denied');
#line 220 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Group Security'  });
    $output .=  "\n    You are not authorized to access ";
#line 221 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " #";
#line 221 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'bug_access_query') {
#line 224 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Access Denied');
#line 225 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'myaccount.html' => 'Creating an account'  });
    $output .=  "\n    You are not authorized to access ";
#line 226 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " #";
#line 226 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n    To see this ";
#line 227 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", you must\n    first <a href=\"show_bug.cgi?id=";
#line 229 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;GoAheadAndLogIn=1\">log\n    in to an account</a> with the appropriate permissions.\n";
    }
    elsif ($stash->get('error') eq 'bug_url_invalid') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("Invalid " . $stash->get(['terms', 0, 'Bug', 0]) . " URL"));
    $output .=  "\n    <code>";
#line 234 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('url');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> is not a valid URL to ";
#line 234 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  ".";
#line 242 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('reason') eq 'http') {
    $output .=  "\n      URLs must start with \"http\" or \"https\".";
    }
    elsif ($stash->get('reason') eq 'show_bug') {
    $output .=  "\n      ";
#line 238 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " URLs should point to <code>show_bug.cgi</code>\n      in a ";
#line 239 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " installation.";
    }
    elsif ($stash->get('reason') eq 'id') {
    $output .=  "\n      There is no valid ";
#line 241 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " id in that URL.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'bug_url_too_long') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("Invalid " . $stash->get(['terms', 0, 'Bug', 0]) . " URL"));
#line 246 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " URLs can not be longer than \n    ";
#line 247 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  '255';
        
        &$_tt_filter($output);
    };
    
    $output .=  " characters long.\n    <code>";
#line 248 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('url');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> is too long.\n";
    }
    elsif ($stash->get('error') eq 'buglist_parameters_required') {
#line 251 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Parameters Required');
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'query.html' => ("Searching for " . $stash->get(['terms', 0, 'bugs', 0])), 'query.html#list' => ($stash->get(['terms', 0, 'Bug', 0]) . " lists")  });
    $output .=  "\n    You may not search, or create saved searches, without any search terms.\n";
    }
    elsif ($stash->get('error') eq 'chart_too_large') {
#line 257 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Chart Too Large');
    $output .=  "\n    Sorry, but 2000 x 2000 is the maximum size for a chart.\n";
    }
    elsif ($stash->get('error') eq 'comment_id_invalid') {
#line 261 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is not a valid comment id.\n";
    }
    elsif ($stash->get('error') eq 'comment_invalid_isprivate') {
    $output .=  "\n    You tried to modify the privacy of comment id ";
#line 264 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ",\n    but that is not a valid comment on this ";
#line 265 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'comment_is_private') {
    $output .=  "\n    Comment id ";
#line 268 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is private.\n";
    }
    elsif ($stash->get('error') eq 'comment_required') {
#line 271 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Comment Required');
    $output .=  "\n    You have to specify a";
#line 280 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('old') && $stash->get('new')) {
    $output .=  "\n      <b>comment</b> when changing the status of ";
#line 274 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " from\n      ";
#line 275 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['old', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " to ";
#line 275 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['new', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    elsif ($stash->get('new')) {
    $output .=  "\n      description for this ";
#line 277 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    else {
    $output .=  "\n      <b>comment</b> on this change.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'comment_too_long') {
#line 283 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Comment Too Long');
    $output .=  "\n    Comments cannot be longer than 65,535 characters.\n";
    }
    elsif ($stash->get('error') eq 'auth_classification_not_enabled') {
#line 287 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Not Enabled');
    $output .=  "\n    Sorry, classification is not enabled.\n";
    }
    elsif ($stash->get('error') eq 'classification_name_too_long') {
#line 291 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Name Too Long');
    $output .=  "\n    The name of a classification is limited to ";
#line 292 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '64';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters. '";
#line 293 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is too long (";
#line 293 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'classification_not_specified') {
#line 296 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'You Must Supply A Classification Name');
    $output .=  "\n    You must enter a classification name.\n";
    }
    elsif ($stash->get('error') eq 'classification_already_exists') {
#line 300 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Already Exists');
    $output .=  "\n    A classification with the name '";
#line 301 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' already exists.\n";
    }
    elsif ($stash->get('error') eq 'classification_invalid_sortkey') {
#line 304 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Sortkey for Classification');
    $output .=  "\n    The sortkey '";
#line 305 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is invalid. It must be an\n    integer between 0 and ";
#line 306 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '32767';
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'classification_not_deletable') {
#line 309 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Default Classification Can Not Be Deleted');
    $output .=  "\n    You can not delete the default classification\n";
    }
    elsif ($stash->get('error') eq 'classification_has_products') {
    $output .=  "\n     Sorry, there are products for this classification. You\n     must reassign those products to another classification before you\n     can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'component_already_exists') {
#line 318 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Component Already Exists');
    $output .=  "\n    The <em>";
#line 319 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> product already has\n    a component named <em>";
#line 320 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'component_blank_description') {
#line 323 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Description Not Allowed');
    $output .=  "\n    You must enter a non-blank description for this component.\n";
    }
    elsif ($stash->get('error') eq 'component_blank_name') {
#line 327 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Name Not Allowed');
    $output .=  "\n    You must enter a name for this new component.\n";
    }
    elsif ($stash->get('error') eq 'component_has_bugs') {
#line 331 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Component has ";
#line 331 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
    $output .=  "\n    There are ";
#line 332 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 332 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " entered for this component!\n    You must reassign those ";
#line 333 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another component before you\n    can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'component_name_too_long') {
#line 337 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Component Name Is Too Long');
    $output .=  "\n    The name of a component is limited to ";
#line 338 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '64';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters. '";
#line 339 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is too long (";
#line 339 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'component_need_initialowner') {
#line 342 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Component Requires Default Assignee');
    $output .=  "\n    A default assignee is required for this component.\n";
    }
    elsif ($stash->get('error') eq 'customfield_nonexistent') {
#line 346 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Custom Field');
    $output .=  "\n    There is no custom field with the name '";
#line 347 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'customfield_not_obsolete') {
#line 350 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Custom Field Not Obsolete');
    $output .=  "\n    The custom field '";
#line 351 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is not obsolete.\n    Please obsolete a custom field before attempting to delete it.\n";
    }
    elsif ($stash->get('error') eq 'customfield_has_activity') {
#line 355 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Custom Field Has Activity');
    $output .=  "\n    The custom field '";
#line 356 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' cannot be deleted because\n    it has recorded activity.\n";
    }
    elsif ($stash->get('error') eq 'customfield_has_contents') {
#line 360 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Custom Field Has Contents');
    $output .=  "\n    The custom field '";
#line 361 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' cannot be deleted because\n    at least one ";
#line 362 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has a non empty value for this field.\n";
    }
    elsif ($stash->get('error') eq 'dependency_loop_multi') {
#line 365 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Dependency Loop Detected');
    $output .=  "\n    The following ";
#line 366 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "(s) would appear on both the \"depends on\"\n    and \"blocks\" parts of the dependency tree if these changes\n    are committed:";
#line 371 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('deps');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'dep'} = $_tt_value;
    $output .=  "\n      ";
#line 370 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('dep') ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dep');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  ".\n    This would create a circular dependency, which is not allowed.\n";
    }
    elsif ($stash->get('error') eq 'dependency_loop_single') {
#line 375 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Dependency Loop Detected');
    $output .=  "\n    You can't make ";
#line 376 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " block itself or depend on itself.\n";
    }
    elsif ($stash->get('error') eq 'dupe_id_required') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("Duplicate " . $stash->get(['terms', 0, 'Bug', 0]) . " Id Required"));
    $output .=  "\n    You must specify ";
#line 380 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " id to mark this ";
#line 380 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n    as a duplicate of.\n";
    }
    elsif ($stash->get('error') eq 'dupe_not_allowed') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("Cannot mark " . $stash->get(['terms', 0, 'bugs', 0]) . " as duplicates"));
    $output .=  "\n    You cannot mark ";
#line 385 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " as duplicates when\n    changing several ";
#line 386 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " at once.\n";
    }
    elsif ($stash->get('error') eq 'dupe_loop_detected') {
#line 389 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Loop detected among duplicates');
    $output .=  "\n    You cannot mark ";
#line 390 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 390 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " as\n    a duplicate of";
#line 397 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('dupe_of') eq $stash->get('bug_id')) {
    $output .=  "\n      itself";
    }
    else {
    $output .=  "\n      ";
#line 395 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 395 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dupe_of');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", because it\n      would create a duplicate loop";
    }
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'email_change_in_progress') {
#line 400 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Email Change Already In Progress');
    $output .=  "\n    Email change already in progress; please check your email.\n";
    }
    elsif ($stash->get('error') eq 'email_confirmation_failed') {
#line 404 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Email Address Confirmation Failed');
    $output .=  "\n    Email address confirmation failed.\n";
    }
    elsif ($stash->get('error') eq 'email_no_text_plain') {
    $output .=  "\n    Your message did not contain any text.";
#line 408 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " does not\n    accept HTML-only email, or HTML email with attachments.\n";
    }
    elsif ($stash->get('error') eq 'empty_group_description') {
#line 412 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'The group description can not be empty');
    $output .=  "\n    You must enter a description for the group.\n";
    }
    elsif ($stash->get('error') eq 'empty_group_name') {
#line 416 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'The group name can not be empty');
    $output .=  "\n    You must enter a name for the group.\n  ";
    }
    elsif ($stash->get('error') eq 'entry_access_denied') {
#line 420 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Permission Denied');
#line 421 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Group Security'  });
    $output .=  "\n    Sorry, either the product <em>";
#line 422 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>\n    does not exist or you aren't authorized to\n    enter ";
#line 424 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.\n";
    }
    elsif ($stash->get('error') eq 'field_already_exists') {
#line 427 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Already Exists');
    $output .=  "\n    The field '";
#line 428 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'     \n    (";
#line 429 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ") already exists. Please\n    choose another name.\n";
    }
    elsif ($stash->get('error') eq 'field_cant_control_self') {
#line 433 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Can\'t Control Itself');
    $output .=  "\n    The ";
#line 434 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " field can't be set to control \n    itself.\n";
    }
    elsif ($stash->get('error') eq 'field_control_must_be_select') {
#line 438 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Field Type Selected');
    $output .=  "\n    Only drop-down and multi-select fields can be used to control\n    the visibility/values of other fields. ";
#line 440 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    is not the right type of field.\n";
    }
    elsif ($stash->get('error') eq 'field_invalid_name') {
#line 444 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Field Name');
    $output .=  "\n    '";
#line 445 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is not a valid name for a field.\n    A name may contain only letters, numbers, and the underscore character.\n";
    }
    elsif ($stash->get('error') eq 'field_invalid_sortkey') {
#line 449 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Sortkey for Field');
    $output .=  "\n    The sortkey ";
#line 450 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$_tt_filter($output);
    };
    
    $output .=  " that you have provided for\n    this field is not a valid positive integer.\n";
    }
    elsif ($stash->get('error') eq 'field_missing_description') {
#line 454 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Description for Field');
    $output .=  "\n    You must enter a description for this field.\n";
    }
    elsif ($stash->get('error') eq 'field_missing_name') {
#line 458 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Name for Field');
    $output .=  "\n    You must enter a name for this field.\n";
    }
    elsif ($stash->get('error') eq 'field_value_control_select_only') {
#line 462 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Value Control Field');
    $output .=  "\n    Only Drop-Down or Multi-Select fields can have a field that\n    controls their values.\n";
    }
    elsif ($stash->get('error') eq 'fieldname_invalid') {
#line 467 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Field Does Not Exist');
    $output .=  "\n    The field '";
#line 468 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' does not exist or \n    cannot be edited with this interface.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_already_exists') {
#line 472 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Already Exists');
    $output .=  "\n    The value '";
#line 473 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' already exists for the\n    ";
#line 474 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " field.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_is_controller') {
#line 477 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Value Controls Other Fields');
    $output .=  "\n    You cannot delete the ";
#line 478 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    '";
#line 479 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' because";
#line 483 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['fields', 0, 'size', 0])) {
    $output .=  "\n      it controls the visibility of the following fields:\n      ";
#line 482 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['fields', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    
#line 484 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['fields', 0, 'size', 0]) && $stash->get(['vals', 0, 'size', 0])) {
    $output .=  ' and ';
    }
    
#line 495 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['vals', 0, 'size', 0])) {
    $output .=  "\n      it controls the visibility of the following field values:\n      <ul>";
#line 493 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['vals', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'field_name'} = $_tt_value;
#line 492 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['vals', 0, $stash->get('field_name'), 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'val'} = $_tt_value;
    $output .=  "\n            <li>";
#line 490 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['val', 0, 'field', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n              '";
#line 491 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['val', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </ul>";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_is_default') {
#line 498 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Field Value Is Default');
    $output .=  "\n    '";
#line 499 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is the default value for\n    the '";
#line 500 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' field and cannot be deleted.";
#line 504 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'tweakparams' ]])) {
    $output .=  "\n      You have to <a href=\"editparams.cgi?section=bugfields#";
#line 503 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('param_name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">change</a> the default value first.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_name_too_long') {
#line 507 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Is Too Long');
    $output .=  "\n    The value of a field is limited to \n    ";
#line 509 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['constants', 0, 'FIELD_VALUE_MAX_SIZE', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " characters. \n    '";
#line 510 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is too long (";
#line 510 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['value', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_not_editable') {
#line 513 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Not Editable');
    $output .=  "\n    The value '";
#line 514 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['old_value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' cannot be renamed because\n    it plays some special role for the '";
#line 515 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'\n    field.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_not_deletable') {
#line 519 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Not Deletable');
    $output .=  "\n    The value '";
#line 520 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' cannot be removed because\n    it plays some special role for the '";
#line 521 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' \n    field.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_reserved_word') {
#line 525 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Reserved Word Not Allowed');
    $output .=  "\n    You cannot use the value '";
#line 526 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' for the\n    '";
#line 527 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' field. This value is used internally.\n    Please choose another one.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_sortkey_invalid') {
#line 531 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Field Value Sortkey');
    $output .=  "\n    The sortkey '";
#line 532 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' for the \n    ";
#line 533 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " field is not a valid \n    (positive) number.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_still_has_bugs') {
#line 537 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'You Cannot Delete This Field Value');
    $output .=  "\n    You cannot delete the value '";
#line 538 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' from the ";
#line 539 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " field, because there are still\n    ";
#line 540 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['value', 0, 'bug_count', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 540 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " using it.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_undefined') {
#line 543 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Undefined Value Not Allowed');
    $output .=  "\n    You must specify a value.\n";
    }
    elsif ($stash->get('error') eq 'file_not_specified') {
#line 547 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No File Specified');
    $output .=  "\n    You did not specify a file to attach.\n";
    }
    elsif ($stash->get('error') eq 'file_too_large') {
#line 551 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'File Too Large');
    $output .=  "\n    The file you are trying to attach is ";
#line 552 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filesize');
        
        &$_tt_filter($output);
    };
    
    $output .=  " \n    kilobytes (KB) in size. Non-patch attachments cannot be more than\n    ";
#line 554 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxattachmentsize' ]]);
    $output .=  " KB. <br>\n    We recommend that you store your attachment elsewhere";
#line 562 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['Param', [ 'allow_attach_url' ]])) {
    $output .=  "\n      and then specify the URL to this file on the attachment\n      creation page in the <b>AttachURL</b> field.";
    }
    else {
    $output .=  "\n      and then insert the URL to it in a comment, or in the URL field\n      for this ";
#line 561 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    
    $output .=  "\n    <br>Alternately, if your attachment is an image, you could convert\n    it to a compressible format like JPG or PNG and try again.\n";
    }
    elsif ($stash->get('error') eq 'flag_not_multiplicable') {
#line 567 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'flags-overview.html' => 'An overview on Flags', 'flags.html' => 'Using Flags'  });
    $output .=  "\n    You can't ask more than one person at a time for\n    <em>";
#line 570 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_needs_privs') {
#line 573 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Requestee Needs Privileges');
#line 574 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['requestee', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " does not have permission to set the\n    <em>";
#line 575 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flagtype', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> flag. Please select a user who is\n    a member of the <em>";
#line 576 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flagtype', 0, 'grant_group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> group.\n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_unauthorized') {
#line 579 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Requestee Not Authorized');
#line 580 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags', 'groups.html' => 'Group Security'  });
#line 582 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'flags-overview.html' => 'An overview on Flags', 'flags.html' => 'Using Flags'  });
    $output .=  "\n\n    You asked ";
#line 585 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['requestee', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    for <code>";
#line 586 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> on ";
#line 586 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " \n    ";
#line 587 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
#line 588 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('attach_id') && $stash->get('attach_id') > 0) {
    $output .=  ", attachment ";
#line 588 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  ",\n    but that ";
#line 589 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been restricted to users in certain groups, \n    and the user you asked isn't in all the groups to which \n    the ";
#line 591 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been restricted.\n    Please choose someone else to ask, or make the ";
#line 592 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " accessible\n    to users on its CC: list and add that user to the list.\n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_unauthorized_attachment') {
#line 596 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Requestee Not Authorized');
#line 597 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags', 'groups.html' => 'Group Security'  });
#line 599 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'flags-overview.html' => 'An overview on Flags', 'flags.html' => 'Using Flags'  });
    $output .=  "\n\n    You asked ";
#line 602 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['requestee', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    for <code>";
#line 603 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> on \n    ";
#line 604 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 604 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ",\n    attachment ";
#line 605 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", but that attachment\n    is restricted to users in the ";
#line 606 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'insidergroup' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " group,\n    and the user you asked isn't in that group.  Please choose someone else\n    to ask, or ask an administrator to add the user to the group.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_cc_list_invalid') {
#line 611 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type CC List Invalid');
#line 612 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags'  });
    $output .=  "\n    The CC list ";
#line 613 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('cc_list');
        
        &$_tt_filter($output);
    };
    
    $output .=  " must be less than 200 characters long.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_component_without_product') {
#line 616 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product Missing');
    $output .=  "\n    A component was selected without a product being selected.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_description_invalid') {
#line 620 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Description Invalid');
#line 621 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags'  });
    $output .=  "\n    The description must be less than 32K.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_name_invalid') {
#line 625 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Name Invalid');
#line 626 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags'  });
    $output .=  "\n    The name <em>";
#line 627 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> must be 1-50 characters long\n    and must not contain any spaces or commas.\n";
    }
    elsif ($stash->get('error') eq 'flag_update_denied') {
#line 631 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Modification Denied');
#line 632 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'flags-overview.html#flags-admin' => 'Administering Flags', 'groups.html' => 'Group Security'  });
#line 634 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'flags-overview.html' => 'An overview on Flags', 'flags.html' => 'Using Flags'  });
    $output .=  "\n    You tried to ";
#line 637 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('status') eq '+') {
    $output .=  " grant ";
    }
    elsif ($stash->get('status') eq '-') {
    $output .=  " deny";
    }
    elsif ($stash->get('status') eq 'X') {
    $output .=  " clear ";
    }
    else {
    $output .=  " request ";
    }
    
    $output .=  "\n    <code>";
#line 638 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
#line 639 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('status') eq 'X') {
#line 639 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('old_status');
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "</code>.\n\n    Only a user with the required permissions may make this change.\n";
    }
    elsif ($stash->get('error') eq 'format_not_found') {
#line 644 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Format Not Found');
    $output .=  "\n    The requested format <em>";
#line 645 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> does not exist with\n    a content type of <em>";
#line 646 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('ctype');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>.\n    ";
    }
    elsif ($stash->get('error') eq 'flag_type_sortkey_invalid') {
#line 649 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Sort Key Invalid');
    $output .=  "\n    The sort key must be an integer between 0 and 32767 inclusive.\n    It cannot be <em>";
#line 651 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'freetext_too_long') {
#line 654 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Text Too Long');
    $output .=  "\n    The text you entered is too long (";
#line 655 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['text', 0, 'length', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " characters,\n    above the maximum length allowed of ";
#line 656 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  '255';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters):\n    <p><em>";
#line 658 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('text');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em></p>\n";
    }
    elsif ($stash->get('error') eq 'group_cannot_delete') {
#line 661 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Cannot Delete Group');
    $output .=  "\n    The <em>";
#line 662 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> group cannot be deleted because\n    there are\n    <a href=\"editgroups.cgi?action=del&amp;group=";
#line 664 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('gid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">records</a>\n    in the database which refer to it. All references to this group must\n    be removed before you can remove it.\n";
    }
    elsif ($stash->get('error') eq 'group_change_denied') {
#line 669 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Cannot Add/Remove That Group');
    $output .=  "\n    You tried to add or remove group id ";
#line 670 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    from ";
#line 671 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 671 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ", but you do not\n    have permissions to do so.\n";
    }
    elsif ($stash->get('error') eq 'group_exists') {
#line 675 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'The group already exists');
    $output .=  "\n    The group ";
#line 676 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  " already exists.\n";
    }
    elsif ($stash->get('error') eq 'group_has_special_role') {
#line 679 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Group not deletable');
#line 686 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['groups', 0, 'size', 0]) eq 1) {
#line 681 "template/en/default/global/user-error.html.tmpl"
    $stash->set('attr', 'it');
#line 682 "template/en/default/global/user-error.html.tmpl"
    $stash->set('param', 'parameter');
    }
    else {
#line 684 "template/en/default/global/user-error.html.tmpl"
    $stash->set('attr', 'them');
#line 685 "template/en/default/global/user-error.html.tmpl"
    $stash->set('param', 'parameters');
    }
    
    $output .=  "\n    The group '";
#line 687 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is used by the\n    '";
#line 688 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['groups', 0, 'join', [ '\' and \'' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' ";
#line 688 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('param');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n    In order to delete this group, you first have to change the\n    ";
#line 690 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('param');
        
        &$_tt_filter($output);
    };
    
    $output .=  " to make ";
#line 690 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attr');
        
        &$_tt_filter($output);
    };
    
    $output .=  " point to another group.\n\n";
    }
    elsif ($stash->get('error') eq 'group_invalid_removal') {
    $output .=  "\n    You tried to remove ";
#line 694 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 694 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    from group id ";
#line 695 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", but ";
#line 695 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " in the \n    '";
#line 696 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' product can not be removed from that\n    group.\n    ";
    }
    elsif ($stash->get('error') eq 'group_invalid_restriction') {
    $output .=  "\n    You tried to restrict ";
#line 700 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
#line 700 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " to\n    to group id ";
#line 701 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", but ";
#line 701 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " in the\n    '";
#line 702 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' product can not be restricted to\n    that group.\n";
    }
    elsif ($stash->get('error') eq 'group_not_specified') {
#line 706 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Group not specified');
    $output .=  "\n    No group was specified.\n";
    }
    elsif ($stash->get('error') eq 'system_group_not_deletable') {
#line 710 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'System Groups not deletable');
    $output .=  "\n    <em>";
#line 711 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> is a system group.\n    This group cannot be deleted.\n";
    }
    elsif ($stash->get('error') eq 'group_unknown') {
#line 715 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Group');
    $output .=  "\n    The group ";
#line 716 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  " does not exist. Please specify\n    a valid group name. Create it first if necessary!\n";
    }
    elsif ($stash->get('error') eq 'illegal_at_least_x_votes') {
#line 720 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The <em>At least ___ votes</em> field must be a simple number. \n    You entered <tt>";
#line 722 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>, which isn't.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_edit') {
#line 725 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unauthorized Action');
    $output .=  "\n    You are not authorized to edit attachment ";
#line 726 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_edit_bug') {
#line 729 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unauthorized Action');
    $output .=  "\n    You are not authorized to edit attachments on ";
#line 730 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " \n    ";
#line 731 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n         ";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_is_patch') {
#line 734 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The only legal values for the <em>Attachment is patch</em> field are\n    0 and 1.\n";
    }
    elsif ($stash->get('error') eq 'illegal_bug_status_transition') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("Illegal " . $stash->get(['terms', 0, 'Bug', 0]) . " Status Change"));
#line 746 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['old', 0, 'defined', 0])) {
    $output .=  "\n      You are not allowed to change the ";
#line 741 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " status from\n      ";
#line 742 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['old', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " to ";
#line 742 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['new', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    else {
    $output .=  "\n      You are not allowed to file new ";
#line 744 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " with the\n      ";
#line 745 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['new', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " status. ";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'illegal_change') {
#line 749 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Not allowed');
    $output .=  "\n    You tried to change the\n    <strong>";
#line 751 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</strong> field ";
#line 754 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['oldvalue', 0, 'defined', 0])) {
    $output .=  "\n      from <em>";
#line 753 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['oldvalue', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>";
    }
    
#line 757 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['newvalue', 0, 'defined', 0])) {
    $output .=  "\n      to <em>";
#line 756 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['newvalue', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>";
    }
    
    $output .=  "\n    , but only";
#line 763 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('privs') < 3) {
    $output .=  "\n      the assignee";
#line 761 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('privs') < 2) {
    $output .=  " or reporter ";
    }
    
    $output .=  "\n      of the ";
#line 762 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", or";
    }
    
    $output .=  "\n    a user with the required permissions may change that field.\n";
    }
    elsif ($stash->get('error') eq 'illegal_change_deps') {
#line 767 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Not allowed');
    $output .=  "\n    You tried to change the \n    <strong>";
#line 769 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</strong> field \n    but only a user allowed to edit \n    both related ";
#line 771 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " may change that field.\n";
    }
    elsif ($stash->get('error') eq 'illegal_changed_in_last_x_days') {
#line 774 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The <em>Changed in last ___ days</em> field must be a simple number. \n    You entered <tt>";
#line 776 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>, which isn't.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_date') {
#line 779 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Date');
    $output .=  "\n    '<tt>";
#line 780 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('date');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>' is not a legal date.";
#line 783 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('format')) {
    $output .=  "\n      Please use the format '<tt>";
#line 782 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>'.";
    }
    
    $output .=  "\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_email_address') {
#line 786 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Email Address');
    $output .=  "\n    The e-mail address you entered (<b>";
#line 787 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('addr');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</b>) \n    didn't pass our syntax checking for a legal email address.";
#line 794 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('default')) {
    $output .=  "\n      A legal address must contain exactly one '\@',\n      and at least one '.' after the \@.";
    }
    else {
    $output .=  "\n      ";
#line 793 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'emailregexpdesc' ]]);
    }
    
    $output .=  "\n    It must also not contain any of these special characters:\n    <tt>\\ ( ) &amp; &lt; &gt; , ; : &quot; [ ]</tt>, or any whitespace.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_frequency') {
#line 799 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Too Frequent');
    $output .=  "\n    Unless you are an administrator, you may not create series which are \n    run more often than once every ";
#line 801 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('minimum');
        
        &$_tt_filter($output);
    };
    
    $output .=  " days.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_group_control_combination') {
#line 804 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Your Group Control Combination Is Illegal');
#line 805 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Assigning Group Controls to Products'  });
    $output .=  "\n    Your group control combination for group &quot;";
#line 807 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('groupname');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&quot; is illegal.\n";
    }
    elsif ($stash->get('error') eq 'illegal_is_obsolete') {
#line 810 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The only legal values for the <em>Attachment is obsolete</em> field are\n    0 and 1.\n";
    }
    elsif ($stash->get('error') eq 'illegal_query_name') {
#line 815 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Search Name');
    $output .=  "\n    The name of your search cannot contain any of the following characters: \n    &lt;, &gt;, &amp;.\n";
    }
    elsif ($stash->get('error') eq 'illegal_series_creation') {
#line 820 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Group security'  });
#line 821 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You are not authorized to create series.\n        ";
    }
    elsif ($stash->get('error') eq 'illegal_series_edit') {
#line 825 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'groups.html' => 'Group security'  });
#line 826 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You are not authorized to edit this series. To do this, you must either\n    be its creator, or an administrator.\n";
    }
    elsif ($stash->get('error') eq 'illegal_time') {
#line 831 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Time');
    $output .=  "\n    '<tt>";
#line 832 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('time');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>' is not a legal time.";
#line 835 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('format')) {
    $output .=  "\n      Please use the format '<tt>";
#line 834 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt>'.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'illegal_regexp') {
#line 838 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Regular Expression');
    $output .=  "\n    The regular expression you provided ";
#line 839 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is not valid.\n    The error was: ";
#line 840 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dberror');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n        ";
    }
    elsif ($stash->get('error') eq 'insufficient_data_points') {
#line 843 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    We don't have enough data points to make a graph (yet).\n        ";
    }
    elsif ($stash->get('error') eq 'invalid_attach_id') {
#line 847 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Attachment ID');
    $output .=  "\n    The attachment id ";
#line 848 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is invalid.\n";
    }
    elsif ($stash->get('error') eq 'bug_id_does_not_exist') {
#line 851 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Invalid ";
#line 851 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ID";
        $output;
    });
    
#line 852 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " #";
#line 852 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  " does not exist.\n    ";
    }
    elsif ($stash->get('error') eq 'improper_bug_id_field_value') {
#line 857 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
#line 856 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('bug_id')) {
    $output .=  "Invalid ";
    }
    else {
    $output .=  "Missing ";
    }
    
#line 856 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ID";
        $output;
    });
    
#line 869 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('bug_id')) {
    $output .=  "\n      '";
#line 859 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is not a valid ";
#line 859 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " number";
#line 862 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['Param', [ 'usebugaliases' ]])) {
    $output .=  "\n        nor an alias to ";
#line 861 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    }
    
    $output .=  ".";
    }
    else {
#line 867 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('field')) {
    $output .=  "\n        The '";
#line 865 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' field\n        cannot be empty.";
    }
    
    $output .=  "\n      You must enter a valid ";
#line 868 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " number!";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'invalid_changedsince') {
#line 872 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid \'Changed Since\'');
    $output .=  "\n    The 'changed since' value, '";
#line 873 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('changedsince');
        
        &$_tt_filter($output);
    };
    
    $output .=  "', must be an\n    integer >= 0.\n";
    }
    elsif ($stash->get('error') eq 'invalid_content_type') {
#line 877 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Content-Type');
    $output .=  "\n    The content type <em>";
#line 878 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttype');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> is invalid.\n    Valid types must be of the form <em>foo/bar</em> where <em>foo</em>\n    is either <em>application, audio, image, message, model, multipart,\n    text,</em> or <em>video</em>.\n    ";
    }
    elsif ($stash->get('error') eq 'invalid_context') {
#line 884 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Context');
    $output .=  "\n    The context ";
#line 885 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('context');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is invalid (must be a number,\n    \"file\" or \"patch\").\n";
    }
    elsif ($stash->get('error') eq 'invalid_datasets') {
#line 889 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Datasets');
    $output .=  "\n    Invalid datasets <em>";
#line 890 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('datasets');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>. Only digits,\n    letters and colons are allowed.\n";
    }
    elsif ($stash->get('error') eq 'invalid_format') {
#line 894 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Format');
    $output .=  "\n    The format \"";
#line 895 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" is invalid (must be one of";
#line 898 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('formats');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'my_format'} = $_tt_value;
    $output .=  "\n      \"";
#line 897 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('my_format');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    ).\n";
    }
    elsif ($stash->get('error') eq 'invalid_group_ID') {
#line 902 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid group ID');
    $output .=  "\n    The group you specified doesn't exist.\n";
    }
    elsif ($stash->get('error') eq 'invalid_group_name') {
#line 906 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid group name');
    $output .=  "\n    The group you specified, ";
#line 907 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  ", is not valid here.\n";
    }
    elsif ($stash->get('error') eq 'invalid_maxrows') {
#line 910 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Max Rows');
    $output .=  "\n    The maximum number of rows, '";
#line 911 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('maxrows');
        
        &$_tt_filter($output);
    };
    
    $output .=  "', must be\n    a positive integer.\n";
    }
    elsif ($stash->get('error') eq 'invalid_parameter') {
#line 915 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Parameter');
    $output .=  "\n    The new value for ";
#line 916 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  " is invalid: ";
#line 916 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('err');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'invalid_product_name') {
#line 919 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Product Name');
    $output .=  "\n    The product name '";
#line 920 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is invalid or does not exist.\n";
    }
    elsif ($stash->get('error') eq 'invalid_regexp') {
#line 923 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid regular expression');
    $output .=  "\n    The regular expression you entered is invalid.\n";
    }
    elsif ($stash->get('error') eq 'invalid_user_group') {
#line 927 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid User Group');
#line 928 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['users', 0, 'size', 0]) > 1) {
    $output .=  " Users ";
    }
    else {
    $output .=  " User ";
    }
    
    $output .=  "\n    '";
#line 929 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['users', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
#line 930 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['users', 0, 'size', 0]) > 1) {
    $output .=  " are ";
    }
    else {
    $output .=  " is ";
    }
    
    $output .=  "\n    not able to edit the";
#line 934 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('product')) {
    $output .=  "\n      '";
#line 933 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
    }
    
    $output .=  "\n    ";
#line 935 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, 'product', 0]);
        
        &$_tt_filter($output);
    };
    
#line 942 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('bug_id')) {
    $output .=  "\n      for ";
#line 937 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " '";
#line 937 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.";
    }
    elsif ($stash->get('new')) {
    $output .=  "\n      and may not be included on a new ";
#line 939 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".";
    }
    else {
    $output .=  "\n      for at least one ";
#line 941 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " being changed.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'invalid_username') {
#line 945 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Username');
    $output .=  "\n    The name <tt>";
#line 946 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> is not a valid username.  \n    Either you misspelled it, or the person has not\n    registered for a ";
#line 948 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account.\n";
    }
    elsif ($stash->get('error') eq 'invalid_username_or_password') {
#line 951 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Username Or Password');
    $output .=  "\n    The username or password you entered is not valid.\n";
    }
    elsif ($stash->get('error') eq 'keyword_already_exists') {
#line 955 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Keyword Already Exists');
    $output .=  "\n    A keyword with the name ";
#line 956 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  " already exists.\n";
    }
    elsif ($stash->get('error') eq 'keyword_blank_description') {
#line 959 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Keyword Description Not Allowed');
    $output .=  "\n    You must enter a non-blank description for the keyword.\n     ";
    }
    elsif ($stash->get('error') eq 'keyword_blank_name') {
#line 963 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Keyword Name Not Allowed');
    $output .=  "\n    You must enter a non-blank name for the keyword.\n     ";
    }
    elsif ($stash->get('error') eq 'keyword_invalid_name') {
#line 967 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Keyword Name');
    $output .=  "\n    You may not use commas or whitespace in a keyword name.\n     ";
    }
    elsif ($stash->get('error') eq 'local_file_too_large') {
#line 971 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Local File Too Large');
    $output .=  "\n    Local file uploads must not exceed ";
#line 973 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxlocalattachment' ]]);
    $output .=  " MB in size.\n";
    }
    elsif ($stash->get('error') eq 'login_needed_for_password_change') {
#line 976 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
    $output .=  "\n    You must enter a login name when requesting to change your password.\n";
    }
    elsif ($stash->get('error') eq 'login_required_for_pronoun') {
#line 980 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
    $output .=  "\n    You can't use %user% without being logged in, because %user% refers\n    to your login name, which we don't know.\n";
    }
    elsif ($stash->get('error') eq 'milestone_already_exists') {
#line 985 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Already Exists');
#line 986 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'milestones.html' => 'About Milestones'  });
    $output .=  "\n    The milestone '";
#line 988 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' already exists for product '";
#line 989 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'milestone_blank_name') {
#line 992 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Milestone Name Not Allowed');
    $output .=  "\n    You must enter a name for this milestone.\n";
    }
    elsif ($stash->get('error') eq 'milestone_is_default') {
#line 996 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Default milestone not deletable');
#line 997 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'milestones.html' => 'About Milestones'  });
    $output .=  "\n    Sorry, but ";
#line 999 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['milestone', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " is the default milestone\n    for the '";
#line 1000 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['milestone', 0, 'product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' product, and so\n    it cannot be deleted.\n";
    }
    elsif ($stash->get('error') eq 'milestone_name_too_long') {
#line 1004 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Name Is Too Long');
    $output .=  "\n    The name of a milestone is limited to ";
#line 1005 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '20';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters. '";
#line 1006 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is too long (";
#line 1006 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'milestone_required') {
#line 1009 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Required');
    $output .=  "\n    You must select a target milestone for ";
#line 1010 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n    ";
#line 1011 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    if you are going to accept it.  Part of accepting \n    ";
#line 1013 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " is giving an estimate of when it will be fixed.\n";
    }
    elsif ($stash->get('error') eq 'milestone_sortkey_invalid') {
#line 1016 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Milestone Sortkey');
    $output .=  "\n    The sortkey '";
#line 1017 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is not in the range\n    ";
#line 1018 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '-32768';
        
        &$_tt_filter($output);
    };
    
    $output .=  " &le; sortkey &le;\n    ";
#line 1019 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '32767';
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'misarranged_dates') {
#line 1022 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Misarranged Dates');
    $output .=  "\n    Your start date (";
#line 1023 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('datefrom');
        
        &$_tt_filter($output);
    };
    
    $output .=  ") is after \n    your end date (";
#line 1024 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dateto');
        
        &$_tt_filter($output);
    };
    
    $output .=  ").\n    ";
    }
    elsif ($stash->get('error') eq 'missing_attachment_description') {
#line 1027 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Attachment Description');
    $output .=  "\n    You must enter a description for the attachment.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_category') {
#line 1031 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Category');
    $output .=  "\n    You did not specify a category for this series.\n";
    }
    elsif ($stash->get('error') eq 'missing_component') {
#line 1035 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Component');
#line 1036 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'components.html' => 'Creating a component'  });
    $output .=  "\n    Sorry, the product <em>";
#line 1038 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>\n    has to have at least one component in order for you to\n    enter ";
#line 1040 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.<br>";
#line 1047 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'editcomponents', $stash->get(['product', 0, 'id', 0]) ]])) {
    $output .=  "\n      <a href=\"editcomponents.cgi?action=add&amp;product=";
#line 1042 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Create\n      a new component</a>.";
    }
    else {
    $output .=  "\n      Please contact ";
#line 1045 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " and ask them\n      to add a component to this product.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'missing_content_type') {
#line 1050 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Content-Type');
    $output .=  "\n     You asked ";
#line 1051 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " to auto-detect the content type, but\n     your browser did not specify a content type when uploading the file, \n     so you must enter a content type manually.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_content_type_method') {
#line 1056 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Content-Type Determination Method');
    $output .=  "\n    You must choose a method for determining the content type,\n    either <em>auto-detect</em>, <em>select from list</em>, or <em>enter \n    manually</em>.\n        ";
    }
    elsif ($stash->get('error') eq 'missing_cookie') {
#line 1062 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Cookie');
    $output .=  "\n    Sorry, I seem to have lost the cookie that recorded\n    the results of your last search. I'm afraid you will have to start\n    again from the <a href=\"query.cgi\">search page</a>.\n          ";
    }
    elsif ($stash->get('error') eq 'missing_datasets') {
#line 1068 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Datasets Selected');
#line 1069 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You must specify one or more datasets to plot.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_frequency') {
#line 1073 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Frequency');
#line 1074 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You did not specify a valid frequency for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_name') {
#line 1078 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Name');
#line 1079 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You did not specify a name for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_query') {
#line 1083 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Search');
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'query.html' => ("Searching for " . $stash->get(['terms', 0, 'bugs', 0])), 'query.html#list' => ($stash->get(['terms', 0, 'Bug', 0]) . " lists")  });
    $output .=  "\n    The search named <em>";
#line 1086 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('queryname');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>";
#line 1091 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('sharer_id') && $stash->get('sharer_id') ne $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n      has not been made visible to you.";
    }
    else {
    $output .=  "\n      does not exist.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'missing_resolution') {
#line 1094 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Resolution Required');
    $output .=  "\n    A valid resolution is required to mark ";
#line 1095 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " as\n    ";
#line 1096 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('upper')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('status');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'move_bugs_disabled') {
#line 1099 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
#line 1099 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " Moving Disabled";
        $output;
    });
    
    $output .=  "\n    Sorry, ";
#line 1100 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " moving has been disabled. If you need\n    to move ";
#line 1101 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  ", please contact ";
#line 1101 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'missing_subcategory') {
#line 1104 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Subcategory');
    $output .=  "\n    You did not specify a subcategory for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_version') {
#line 1108 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Version');
#line 1109 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'versions.html' => 'Defining versions'  });
    $output .=  "\n    Sorry, the product <em>";
#line 1110 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>\n    has to have at least one version in order for you to\n    enter ";
#line 1112 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.<br>";
#line 1119 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'editcomponents', $stash->get(['product', 0, 'id', 0]) ]])) {
    $output .=  "\n      <a href=\"editversions.cgi?action=add&amp;product=";
#line 1114 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">Create\n      a new version</a>.";
    }
    else {
    $output .=  "\n      Please contact ";
#line 1117 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " and ask them\n      to add a version to this product.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'need_quip') {
#line 1122 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Quip Required');
#line 1123 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'quips.html' => 'About quips'  });
    $output .=  "\n    Please enter a quip in the text field.\n";
    }
    elsif ($stash->get('error') eq 'new_password_missing') {
#line 1127 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'New Password Missing');
    $output .=  "\n    You must enter a new password.\n";
    }
    elsif ($stash->get('error') eq 'no_axes_defined') {
#line 1131 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Axes Defined');
#line 1132 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n    You didn't define any axes to plot.\n";
    }
    elsif ($stash->get('error') eq 'no_bugs_chosen') {
#line 1136 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "No ";
#line 1136 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " Selected";
        $output;
    });
    
    $output .=  "\n    You apparently didn't choose any ";
#line 1137 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
#line 1142 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('action') eq 'modify') {
    $output .=  "\n      to modify.";
    }
    elsif ($stash->get('action') eq 'view') {
    $output .=  "\n      to view.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'no_bug_ids') {
#line 1145 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "No ";
#line 1145 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " Selected";
        $output;
    });
    
    $output .=  "\n    You didn't choose any ";
#line 1146 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to";
#line 1147 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('action') eq 'add') {
    $output .=  " add to ";
    }
    else {
    $output .=  " remove from ";
    }
    
    $output .=  "\n    the ";
#line 1148 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('tag');
        
        &$_tt_filter($output);
    };
    
    $output .=  " tag.\n";
    }
    elsif ($stash->get('error') eq 'no_bugs_in_list') {
#line 1151 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Delete Tag?');
    $output .=  "\n    This will remove all ";
#line 1152 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " from the\n    <em>";
#line 1153 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> tag. This will delete the tag completely. Click\n    <a href=\"buglist.cgi?cmdtype=dorem&amp;remaction=forget&amp;namedcmd=";
#line 1155 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;token=";
#line 1156 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ $stash->get('query_id'), $stash->get('name') ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">here</a>\n    if you really want to delete it.\n";
    }
    elsif ($stash->get('error') eq 'no_bugs_to_remove') {
#line 1160 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Tag Selected');
    $output .=  "\n    You didn't select a tag from which to remove ";
#line 1161 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats') {
#line 1164 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Cannot Find Duplicate Statistics');
#line 1165 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'extraconfig.html' => 'Setting up the collecstats.pl job'  });
    $output .=  "\n    There are no duplicate statistics for today (";
#line 1166 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('today');
        
        &$_tt_filter($output);
    };
    
    $output .=  ") \n    or yesterday.\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_today') {
#line 1170 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Today\'s Dupes File');
#line 1171 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'extraconfig.html' => 'Setting up the collecstats.pl job'  });
    $output .=  "\n    An error occurred opening today's dupes file: ";
#line 1172 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_whenever') {
#line 1175 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Previous Dupes File');
#line 1176 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'extraconfig.html' => 'Setting up the collecstats.pl job'  });
    $output .=  "\n    An error occurred opening ";
#line 1177 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('changedsince');
        
        &$_tt_filter($output);
    };
    
    $output .=  " days ago\n    (";
#line 1178 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('whenever');
        
        &$_tt_filter($output);
    };
    
    $output .=  ")'s dupes file:";
#line 1179 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_yesterday') {
#line 1182 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Yesterday\'s Dupes File');
#line 1183 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'extraconfig.html' => 'Setting up the collecstats.pl job'  });
    $output .=  "\n    There are no duplicate statistics for today (";
#line 1184 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('today');
        
        &$_tt_filter($output);
    };
    
    $output .=  "), \n    and an error\n    occurred opening yesterday's dupes file: ";
#line 1186 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_initial_bug_status') {
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', ("No Initial " . $stash->get(['terms', 0, 'Bug', 0]) . " Status"));
    $output .=  "\n    No ";
#line 1190 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " status is available on ";
#line 1190 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " creation.\n    Please report the problem to ";
#line 1191 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_new_quips') {
#line 1194 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No New Quips');
#line 1195 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'quips.html' => 'Controlling quip usage'  });
    $output .=  "\n    This site does not permit the addition of new quips.\n";
    }
    elsif ($stash->get('error') eq 'no_page_specified') {
#line 1199 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Page Specified');
    $output .=  "\n    You did not specify the id of a page to display.\n";
    }
    elsif ($stash->get('error') eq 'no_products') {
#line 1203 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Products');
#line 1204 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Setting up a product', 'components.html' => 'Adding components to products', 'groups.html' => 'Groups security'  });
    $output .=  "\n    Either no products have been defined to enter ";
#line 1207 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " against or you have not\n    been given access to any.\n";
    }
    elsif ($stash->get('error') eq 'no_valid_action') {
#line 1211 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No valid action specified');
    $output .=  "\n    Cannot edit ";
#line 1212 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ": no valid action was specified.\n";
    }
    elsif ($stash->get('error') eq 'number_not_numeric') {
#line 1215 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Numeric Value Required');
    $output .=  "\n    The value '";
#line 1216 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' in the \n    <em>";
#line 1217 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> field \n    is not a numeric value.\n";
    }
    elsif ($stash->get('error') eq 'number_too_large') {
#line 1221 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Number Too Large');
    $output .=  "\n    The value '";
#line 1222 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' in the \n    <em>";
#line 1223 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> field \n    is more than the maximum allowable value of '";
#line 1224 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max_num');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'number_too_small') {
#line 1227 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Number Too Small');
    $output .=  "\n    The value '";
#line 1228 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' \n    in the <em>";
#line 1229 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> field \n    is less than the minimum allowable value of '";
#line 1230 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('min_num');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'object_not_specified') {
#line 1233 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('type', do {
        my $output = '';
#line 1233 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->include('object_name', { 'class' => $stash->get('class') });
        $output;
    });
    
#line 1235 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
#line 1234 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('ucfirst')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  " Not \n    Specified";
        $output;
    });
    
    $output .=  "\n    You must select/enter a ";
#line 1236 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'object_does_not_exist') {
#line 1239 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('type', do {
        my $output = '';
#line 1239 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->include('object_name', { 'class' => $stash->get('class') });
        $output;
    });
    
#line 1240 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Invalid ";
#line 1240 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('ucfirst')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n    There is no ";
#line 1241 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 1246 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['id', 0, 'defined', 0])) {
    $output .=  "\n      with the id '";
#line 1243 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
    }
    else {
    $output .=  "\n      named '";
#line 1245 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
    }
    
#line 1249 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['product', 0, 'defined', 0])) {
    $output .=  "\n      in the '";
#line 1248 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' product";
    }
    
    $output .=  ".";
#line 1253 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('class') eq 'Bugzilla::User') {
    $output .=  "\n      Either you mis-typed the name or that user has not yet registered\n      for a ";
#line 1252 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'old_password_incorrect') {
#line 1256 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Incorrect Old Password');
    $output .=  "\n    You did not enter your old password correctly.\n";
    }
    elsif ($stash->get('error') eq 'old_password_required') {
#line 1260 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Old Password Required');
    $output .=  "\n    You must enter your old password to change your email address.\n";
    }
    elsif ($stash->get('error') eq 'password_change_requests_not_allowed') {
#line 1264 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Password Change Requests Not Allowed');
    $output .=  "\n    The system is not configured to allow password change requests.\n";
    }
    elsif ($stash->get('error') eq 'passwords_dont_match') {
#line 1268 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Passwords Don\'t Match');
    $output .=  "\n    The two passwords you entered did not match.\n";
    }
    elsif ($stash->get('error') eq 'password_too_long') {
#line 1272 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Password Too Long');
    $output .=  "\n    The password must be no more than\n    ";
#line 1274 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '16';
        
        &$_tt_filter($output);
    };
    
    $output .=  " characters long.\n";
    }
    elsif ($stash->get('error') eq 'password_too_short') {
#line 1277 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Password Too Short');
    $output .=  "\n    The password must be at least\n    ";
#line 1279 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '3';
        
        &$_tt_filter($output);
    };
    
    $output .=  " characters long.\n";
    }
    elsif ($stash->get('error') eq 'patch_too_large') {
#line 1282 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'File Too Large');
    $output .=  "\n    The file you are trying to attach is ";
#line 1283 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filesize');
        
        &$_tt_filter($output);
    };
    
    $output .=  " \n    kilobytes (KB) in size.\n    Patches cannot be more than ";
#line 1285 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxattachmentsize' ]]);
    $output .=  " KB in size.\n    Try splitting your patch into several pieces.\n";
    }
    elsif ($stash->get('error') eq 'product_access_denied') {
    $output .=  "\n    Either the product '";
#line 1289 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' does not exist or\n    you don't have access to it.\n";
    }
    elsif ($stash->get('error') eq 'product_doesnt_exist') {
#line 1293 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Product Does Not Exist');
    $output .=  "\n    The product '";
#line 1294 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'product_illegal_group') {
#line 1297 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Group');
#line 1298 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " is not an active ";
#line 1298 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " group\n    and so you cannot edit group controls for it.\n";
    }
    elsif ($stash->get('error') eq 'product_illegal_votes') {
#line 1302 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Votes Must Be Non-negative');
#line 1303 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    '";
#line 1304 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is an invalid value for the\n    <em>";
#line 1312 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('field') eq 'votesperuser') {
    $output .=  "\n      Votes Per User";
    }
    elsif ($stash->get('field') eq 'maxvotesperbug') {
    $output .=  "\n      Maximum Votes Per ";
#line 1309 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    }
    elsif ($stash->get('field') eq 'votestoconfirm') {
    $output .=  "\n      Votes To Confirm";
    }
    
    $output .=  "\n    </em> field, which should contain a non-negative number.\n";
    }
    elsif ($stash->get('error') eq 'product_name_already_in_use') {
#line 1316 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product name already in use');
#line 1317 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    The product name '";
#line 1318 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' already exists.\n  ";
    }
    elsif ($stash->get('error') eq 'product_name_diff_in_case') {
#line 1321 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product name differs only in case');
#line 1322 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    The product name '";
#line 1323 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' differs from existing \n    product '";
#line 1324 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('existing_product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' only in case.\n";
    }
    elsif ($stash->get('error') eq 'product_name_too_long') {
#line 1327 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product name too long');
    $output .=  "\n    The name of a product is limited to ";
#line 1328 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '64';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters. '";
#line 1329 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is too long (";
#line 1329 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'product_must_define_defaultmilestone') {
#line 1332 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Must define new default milestone');
#line 1333 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'milestones.html' => 'About Milestones'  });
    $output .=  "\n    You must <a href=\"editmilestones.cgi?action=add&amp;product=";
#line 1335 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    create the milestone '";
#line 1336 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('milestone');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'</a> before\n    it can be made the default milestone for product '";
#line 1337 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'product_admin_denied') {
#line 1340 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product Access Denied');
    $output .=  "\n    You are not allowed to edit properties of product '";
#line 1341 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'product_blank_name') {
#line 1344 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Product Name Not Allowed');
#line 1345 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    You must enter a name for the product.\n  ";
    }
    elsif ($stash->get('error') eq 'product_disabled') {
#line 1349 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Product closed for ";
#line 1349 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " Entry";
        $output;
    });
    
#line 1350 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    Sorry, entering ";
#line 1351 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into the\n    product <em>";
#line 1352 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> has been disabled.\n";
    }
    elsif ($stash->get('error') eq 'product_edit_denied') {
#line 1355 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product Edit Access Denied');
#line 1356 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'groups.html' => 'Group security'  });
    $output .=  "\n    You are not permitted to edit ";
#line 1358 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " in product \n    ";
#line 1359 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'product_has_bugs') {
#line 1362 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Product has ";
#line 1362 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
#line 1363 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    There are ";
#line 1364 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 1364 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " entered for this product!\n    You must move those ";
#line 1365 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another product before you\n    can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'product_must_have_description') {
#line 1369 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product needs Description');
#line 1370 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products'  });
    $output .=  "\n    You must enter a description for this product.\n";
    }
    elsif ($stash->get('error') eq 'product_must_have_version') {
#line 1374 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Product needs Version');
#line 1375 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'versions.html' => 'Administering versions'  });
    $output .=  "\n    You must enter a valid version to create a new product.\n";
    }
    elsif ($stash->get('error') eq 'product_not_specified') {
#line 1380 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Product Specified');
#line 1381 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'products.html' => 'Administering products', 'components.html' => 'Administering components', 'milestones.html' => 'Administering milestones', 'versions.html' => 'Administering versions'  });
    $output .=  "\n    No product specified when trying to edit components, milestones, versions\n    or product.\n";
    }
    elsif ($stash->get('error') eq 'query_name_exists') {
#line 1389 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Search Name Already In Use');
    $output .=  "\n    The name <em>";
#line 1390 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> is already used by another\n    saved search. You first have to\n    <a href=\"buglist.cgi?cmdtype=dorem&amp;remaction=forget&amp;namedcmd=";
#line 1393 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;token=";
#line 1394 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['issue_hash_token', [ [ $stash->get('query_id'), $stash->get('name') ] ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">delete</a>\n    it if you really want to use this name.\n";
    }
    elsif ($stash->get('error') eq 'query_name_missing') {
#line 1398 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Search Name Specified');
#line 1 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'query.html#list' => ($stash->get(['terms', 0, 'Bug', 0]) . " lists")  });
    $output .=  "\n    You must enter a name for your search.\n";
    }
    elsif ($stash->get('error') eq 'query_name_too_long') {
#line 1403 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Query Name Too Long');
    $output .=  "\n    The name of the query must be less than ";
#line 1404 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '64';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    characters long.\n";
    }
    elsif ($stash->get('error') eq 'quicksearch_unknown_field') {
#line 1408 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown QuickSearch Field');
#line 1418 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['fields', 0, 'unique', 0, 'size', 0]) eq 1) {
    $output .=  "\n      Field <code>";
#line 1410 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['fields', 0, 'first', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> is not a known field.";
    }
    else {
    $output .=  "\n      Fields";
#line 1416 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['fields', 0, 'unique', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'field'} = $_tt_value;
    $output .=  "\n         <code>";
#line 1414 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code>";
#line 1415 "template/en/default/global/user-error.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ', ';
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      are not known fields.";
    }
    
    $output .=  "\n    The legal field names are <a href=\"page.cgi?id=quicksearchhack.html\">listed here</a>.\n";
    }
    elsif ($stash->get('error') eq 'reassign_to_empty') {
#line 1422 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Reassignment');
    $output .=  "\n    To reassign ";
#line 1423 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  ", you must provide an address for\n    the new assignee.\n";
    }
    elsif ($stash->get('error') eq 'require_component') {
#line 1427 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Component Needed');
    $output .=  "\n    To file this ";
#line 1428 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", you must first choose a component.\n    If necessary, just guess.\n";
    }
    elsif ($stash->get('error') eq 'require_new_password') {
#line 1432 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'New Password Needed');
    $output .=  "\n    You cannot change your password without choosing a new one.\n";
    }
    elsif ($stash->get('error') eq 'require_summary') {
#line 1436 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Summary Needed');
    $output .=  "\n    You must enter a summary for this ";
#line 1437 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'resolution_cant_clear') {
#line 1440 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
#line 1440 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get('bug_id') ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  " is \n    closed, so you cannot clear its resolution.\n";
    }
    elsif ($stash->get('error') eq 'resolution_not_allowed') {
#line 1444 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Resolution Not Allowed');
    $output .=  "\n    You cannot set a resolution for open ";
#line 1445 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'saved_search_used_by_whines') {
#line 1448 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Saved Search In Use');
#line 1449 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'whining.html' => 'About Whining'  });
    $output .=  "\n    The saved search <em>";
#line 1450 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('search_name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em> is being used \n    by <a href=\"editwhines.cgi\">Whining events</a> with the following subjects:\n    ";
#line 1452 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('subjects');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'search_content_without_matches') {
#line 1455 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Search');
    $output .=  "\n    The \"content\" field can only be used with \"matches\" search \n    and the \"matches\" search can only be used with the \"content\"\n    field.\n";
    }
    elsif ($stash->get('error') eq 'series_already_exists') {
#line 1461 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Series Already Exists');
#line 1462 "template/en/default/global/user-error.html.tmpl"
    $stash->set('docslinks', { 'reporting.html' => 'Reporting'  });
    $output .=  "\n      A series named <em>";
#line 1463 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'category', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " /\n      ";
#line 1464 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'subcategory', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " / \n      ";
#line 1465 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</em>\n      already exists.\n    ";
    }
    elsif ($stash->get('error') eq 'sidebar_supports_mozilla_only') {
    $output .=  "\n    Sorry - sidebar.cgi currently only supports Mozilla based web browsers.\n    <a href=\"http://www.mozilla.org\">Upgrade today</a>. :-)\n";
    }
    elsif ($stash->get('error') eq 'still_unresolved_bugs') {
#line 1498 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('dependency_count') eq 1) {
#line 1474 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "# <a href=\"show_bug.cgi?id=";
#line 1474 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 1474 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n      still has ";
#line 1475 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'dependencies', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " unresolved";
#line 1480 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['dependencies', 0, 0, 0, 'dependencies', 0]) eq 1) {
    $output .=  "\n        dependency";
    }
    else {
    $output .=  "\n        dependencies";
    }
    
    $output .=  ". Show\n      <a href=\"showdependencytree.cgi?id=";
#line 1481 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;hide_resolved=1\">Dependency\n      Tree</a>.";
    }
    else {
    $output .=  "\n      There are ";
#line 1484 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dependency_count');
        
        &$_tt_filter($output);
    };
    
    $output .=  " open ";
#line 1484 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " which\n      have unresolved dependencies.\n      <br>";
#line 1497 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('dependencies');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'bug'} = $_tt_value;
#line 1488 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "# <a href=\"show_bug.cgi?id=";
#line 1488 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 1488 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n        has ";
#line 1489 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dependencies', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  " open";
#line 1494 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['bug', 0, 'dependencies', 0]) eq 1) {
    $output .=  "\n          dependency.";
    }
    else {
    $output .=  "\n          dependencies.";
    }
    
    $output .=  "\n        (<a href=\"showdependencytree.cgi?id=";
#line 1495 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;hide_resolved=1\">Dependency\n        Tree</a>)<br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'sudo_invalid_cookie') {
#line 1501 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Sudo Cookie');
    $output .=  "\n    Your sudo cookie is invalid. Either it expired or you didn't start\n    a sudo session correctly. Refresh the page or load another page\n    to continue what you are doing as yourself.\n";
    }
    elsif ($stash->get('error') eq 'sudo_illegal_action') {
#line 1507 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Impersonation Not Authorized');
#line 1514 "template/en/default/global/user-error.html.tmpl"
    if (! $stash->get(['sudoer', 0, 'in_group', [ 'bz_sudoers' ]])) {
    $output .=  "\n      You are not allowed to impersonate users.";
    }
    elsif ($stash->get('target_user') && $stash->get(['target_user', 0, 'in_group', [ 'bz_sudo_protect' ]])) {
    $output .=  "\n      You are not allowed to impersonate ";
#line 1511 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['target_user', 0, 'identity', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".";
    }
    else {
    $output .=  "\n      The user you tried to impersonate doesn't exist.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'sudo_in_progress') {
#line 1517 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Session In Progress');
    $output .=  "\n    A sudo session (impersonating ";
#line 1518 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('target');
        
        &$_tt_filter($output);
    };
    
    $output .=  ") is in progress.  \n    End that session (using the link in the footer) before starting a new one.\n";
    }
    elsif ($stash->get('error') eq 'sudo_password_required') {
#line 1522 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Password Required');
    $output .=  "\n    Your ";
#line 1523 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " password is required to begin a sudo \n    session. Please <a href=\"relogin.cgi?action=prepare-sudo&target_login=";
#line 1525 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('target_login');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&reason=";
#line 1526 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('reason');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">go back</a> and enter your password.\n    ";
    }
    elsif ($stash->get('error') eq 'sudo_preparation_required') {
#line 1529 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Preparation Required');
    $output .=  "\n    You may not start a sudo session directly.  Please\n    <a href=\"relogin.cgi?action=prepare-sudo&target_login=";
#line 1532 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('target_login');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&reason=";
#line 1533 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('reason');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">start your session normally</a>.\n";
    }
    elsif ($stash->get('error') eq 'sudo_protected') {
#line 1536 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'User Protected');
    $output .=  "\n    The user ";
#line 1537 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('login');
        
        &$_tt_filter($output);
    };
    
    $output .=  " may not be impersonated by sudoers.\n";
    }
    elsif ($stash->get('error') eq 'too_many_votes_for_bug') {
#line 1540 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Vote');
#line 1541 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    You may only use at most ";
#line 1542 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes for a single\n    ";
#line 1543 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " in the\n    <tt>";
#line 1544 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> product, but you are trying to\n    use ";
#line 1545 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'too_many_votes_for_product') {
#line 1548 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Vote');
#line 1549 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    You tried to use ";
#line 1550 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes in the\n    <tt>";
#line 1551 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> product, which exceeds the maximum of\n    ";
#line 1552 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$_tt_filter($output);
    };
    
    $output .=  " votes for this product.\n";
    }
    elsif ($stash->get('error') eq 'token_does_not_exist') {
#line 1555 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Token Does Not Exist');
    $output .=  "\n    The token you submitted does not exist, has expired, or has\n    been canceled.\n";
    }
    elsif ($stash->get('error') eq 'too_soon_for_new_token') {
#line 1560 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Too Soon For New Token');
    $output .=  "\n    You have requested";
#line 1566 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('type') eq 'password') {
    $output .=  "\n      a password";
    }
    elsif ($stash->get('type') eq 'account') {
    $output .=  "\n      an account";
    }
    
    $output .=  "\n    token too recently to request another. Please wait a while and try again.\n";
    }
    elsif ($stash->get('error') eq 'unknown_keyword') {
#line 1570 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Keyword');
    $output .=  "\n    <code>";
#line 1571 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('keyword');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> is not a known keyword.\n    The legal keyword names are <a href=\"describekeywords.cgi\">listed here</a>.\n";
    }
    elsif ($stash->get('error') eq 'unknown_tab') {
#line 1575 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Tab');
    $output .=  "\n    <code>";
#line 1576 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('current_tab_name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> is not a legal tab name.\n";
    }
    elsif ($stash->get('error') eq 'version_already_exists') {
#line 1579 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Version Already Exists');
#line 1580 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'versions.html' => 'Administering versions'  });
    $output .=  "\n    The version '";
#line 1581 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' already exists for product '";
#line 1582 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'version_blank_name') {
#line 1585 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Version Name Not Allowed');
    $output .=  "\n    You must enter a name for this version.\n";
    }
    elsif ($stash->get('error') eq 'version_has_bugs') {
#line 1589 "template/en/default/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Version has ";
#line 1589 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
    $output .=  "\n    There are ";
#line 1590 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$_tt_filter($output);
    };
    
    $output .=  " ";
#line 1590 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " associated with this\n    version! You must reassign those ";
#line 1591 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another version\n    before you can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'version_not_specified') {
#line 1595 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'No Version Specified');
    $output .=  "\n    No version specified when trying to edit versions.\n";
    }
    elsif ($stash->get('error') eq 'users_deletion_disabled') {
#line 1599 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Deletion not activated');
#line 1600 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'useradmin.html' => 'User administration'  });
    $output .=  "\n    Sorry, the deletion of user accounts is not allowed.\n";
    }
    elsif ($stash->get('error') eq 'user_has_responsibility') {
#line 1604 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Can\'t Delete User Account');
#line 1605 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'useradmin.html' => 'User administration'  });
    $output .=  "\n    The user you want to delete is set up as the default ";
#line 1606 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n    assignee";
#line 1610 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n      or QA contact";
    }
    
    $output .=  "\n    for at least one component.\n    For this reason, you cannot delete the account at this time.\n";
    }
    elsif ($stash->get('error') eq 'user_access_by_id_denied') {
#line 1615 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'User Access By Id Denied');
    $output .=  "\n    Logged-out users cannot use the \"ids\" argument to this function\n    to access any user information.\n";
    }
    elsif ($stash->get('error') eq 'user_access_by_match_denied') {
#line 1620 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'User-Matching Denied');
    $output .=  "\n    Logged-out users cannot use the \"match\" argument to this function\n    to access any user information.\n";
    }
    elsif ($stash->get('error') eq 'user_login_required') {
#line 1625 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
#line 1626 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'useradmin.html' => 'User administration'  });
    $output .=  "\n    You must enter a login name for the new user.\n";
    }
    elsif ($stash->get('error') eq 'user_match_failed') {
#line 1630 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Match Failed');
    $output .=  "\n    <tt>";
#line 1631 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</tt> does not exist or you are not allowed \n    to see that user.\n";
    }
    elsif ($stash->get('error') eq 'user_not_insider') {
#line 1635 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'User Not In Insidergroup');
    $output .=  "\n    Sorry, but you are not allowed to (un)mark comments or attachments\n    as private.\n";
    }
    elsif ($stash->get('error') eq 'votes_must_be_nonnegative') {
#line 1640 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Votes Must Be Non-negative');
#line 1641 "template/en/default/global/user-error.html.tmpl"
    $stash->set('admindocslinks', { 'voting.html' => 'Setting up the voting feature'  });
    $output .=  "\n    Only use non-negative numbers for your ";
#line 1642 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " votes.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_cancelling_email_change') {
#line 1645 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to cancel an email address change.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_changing_passwd') {
#line 1649 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to change your password.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_confirming_email_change') {
#line 1653 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to change your email address.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_creating_account') {
#line 1657 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to create a user account.\n";
    }
    elsif ($stash->get('error') eq 'xmlrpc_invalid_value') {
    $output .=  "\n    \"";
#line 1661 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" is not a valid value for a\n    &lt;";
#line 1662 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    $output .=  "&gt; field. (See the XML-RPC specification\n    for details.)\n";
    }
    elsif ($stash->get('error') eq 'zero_length_file') {
#line 1666 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'File Is Empty');
    $output .=  "\n    The file you are trying to attach is empty, does not exist, or you don't\n    have permission to read it.\n";
    }
    elsif ($stash->get('error') eq 'illegal_user_id') {
#line 1671 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal User ID');
    $output .=  "\n    User ID '";
#line 1672 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('userid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "' is not valid integer.\n";
    }
    else {
    $output .=  "\n\n    ";
#line 1677 "template/en/default/global/user-error.html.tmpl"
    $stash->set('error_message', $stash->get(['Hook', 0, 'process', [ 'errors' ]]));
    $output .=  "\n";
#line 1686 "template/en/default/global/user-error.html.tmpl"
    if (! $stash->get('error_message')) {
#line 1680 "template/en/default/global/user-error.html.tmpl"
    $stash->set('title', 'Error string not found');
    $output .=  "\n      The user error string <code>";
#line 1681 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</code> was not found.\n      Please send email to ";
#line 1682 "template/en/default/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " describing the steps taken\n      to obtain this message.";
    }
    else {
#line 1685 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$_tt_filter($output);
    };
    
    }
    
    }
    
        $output;
    });
    
    $output .=  "\n\n";
#line 1691 "template/en/default/global/user-error.html.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
#line 1699 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['Bugzilla', 0, 'error_mode', 0]) ne '0') {
#line 1697 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['Bugzilla', 0, 'usage_mode', 0]) eq '0') {
#line 1694 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 1696 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('txt')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$_tt_filter($output);
    };
    
    }
    
#line 1698 "template/en/default/global/user-error.html.tmpl"
    $context->throw('return', '', \$output);
    }
    
    $output .=  "\n";
#line 1703 "template/en/default/global/user-error.html.tmpl"
    if (!($stash->get('header_done'))) {
#line 1702 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    }
    
    $output .=  "\n";
#line 1705 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->process('global/docslinks.html.tmpl', { 'docslinks' => $stash->get('docslinks'), 'admindocslinks' => $stash->get('admindocslinks') });
    $output .=  "\n\n<table cellpadding=\"20\">\n  <tr>\n    <td id=\"error_msg\" class=\"throw_error\">";
#line 1713 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n    </td>\n  </tr>\n</table>\n\n<p>\n  Please press <b>Back</b> and try again.\n</p>\n\n";
    $output .=  "\n";
#line 1726 "template/en/default/global/user-error.html.tmpl"
    $stash->set('namedcmd', $stash->get(['Bugzilla', 0, 'cgi', 0, 'param', [ 'namedcmd' ]]));
#line 1727 "template/en/default/global/user-error.html.tmpl"
    $stash->set('sharer_id', $stash->get(['Bugzilla', 0, 'cgi', 0, 'param', [ 'sharer_id' ]]));
#line 1744 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get('namedcmd') && $stash->get('error') ne 'missing_query' && $stash->get('error') ne 'saved_search_used_by_whines' && ! $stash->get('sharer_id')) {
    $output .=  "\n  <p>  \n    Alternatively, you can    \n    <a href=\"buglist.cgi?cmdtype=dorem&amp;remaction=forget&amp;namedcmd=";
#line 1734 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('namedcmd');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">forget</a>\n                  ";
#line 1740 "template/en/default/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'user', 0, 'queries', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'q'} = $_tt_value;
#line 1739 "template/en/default/global/user-error.html.tmpl"
    if ($stash->get(['q', 0, 'name', 0]) eq $stash->get('namedcmd')) {
    $output .=  "\n        or <a href=\"query.cgi?";
#line 1738 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['q', 0, 'url', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">edit</a>";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    \n    the saved search '";
#line 1742 "template/en/default/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('namedcmd');
        
        &$_tt_filter($output);
    };
    
    $output .=  "'.\n  </p>";
    }
    
    $output .=  "            \n";
#line 1746 "template/en/default/global/user-error.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'object_name' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 1764 "template/en/default/global/user-error.html.tmpl"
        if ($stash->get('class') eq 'Bugzilla::User') {
        $output .=  "\n    user";
        }
        elsif ($stash->get('class') eq 'Bugzilla::Component') {
        $output .=  "\n    component";
        }
        elsif ($stash->get('class') eq 'Bugzilla::Version') {
        $output .=  "\n    version";
        }
        elsif ($stash->get('class') eq 'Bugzilla::Milestone') {
        $output .=  "\n    milestone";
        }
        elsif ($stash->get('class') eq 'Bugzilla::Status') {
        $output .=  "\n    status";
        }
        elsif ($stash->get('class') eq 'Bugzilla::Field') {
        $output .=  "\n    field";
        }
        elsif ($stash->set('matches', $stash->get(['class', 0, 'match', [ '^Bugzilla::Field::Choice::(.+)' ]]))) {
#line 1762 "template/en/default/global/user-error.html.tmpl"
        $stash->set('field_name', $stash->get(['matches', 0, 0, 0]));
#line 1763 "template/en/default/global/user-error.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['field_descs', 0, $stash->get('field_name'), 0]);
            
            &$_tt_filter($output);
        };
        
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
